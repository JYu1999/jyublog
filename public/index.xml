<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Me are 結語JYu</title>
        <link>https://jyu1999.com/</link>
        <description>Recent content on Me are 結語JYu</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <lastBuildDate>Sun, 18 Jun 2023 12:14:11 +0800</lastBuildDate><atom:link href="https://jyu1999.com/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>SOLID 原則（一）：Top-down 看 SOLID</title>
        <link>https://jyu1999.com/post/solid/</link>
        <pubDate>Sun, 18 Jun 2023 12:14:11 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/solid/</guid>
        <description>&lt;img src="https://jyu1999.com/post/solid/0.jpeg" alt="Featured image of post SOLID 原則（一）：Top-down 看 SOLID" /&gt;&lt;p&gt;(封面圖片來源：https://www.linkedin.com/pulse/solid-principles-razneeknth-pradhan/)&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在幾個月前我正在求職時，看到很多職缺上面都有提到「SOLID」這個關鍵字，當時的我只大概知道 SOLID 是有關於物件導向的一種設計原則，但具體裡面每個原則在幹嘛也不太清楚。&lt;/p&gt;
&lt;p&gt;直到最近終於有空好好來看一下這個大名鼎鼎（？）的 SOLID，看了很多文章，不管中文英文的，都覺得有看沒有懂，於是想要寫文章整理一下自己的思緒。&lt;/p&gt;
&lt;p&gt;由於我也只是初步研究，不敢保證正確性，如果有覺得任何值得討論的地方，歡迎跟我說喔～&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;solid-是什麼為什麼需要&#34;&gt;SOLID 是什麼？為什麼需要？&lt;/h2&gt;
&lt;p&gt;SOLID 是五個設計原則的縮寫，分別為：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SRP: 單一職責原則&lt;/li&gt;
&lt;li&gt;OCP: 開放-封閉原則&lt;/li&gt;
&lt;li&gt;LSP: Liskov 替換原則&lt;/li&gt;
&lt;li&gt;ISP: 介面隔離原則&lt;/li&gt;
&lt;li&gt;DIP: 依賴反向原則&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我們在後續文章會再解釋每一個原則的細節，在這篇文章我想著重在「目標」上。&lt;/p&gt;
&lt;p&gt;我們先來看一下 &lt;em&gt;Clean Architecture&lt;/em&gt; 這本書對於 SOLID 目標的描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;這些原則的目標是建立中層級的軟體架構，這樣的結構包含：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;能容忍變化&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;容易理解&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;是在許多軟體系統中能夠使用的元件的基礎&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;ok，我在看這句話的時候產生了兩個疑惑：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;中層級是什麼？&lt;/li&gt;
&lt;li&gt;元件是什麼？&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;元件component&#34;&gt;元件（Component）&lt;/h3&gt;
&lt;p&gt;因為中層級的解釋涉及到元件，所以我們先看到第二個問題，元件是什麼？&lt;/p&gt;
&lt;p&gt;在 &lt;em&gt;Clean Architecture&lt;/em&gt; 裡面是這樣定義的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;元件（Component）是部署（Deployment）的單位。&lt;/em&gt;
&lt;em&gt;他們是系統在部署時最小的部分實體。&lt;/em&gt;
&lt;em&gt;在 Java 中，他們是 jar 檔。&lt;/em&gt;
&lt;em&gt;在 Ruby 中，他們是 Gem 檔。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果舉一反三的話，在 PHP 中，Composer package 應該就是元件？&lt;/p&gt;
&lt;h3 id=&#34;中層級&#34;&gt;中層級&lt;/h3&gt;
&lt;h4 id=&#34;中層級的架構&#34;&gt;中層級的架構&lt;/h4&gt;
&lt;p&gt;我們再來看第一個問題，在 &lt;em&gt;Clean Architecture&lt;/em&gt; 的說明如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;「中層級」是指這些原則是程式設計師在模組層級工作時應用的原則。他們應用在程式碼層級之上，並且有助於定義模組和元件內使用的軟體結構類型。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ok，這邊又出現了一個新名詞：模組（module）。&lt;/p&gt;
&lt;p&gt;模組和元件有何不同，我想這很難有一個明確的定義。不過我個人是同意在 &lt;a class=&#34;link&#34; href=&#34;https://stackoverflow.com/questions/2702816/module-vs-component-design&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;這篇文章&lt;/a&gt; 的回答所看到的描述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;Both component and module are used to refer to a group of functions or a part of a function. Module is more logical, for example: module Finance, module HR, module Manufacturing&amp;hellip; in ERP system. On the other hand, component is more physical. In software, it can be a dll, ocx, exe,&amp;hellip;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;怕有人看不懂，協助翻譯一下XD。以一個 ERP 系統來說，所謂的模組可能有「金流模組」、「人力管理模組」、「製造管理模組」。而為了要去實作一個「製造管理模組」，我們可能需要很多的元件。大家可以想像，我們有時候在實作一個功能的時候，是不是也需要引用很多的套件呢？&lt;/p&gt;
&lt;p&gt;所以我們也許可以這樣理解「中層級」：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;工程師會寫一行一行的 Code，這些 Code 屬於「程式碼層級」；&lt;/li&gt;
&lt;li&gt;一行一行的 Code 組成了一個 Class，成為「類別層級」；&lt;/li&gt;
&lt;li&gt;很多個 Class 組合而成一個「元件」，成為「元件層級」；&lt;/li&gt;
&lt;li&gt;很多個「元件」組合起來，變成「模組」，成為「模組層級」；&lt;/li&gt;
&lt;li&gt;很多個「模組」組合起來，最終成為「系統層級」&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;而所謂中層級，就是「程式碼層級」、「類別層級」、「元件層級」、「模組層級」的集合。至於「系統層級」算不算在「中層級」，我自己覺得不算～&lt;/p&gt;
&lt;h4 id=&#34;中層級的工作&#34;&gt;中層級的工作&lt;/h4&gt;
&lt;p&gt;到這邊我又有疑惑了，所以「中層級」到底主要在幹嘛？&lt;/p&gt;
&lt;p&gt;在 &lt;em&gt;Clean Architecture&lt;/em&gt; 裡面有一張圖：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/solid/1.jpg&#34;
	width=&#34;655&#34;
	height=&#34;481&#34;
	srcset=&#34;https://jyu1999.com/post/solid/1_hu749f096a81d823dd1826a8206967e9a8_79931_480x0_resize_q75_box.jpg 480w, https://jyu1999.com/post/solid/1_hu749f096a81d823dd1826a8206967e9a8_79931_1024x0_resize_q75_box.jpg 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;來源：https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;136&#34;
		data-flex-basis=&#34;326px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在這個架構中，愈外圈被視為愈低層，而內圈被視為高層。&lt;/p&gt;
&lt;p&gt;我們其實可以這樣理解：「離I/O（輸入、輸出）越遠的元件層級越高，離I/O越近的層級越低」。這其實也很容易理解，在公司中，櫃台小姐離I/O（接電話、接待訪客）最近，通常層級比較低。董事長、總經理離I/O很遠，層級最高（通常看高階主管的辦公室位置離大門遠近就可猜出層級高低XD）。&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;所以我們大概可以知道，所謂的「中層級」就是 Use Cases 和 Interface Adapters 這兩層。而這兩層大概在幹嘛呢？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Use Cases Layer: 簡單解釋的話，就是該應用的核心商業邏輯。&lt;/li&gt;
&lt;li&gt;Interface Adapters Layer: 我們所熟知的 MVC 架構其實就在這一層，&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;📕
其實我自己也沒有很了解這兩層的具體差異在哪裡，上網找是有人說，可能要軟體架構足夠大才會有感覺QAQ&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;具體每一層在幹嘛，大家可以參考 &lt;a class=&#34;link&#34; href=&#34;https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Uncle Bob 的網站&lt;/a&gt;，會有比較詳細的解說。&lt;/p&gt;
&lt;h3 id=&#34;小結&#34;&gt;小結&lt;/h3&gt;
&lt;p&gt;ok，我們了解了元件和中層級，我們再重新回頭看一下 SOLID 的目標：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;這些原則的目標是建立中層級的軟體架構，這樣的結構包含：&lt;/em&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;能容忍變化&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;容易理解&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;是在許多軟體系統中能夠使用的元件的基礎&lt;/em&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;有更看得懂 SOLID 的目標了嗎（拜託說有🥺），一言以蔽之的話，SOLID 原則就是在幫助我們建造更「乾淨」的中層級。&lt;/p&gt;
&lt;p&gt;這個中層級是要能容忍變化的，不能需求一變，就要大改程式碼。而且這個架構是要能容易被理解的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;solid-的手段&#34;&gt;SOLID 的手段？&lt;/h2&gt;
&lt;p&gt;那具體來說，SOLID 原則能怎麼協助我們呢？一樣，我們看 &lt;em&gt;Clean Architecture&lt;/em&gt; 裡面是怎麼說的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;SOLID 原則告訴我們該如何將我們的函式和資料結構安排到類別（Class）中，以及這些類別該如何相互關聯。&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我很喜歡書中對於 Clean Code（整潔的程式碼） 和 Clean Architecture 的比喻：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;從某方面來說，如果磚塊（Code）做得不好，那麼建築物的架構（Architecture）也就不重要了。
從另一方面來說，你也能用精心製作的磚塊來製造大量的垃圾。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以，我們平時寫 Code 的習慣（規範？），例如有意義的 function 名稱、一行不能超過幾個字等等，就是屬於 Clean Code 的範疇。&lt;/p&gt;
&lt;p&gt;我們寫 Code 的習慣愈好，做出來的磚頭就愈精良。但光是磚頭精良是不夠的，如果亂拼的話還是可能會出問題。&lt;/p&gt;
&lt;p&gt;所以我們需要仔細思考，哪個磚頭要放在哪裡，才能讓房子更加穩固。&lt;/p&gt;
&lt;p&gt;而這個「磚頭要放在哪裡」的 Guideline 就是 SOLID 原則。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;在這一篇中我簡單講解了為什麼需要 SOLID 原則，接下來我會針對每一個原則逐一解說。&lt;/p&gt;
&lt;p&gt;如果有任何問題，歡迎討論！&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;http://teddy-chen-tw.blogspot.com/2018/07/clean-architecture4.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Clean Architecture（4）：架構三原則首部曲—分層原則&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>好想工作室 — 後端 (Backend Camp) 培訓心得（六）：找工作之前</title>
        <link>https://jyu1999.com/post/goodidea-mind-6/</link>
        <pubDate>Wed, 07 Jun 2023 19:18:36 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/goodidea-mind-6/</guid>
        <description>&lt;img src="https://jyu1999.com/post/goodidea-mind-6/4.png" alt="Featured image of post 好想工作室 — 後端 (Backend Camp) 培訓心得（六）：找工作之前" /&gt;&lt;p&gt;嗨大家好，我是結語 JYu。&lt;/p&gt;
&lt;p&gt;開始撰寫這個系列的時間是 2023 四月，也是我在好想工作室 backend camp 培訓的倒數一個月，想說可以分享一些心得，給對轉職為後端工程師的人參考。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（一）：好想工作室簡介】&lt;/a&gt;：簡單介紹好想工作室。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（二）：backend camp 在幹嘛】&lt;/a&gt;：會講後端培訓的點點滴滴。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（三）：我好想進來好想】&lt;/a&gt;：會給想進 backend camp 的一些建議。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（四）：我快崩潰了，怎麼辦？】&lt;/a&gt;：會講學員的心態管理。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（五）：這麼多東西，要怎麼學最有效率？】&lt;/a&gt;：會講學員的學習技巧。&lt;/p&gt;
&lt;p&gt;➡️&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-6/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（六）：找工作之前】&lt;/a&gt;：會講我自己的求職心得。&lt;/p&gt;
&lt;p&gt;本系列文章純以我的觀察和想法為出發點，不一定就是實際狀況，也不帶任何批判。&lt;/p&gt;
&lt;p&gt;如果覺得資訊對你有用的話，不妨按下方拍手鼓勵一下我喔！&lt;/p&gt;
&lt;p&gt;然後我都是想到什麼就寫什麼，難免會有沒有提及到的，如果你有任何疑問，歡迎寄信至 &lt;a class=&#34;link&#34; href=&#34;mailto:jk29666338@gmail.com&#34; &gt;jk29666338@gmail.com&lt;/a&gt; 來詢問我。&lt;/p&gt;
&lt;p&gt;好，廢話都講完了，那就讓我們開始吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在開始前，我想要先講一些廢話XD。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;找到工作不是終點。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;每個人進到工作室培訓的理由都不太一樣，我自己前期和後期的目標也略有不同。但基本上在工作室當學員的人，都是為了要「成為」軟體工程師。&lt;/p&gt;
&lt;p&gt;看起來以這個目的來說，不管是找到工作，或是純接案，已經是屬於尾聲了。但我認為找到工作僅僅代表從「好想工作室的學員」畢業，開始工作之後，先不論是否要朝 senior 邁進，一定都會感受到自己的不足，還有很多很多需要學習的東西。&lt;/p&gt;
&lt;p&gt;所以，其實找到工作後，仍然會是學員；又抑或說是，無論是多強的軟體工程師，都一定有可以再更精進的東西。&lt;/p&gt;
&lt;p&gt;但差別是，此時再學東西，就會更知道為何而學，也更有動力。&lt;/p&gt;
&lt;p&gt;至少就我個人而已，找到工作後的學習動力 &amp;gt; 在好想當學員的學習動力 &amp;raquo;&amp;raquo;&amp;raquo; 在學校的學習動力。&lt;/p&gt;
&lt;p&gt;這也和我暫時不讀研究所的原因有關，不過這又是別的話題了XD&lt;/p&gt;
&lt;p&gt;我會在這兩篇，分享一下我在工作室培訓時，我對「找工作」這件事情的想法轉變。以及我找工作的過程中，做了什麼？又有哪些收穫和反思。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;想法轉變的過程&#34;&gt;想法轉變的過程&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;這一個段落是關於我個人的故事，不想看可以直接跳過~&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我在&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;第一篇&lt;/a&gt;說過，我剛開始的心態就是要趁著大學畢業後的一兩年好好充實自己，讓自己有能力去找後端工程師的工作。&lt;/p&gt;
&lt;p&gt;所以其實剛進好想的時候，我也是規劃八到九個月來專心進行培訓，先不想著找工作。&lt;/p&gt;
&lt;p&gt;後來剛好在某次的聚會上，有一位後端的學長提到他們公司最近有徵人的計畫，此時大概是 1 月，也就是我進好想的第三個月。&lt;/p&gt;
&lt;p&gt;但這時我其實也沒有特別覺得怎樣，就只是聽過這個消息，覺得如果心有餘力可以試試看而已。&lt;/p&gt;
&lt;p&gt;後來有一個晚上，我收到我哥的訊息，說父母因為工作的原因而大吵了一架。&lt;/p&gt;
&lt;p&gt;其實以我父母現在的狀況，他們大可以選擇退休，而不是辛苦的硬撐，尤其是在身體有狀況的前提下。&lt;/p&gt;
&lt;p&gt;而雖然他們沒有明說，也或許不是這樣，但我內心就產生一股自責感：「就是因為我到現在還沒工作，讓他們沒辦法安心退休」。&lt;/p&gt;
&lt;p&gt;這股自責感讓我那段時間幾乎每個晚上都睡不好覺，都一直在想這件事情。&lt;/p&gt;
&lt;p&gt;正如我某位朋友跟我說的：「因為你太有想法，別人怎麼說其實你都不會感到壓力；你的壓力都是自己給自己的。」&lt;/p&gt;
&lt;p&gt;而在失眠了一個禮拜之後，我覺得必須得做出改變，不然身體真的快受不了了。&lt;/p&gt;
&lt;p&gt;於是我決定提前開始我的求職計畫。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;一開始的求職&#34;&gt;一開始的求職&lt;/h2&gt;
&lt;p&gt;一開始我沒有採取很積極的作為，只是去問了後端的學長說徵人的消息，然後很順利就進到面試流程。&lt;/p&gt;
&lt;p&gt;在寫筆試題的時候我發現，求職狀態某種程度來說是會跟學員身分衝突的，因為會需要投資大量時間在筆試題上面，而沒辦法專心學原本在學的東西。&lt;/p&gt;
&lt;p&gt;於是大概寫了幾天，我就轉變策略，變成全心全意求職。&lt;/p&gt;
&lt;p&gt;我也建議大家這樣做，而且最好是一次投 10~15 間公司，然後稍微控制收到結果的時間。這樣比較有助於你跟公司談薪水和做決定。&lt;/p&gt;
&lt;p&gt;我個人最後是花了兩個多月才確定找到工作，總共投了 13 間，有四間面試，兩間 offer。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;你想要什麼&#34;&gt;你想要什麼？&lt;/h2&gt;
&lt;p&gt;我認為在求職的最初期，先想好自己找工作的條件，是非常重要的一件事情。尤其對於社會經驗還不豐富的人（像我），我更建議要把條件一一列出。&lt;/p&gt;
&lt;p&gt;不管跟技術主管、人資談話的時候，他們總會有一些方式來包裝自己的公司。我並不反對他們這樣做，但有時候這些包裝會容易讓求職者被影響。&lt;/p&gt;
&lt;p&gt;比如說，接案公司可能會說自己是在做「客製化系統」、「協助企業做數位轉型」之類的。但如果求職者是想要有自己的產品或服務的公司，可能就比較不適合。&lt;/p&gt;
&lt;p&gt;此外，列出條件也有助於求職者快速篩選公司，避免浪費時間。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/goodidea-mind-6/img.png&#34;
	width=&#34;1795&#34;
	height=&#34;789&#34;
	srcset=&#34;https://jyu1999.com/post/goodidea-mind-6/img_hud620155237bbf3989b3247d6eff7b8e8_214866_480x0_resize_box_3.png 480w, https://jyu1999.com/post/goodidea-mind-6/img_hud620155237bbf3989b3247d6eff7b8e8_214866_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我初期列出的工作條件&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;227&#34;
		data-flex-basis=&#34;546px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到我最重視的事情就是遠端工作，所以我甚至在寫筆試題之前就會先問能不能遠端，可以省下很多時間。&lt;/p&gt;
&lt;h3 id=&#34;條件不會從一而終&#34;&gt;條件不會從一而終&lt;/h3&gt;
&lt;p&gt;基本上，條件是需要做彈性調整的，隨著你面試愈多家，會更知道自己的條件是否合理，且是否要新增/刪除一些內容。&lt;/p&gt;
&lt;p&gt;比如說我在面某家有自己的產品的公司時，技術主管跟我說，公司目前是用很舊版本的框架，所以需要對語言很熟悉。此外，js 的部分也不是用框架寫，原因是因為這樣要付出額外的學習成本。&lt;/p&gt;
&lt;p&gt;這跟我自己的求職期許就不太合，我會希望公司在考量獲利的同時，也積極升級版本、試著採用其他的工具。所以後續面試我都會特別問有關於版本的問題。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;履歷寫清楚就好&#34;&gt;履歷寫清楚就好&lt;/h2&gt;
&lt;p&gt;有些人可能會鼓勵履歷用 PS/AI 做，但我個人覺得以工程師而言，履歷寫的簡單清楚即可。最好不要超過兩頁，也不要放什麼 skills 量表。&lt;/p&gt;
&lt;p&gt;至於要不要為了特定公司做履歷客製化，我自己是覺得不需要。&lt;/p&gt;
&lt;p&gt;因為假設一位零基礎的學員，就算在工作室培訓整整一年，其實能學會的技能、能做出來的的（水準以上的）作品，其實真的不多。&lt;/p&gt;
&lt;p&gt;通常可能要到工作兩三年的工程師，才比較有選擇要放哪些技能和作品的空間（我猜）。&lt;/p&gt;
&lt;p&gt;當然如果以前做的職業，跟現在要面試的產業有對上的話，那就另當別論了。&lt;/p&gt;
&lt;h3 id=&#34;把一個作品做好&#34;&gt;把一個作品做好&lt;/h3&gt;
&lt;p&gt;我個人最推薦 junior 工程師，在求職前先花一兩個月，好好地雕出「一個」自己也覺得很棒的程式作品。&lt;/p&gt;
&lt;p&gt;為什麼是一個，因為其實技術主管沒有很多時間去看每個人的 code，更別提有些 code 超級多的。&lt;/p&gt;
&lt;p&gt;所以我認為履歷上只要放一個最滿意的作品即可，當然如果有不同性質的是可以考慮放兩個。比如說我做過 VR 應用也做過網頁應用，因為是不同性質的，所以我都會放上去。&lt;/p&gt;
&lt;p&gt;而這個作品最好要：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;README.md 盡可能完整：&lt;/p&gt;
&lt;p&gt;我們可以想像一下 user flow。理論上面試官點進某一個 github repo，首當其衝就會看到 README。
而 README 所扮演的角色就是簡單該要的說明這個專案是為了解決什麼問題、用了什麼技術、遇到什麼困難等等。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Commit message 寫清楚&lt;/p&gt;
&lt;p&gt;延續上面的 user flow，如果今天面試官對這個作品感興趣，可能會先看的就是 commit msg，看功能的開發順序、大概用時多長之類的。&lt;/p&gt;
&lt;p&gt;這裡推薦大家使用約定式提交，較一目了然。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;寫一些註解&lt;/p&gt;
&lt;p&gt;再來，當面試官對某個 feat 特別感興趣，他可能會點 commit msg 進去看細部實作，這時候適當的註解，解釋 function 或 method 在幹嘛，就尤其重要。&lt;/p&gt;
&lt;p&gt;不然一行一行看真的蠻累的&amp;hellip;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;盡量優化&lt;/p&gt;
&lt;p&gt;最後，當面試官開始逐行看 code 的時候，一定不會希望看到的程式碼是毫無架構的 spaghetti code，或是整個排版很亂。&lt;/p&gt;
&lt;p&gt;盡可能讓 code 看起來閱讀體驗是好的，至少至少也用一些自動化的工具，整理一下 code。&lt;/p&gt;
&lt;p&gt;優化也不只在程式碼閱讀體驗的部分，功能的部分也可以視時間再做優化，比如針對安全性、針對表單驗證等等內容。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;作品不一定是-code&#34;&gt;作品不一定是 code&lt;/h2&gt;
&lt;p&gt;這個段落雖然也是講作品，但我想特別拉出來寫XD&lt;/p&gt;
&lt;p&gt;我在找工作的同時，也開始撰寫這個系列。&lt;/p&gt;
&lt;p&gt;而在某個面試的過程，那間公司的總經理突然問我是不是有在寫部落格，他有看過我的一些文章。&lt;/p&gt;
&lt;p&gt;後續在面試的時候，也有引用我文章裡面所述，甚至是做一些延伸的討論。&lt;/p&gt;
&lt;p&gt;雖然有點自肥，但我覺得我寫的文章，充分的傳遞出我的人格特質和思考過程，而總經理是認同的，所以間接的幫我的面試加了不少分。&lt;/p&gt;
&lt;p&gt;所以我也推薦正在觀看這篇文章的你，可以嘗試創造一些除了 code 以外的作品，可能是影片、文章或任何形式的內容。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-7/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（七）：投履歷之後】&lt;/a&gt;：會講開始筆試之後，我自己的經驗與心得。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>現代網路服務基礎架構</title>
        <link>https://jyu1999.com/post/web_application_infrastructure/</link>
        <pubDate>Mon, 29 May 2023 15:01:23 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/web_application_infrastructure/</guid>
        <description>&lt;img src="https://jyu1999.com/post/web_application_infrastructure/4.png" alt="Featured image of post 現代網路服務基礎架構" /&gt;&lt;p&gt;這是我 2023/5/29 跟好想工作室 Backend Camp 學員分享的內容，是我個人對於 System Design Interview 這本書的讀書心得。
如果有任何錯誤歡迎指正～&lt;/p&gt;
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/twfInkqVZMs&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;

</description>
        </item>
        <item>
        <title>String and Symbol in Ruby</title>
        <link>https://jyu1999.com/post/ruby_string_symbols/</link>
        <pubDate>Wed, 24 May 2023 13:34:44 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/ruby_string_symbols/</guid>
        <description>&lt;img src="https://jyu1999.com/post/ruby_string_symbols/1.png" alt="Featured image of post String and Symbol in Ruby" /&gt;&lt;p&gt;在寫 Rails 的時候，常常會看到使用 Symbol 的狀況：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Ruby&#34; data-lang=&#34;Ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;User&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ApplicationRecord&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  belongs_to &lt;span style=&#34;color:#e6db74&#34;&gt;:permission&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  belongs_to &lt;span style=&#34;color:#e6db74&#34;&gt;:department&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  has_secure_password
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  validates &lt;span style=&#34;color:#e6db74&#34;&gt;:email&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;presence&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, format: { &lt;span style=&#34;color:#e6db74&#34;&gt;with&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;/\A([^@\s]+)@((?:[-a-z0-9]+\.)+[a-z]{2,})\z/i&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;message&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;must be a valid email address&amp;#34;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看了很久還是沒有很習慣這種寫法，所以來寫一篇文章整理一下自己的思緒。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;string&#34;&gt;String&lt;/h2&gt;
&lt;p&gt;Ruby 的 string 後面是預設可以加上一些 method 的，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Ruby&#34; data-lang=&#34;Ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;name &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;JYu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;size  &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reverse &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; uYJ&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts name&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upcase &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; JYU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這跟其他語言其實蠻不一樣的，比如說在 PHP 裡面要知道 String 長度的話，可能會用以下寫法：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-PHP&#34; data-lang=&#34;PHP&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;strlen&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hello&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這是因為 Ruby 是完全物件導向的，在 Ruby 中每樣東西都是物件，包括字串和數字。所有的方法都是對物件呼叫，不會看到全域函式&lt;sup id=&#34;fnref:1&#34;&gt;&lt;a href=&#34;#fn:1&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;1&lt;/a&gt;&lt;/sup&gt;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;String 還有很多好用的 method 可以用，但這篇文章最主要是要了解 Symbol，所以不列出太多～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;symbol&#34;&gt;Symbol&lt;/h2&gt;
&lt;p&gt;Symbol 的寫法是在字前面加個冒號，如 &lt;code&gt;:name&lt;/code&gt; 或 &lt;code&gt;:title&lt;/code&gt;，不是英文也可以，如 &lt;code&gt;:性別&lt;/code&gt;。但通常還是以英文為主。&lt;/p&gt;
&lt;p&gt;Symbol 是一個 &lt;code&gt;Symbol&lt;/code&gt; 類別的實體，可以用來表示某個狀態，例如：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Ruby&#34; data-lang=&#34;Ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Order&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;attr_reader&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:status&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;initialize&lt;/span&gt;(items, status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:pending&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; items
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; status
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;def&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;compete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    @status &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:complete&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;order &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Order&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;new(&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;item A&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;item B&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;item C&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; order&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;status &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:pending&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;order is pending&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這裡的 &lt;code&gt;:pending&lt;/code&gt; 和 &lt;code&gt;:complete&lt;/code&gt; 代表的是 pending 和 complete 這兩個「狀態」。Symbol 是一種「帶有名字的物件」，正如其名，Symbol 就是符號，這個符號可用來表示「已完成」或「未完成」。&lt;sup id=&#34;fnref:2&#34;&gt;&lt;a href=&#34;#fn:2&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;2&lt;/a&gt;&lt;/sup&gt;
在上面這個例子，其實也可以用字串。&lt;/p&gt;
&lt;h3 id=&#34;所以-symbol-和-string-的不同&#34;&gt;所以 Symbol 和 String 的不同？&lt;/h3&gt;
&lt;p&gt;光看上面的例子可能無法知道兩者真正的差異。我們可以用 &lt;code&gt;object_id&lt;/code&gt; 這個 method 去印出 Ruby 內部的記憶體配置編號：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Ruby&#34; data-lang=&#34;Ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JYU&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;object_id &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; 3720&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JYU&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;object_id &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; 3920&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts &lt;span style=&#34;color:#e6db74&#34;&gt;:JYU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;object_id &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; 3395748&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts &lt;span style=&#34;color:#e6db74&#34;&gt;:JYU&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;object_id &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; 3395748&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以發現兩個字串雖然內容相同，也是不同的物件；但 Symbol 只要內容相同，就是相同的物件。這種特性讓 Symbol 的主要用途是作為 Hash 的 Key。&lt;sup id=&#34;fnref:3&#34;&gt;&lt;a href=&#34;#fn:3&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;3&lt;/a&gt;&lt;/sup&gt;&lt;/p&gt;
&lt;p&gt;所以 Symbol 相對於 String，也更省記憶體一些。&lt;/p&gt;
&lt;h4 id=&#34;字串的內容可以變但-symbol-不行&#34;&gt;字串的內容可以變，但 Symbol 不行&lt;/h4&gt;
&lt;p&gt;Symbol 和字串都有一些好用的 method，例如 &lt;code&gt;length&lt;/code&gt;、&lt;code&gt;upcase&lt;/code&gt; 或 &lt;code&gt;downcase&lt;/code&gt; 等等。不過 Symbol 本身是不能被修改的，但字串可以：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Ruby&#34; data-lang=&#34;Ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:JYu&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; 3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:JYu&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;upcase &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; :JYU&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:JYu&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; &amp;#34;u&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JYu&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;U&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; &amp;#34;U&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:JYu&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;U&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; undefined method `[]=&amp;#39; for :JYu:Symbol (NoMethodError)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;symbol-的-comparison-比字串快&#34;&gt;Symbol 的 Comparison 比字串快&lt;/h4&gt;
&lt;p&gt;這裡我們直接來看高見龍的測試&lt;sup id=&#34;fnref:4&#34;&gt;&lt;a href=&#34;#fn:4&#34; class=&#34;footnote-ref&#34; role=&#34;doc-noteref&#34;&gt;4&lt;/a&gt;&lt;/sup&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Ruby&#34; data-lang=&#34;Ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;require &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;benchmark&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loop_times &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;str &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Benchmark&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;measure &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  loop_times&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;times &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;total
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sym &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Benchmark&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;measure &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  loop_times&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;times &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:hello&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:hello&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;total
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Benchmark&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;String: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;str&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;puts &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Symbol: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;#{&lt;/span&gt;sym&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; Benchmark&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; String: 12.299999999999999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; Symbol: 5.750000000000002&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Symbol 的速度明顯快很多，因為 Symbol 在比較的時候，是直接比對 &lt;code&gt;object_id&lt;/code&gt;，而字串還需要逐一比對字母。所以字串在做比較的時間複雜度，會隨著字母數量而增加；而 Symbol 的時間複雜度是固定的。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;使用時機&#34;&gt;使用時機&lt;/h2&gt;
&lt;h3 id=&#34;symbol-適合當-hash-裡的-key&#34;&gt;Symbol 適合當 Hash 裡的 Key&lt;/h3&gt;
&lt;p&gt;前面有提到 Symbol 的比較速度比較快，所以很適合當 Hash 的 key:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-Ruby&#34; data-lang=&#34;Ruby&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;profile &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; { name: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JYu&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;age&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; } &lt;span style=&#34;color:#75715e&#34;&gt;# =&amp;gt; {:name=&amp;gt;&amp;#34;JYu&amp;#34;, :age=&amp;gt;23} &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;字串的-method-比較多&#34;&gt;字串的 method 比較多&lt;/h3&gt;
&lt;p&gt;雖然 Symbol 可以當字串用，但是 Symbol 內建的方法沒有像 String 這麼豐富，所以如果想要字串那些好用的功能，就應該選用字串。&lt;/p&gt;
&lt;div class=&#34;footnotes&#34; role=&#34;doc-endnotes&#34;&gt;
&lt;hr&gt;
&lt;ol&gt;
&lt;li id=&#34;fn:1&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ihower.tw/rails/ruby.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rails 實戰聖經：Ruby 程式語言入門&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:1&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:2&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://railsbook.tw/chapters/06-ruby-basic-2#symbol_class&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;為你自己學 Ruby on Rails：數字、字串、陣列、範圍、雜湊、符號&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:2&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:3&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://ihower.tw/rails/ruby.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Rails 實戰聖經：Ruby 程式語言入門&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:3&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li id=&#34;fn:4&#34;&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://railsbook.tw/chapters/06-ruby-basic-2#symbol_class&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;為你自己學 Ruby on Rails：數字、字串、陣列、範圍、雜湊、符號&lt;/a&gt;&amp;#160;&lt;a href=&#34;#fnref:4&#34; class=&#34;footnote-backref&#34; role=&#34;doc-backlink&#34;&gt;&amp;#x21a9;&amp;#xfe0e;&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;/div&gt;
</description>
        </item>
        <item>
        <title>Jetbrains 系列 IDE 的一些快捷鍵（PHPStorm &amp; RubyMine）</title>
        <link>https://jyu1999.com/post/jetbrains_shortcut/</link>
        <pubDate>Mon, 22 May 2023 10:47:46 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/jetbrains_shortcut/</guid>
        <description>&lt;img src="https://jyu1999.com/post/jetbrains_shortcut/0.png" alt="Featured image of post Jetbrains 系列 IDE 的一些快捷鍵（PHPStorm &amp; RubyMine）" /&gt;&lt;p&gt;以下是我在 PHPStorm / RubyMine 裡面常用到的快捷鍵。
指令以 Mac 為主，windows 自己換成 &lt;!-- raw HTML omitted --&gt;Ctrl&lt;!-- raw HTML omitted --&gt; 即可。&lt;/p&gt;
&lt;h2 id=&#34;search&#34;&gt;Search&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;⇧&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;⇧&lt;!-- raw HTML omitted --&gt; : Search EveryWhere&lt;/p&gt;
&lt;p&gt;可以搜尋全部的檔案。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;⇧&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;F&lt;!-- raw HTML omitted --&gt; : Find in path(Full-text Search)&lt;/p&gt;
&lt;p&gt;整個專案的全文檢索。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;view&#34;&gt;View&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;⇧&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;F12&lt;!-- raw HTML omitted --&gt; : Toggle Maximize Editor&lt;/p&gt;
&lt;p&gt;把全部除了 Editor 的視窗關閉/打開&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;option&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;F12&lt;!-- raw HTML omitted --&gt; : Toggle Terminal&lt;/p&gt;
&lt;p&gt;開/關 terminal&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;1&lt;!-- raw HTML omitted --&gt; : Project View&lt;/p&gt;
&lt;p&gt;開/關 Project 檔案列表&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;2&lt;!-- raw HTML omitted --&gt; : Database View (這個不是預設的，是我另外設定的)&lt;/p&gt;
&lt;p&gt;開/關 Database View&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;navigation&#34;&gt;Navigation&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;E&lt;!-- raw HTML omitted --&gt; : Recent File&lt;/p&gt;
&lt;p&gt;最近存取或編輯的檔案&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;B&lt;!-- raw HTML omitted --&gt; / &lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + Click : Go to declaration&lt;/p&gt;
&lt;p&gt;去這個 method 宣告的地方&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;option&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;←&lt;!-- raw HTML omitted --&gt; / &lt;!-- raw HTML omitted --&gt;→&lt;!-- raw HTML omitted --&gt; : Navigate back/forward&lt;/p&gt;
&lt;p&gt;返回上一個 Navigation or 去下一個 Navigation（如果有）&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;files&#34;&gt;Files&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;↑&lt;!-- raw HTML omitted --&gt; : 選擇檔案&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;N&lt;!-- raw HTML omitted --&gt; : 新增檔案&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;clean-code&#34;&gt;Clean Code&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;Cmd&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;⇧&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;option&lt;!-- raw HTML omitted --&gt; + &lt;!-- raw HTML omitted --&gt;L&lt;!-- raw HTML omitted --&gt; : 整理程式碼&lt;/p&gt;
&lt;p&gt;按完之後會跑出一個選單，可以自己選是只要 reformat 選擇的部分，還是整個檔案。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;實際 Trace Code 可參考以下影片：
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/nvAlBpbFNNs&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Laravel Backpack 初學者之路-05</title>
        <link>https://jyu1999.com/post/backpack05/</link>
        <pubDate>Fri, 19 May 2023 19:36:26 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/backpack05/</guid>
        <description>&lt;img src="https://jyu1999.com/post/backpack05/0.png" alt="Featured image of post Laravel Backpack 初學者之路-05" /&gt;&lt;p&gt;上一篇在 UpdateOperation 中，有一個 &lt;code&gt;update()&lt;/code&gt; 的 method，這個 method 又去 call 了一個叫做 &lt;code&gt;update()&lt;/code&gt;的 method：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hasAccessOrFail&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// execute the FormRequest authorization and validation, if one is required  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;validateRequest&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// register any Model Events defined on fields  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;registerFieldEvents&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// update the row in the db  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $request&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getKeyName&lt;/span&gt;()),  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getStrippedSaveRequest&lt;/span&gt;($request)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entry&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;entry&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $item;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// show a success message  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;\Alert&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;trans&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;backpack::crud.update_success&amp;#39;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;flash&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// save the redirect choice for next time  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setSaveAction&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;performSaveAction&lt;/span&gt;($item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getKey&lt;/span&gt;());  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這一篇主要就是要探討後面這個 &lt;code&gt;update()&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;這邊來仔細看一下 &lt;code&gt;$this-&amp;gt;crud-&amp;gt;update()&lt;/code&gt; 做了些什麼事情。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;update()&lt;/code&gt; 的具體實現如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;($id, $input)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;findOrFail&lt;/span&gt;($id);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [$directInputs, $relationInputs] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;splitInputIntoDirectAndRelations&lt;/span&gt;($input);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $updated &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;($directInputs);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createRelationsForItem&lt;/span&gt;($item, $relationInputs);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $item;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;findOrFail()&lt;/code&gt; 很明顯就是要給定 id，找這個 id 的相關 data。&lt;/p&gt;
&lt;p&gt;而 &lt;code&gt;splitInputIntoDirectAndRelations($input)&lt;/code&gt; 是要把 input 分為 &lt;code&gt;DirectInputs&lt;/code&gt; 和 &lt;code&gt;RelationDetails&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;然後下面會把分出來的 &lt;code&gt;$directInputs&lt;/code&gt; 存進資料庫裡面，&lt;/p&gt;
&lt;p&gt;最後會用 &lt;code&gt;createRelationsForItem() &lt;/code&gt;幫 &lt;code&gt;$item&lt;/code&gt; 和所提供的 model 建立關聯。&lt;/p&gt;
&lt;p&gt;處理關聯的主要是 &lt;code&gt;createRelationsForItem()&lt;/code&gt; ，所以這裡繼續來 trace。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;createrelationsforitem&#34;&gt;createRelationsForItem()&lt;/h2&gt;
&lt;p&gt;這個 method 需要兩個輸入：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$item&lt;/code&gt;：要創建或更新 relationship 的 model instance&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$formattedRelations&lt;/code&gt;: 包含關聯資訊的 array，是在上面用 &lt;code&gt;getRelationDetailsFromInput()&lt;/code&gt; 拿到的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這個 method 會先檢查  &lt;code&gt;formmattedRelations&lt;/code&gt; 是否為空，為空就不用創建 relationships。否則會遍歷 &lt;code&gt;$formattedRelations[]&lt;/code&gt;，根據不同的關聯類型來創建或更新相應的 relationships。&lt;/p&gt;
&lt;p&gt;主要有三種 relationship 類型：&lt;/p&gt;
&lt;h3 id=&#34;hasone-或-morphone&#34;&gt;HasOne 或 MorphOne&lt;/h3&gt;
&lt;p&gt;使用 &lt;code&gt;createUpdateOrDeleteOneToOneRelation()&lt;/code&gt; 方法創建或更新一對一關聯。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createUpdateOrDeleteOneToOneRelation&lt;/span&gt;($relation, $relationMethod, $relationDetails)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{   
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $relationMethodValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][$relationMethod];  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;is_null&lt;/span&gt;($relationMethodValue) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entity&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; $relationMethod) {  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;delete&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;gettype&lt;/span&gt;($relationMethodValue) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;array&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_multidimensional_array&lt;/span&gt;($relationMethodValue)) {  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $relationMethodValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationMethodValue[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// saving process  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationMethodValue &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;];  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [$directInputs, $relationInputs] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;splitInputIntoDirectAndRelations&lt;/span&gt;($input, $relationDetails, $relationMethod);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;updateOrCreate&lt;/span&gt;([], $directInputs);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createRelationsForItem&lt;/span&gt;($item, $relationInputs);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $item;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;根據官方的說法，這個 method 會根據 values 不同，而有不同的處理方式：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(A) &lt;code&gt;[&#39;number&#39; =&amp;gt; 1315, &#39;name&#39; =&amp;gt; &#39;Something&#39;]&lt;/code&gt; ：如果使用 text, number, etc&amp;hellip; field&lt;/li&gt;
&lt;li&gt;(B) &lt;code&gt;[&#39;slug&#39; =&amp;gt; null]&lt;/code&gt; ：如果需要清除 &lt;code&gt;slug&lt;/code&gt; 和其相關的 entry。&lt;/li&gt;
&lt;li&gt;(C) &lt;code&gt;[&#39;passport&#39; =&amp;gt; [[&#39;number&#39; =&amp;gt; 1314, &#39;name&#39; =&amp;gt; &#39;Something&#39;]]]&lt;/code&gt; ：如果值是透過 repeatable field 傳遞&lt;/li&gt;
&lt;li&gt;(D) &lt;code&gt;[&#39;passport&#39; =&amp;gt; null]&lt;/code&gt;：如果值被從 repeatable field 中刪除。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;首先，&lt;code&gt;array_key_exists($relationMethod, $relationDetails[&#39;values&#39;])&lt;/code&gt; 會檢查是不是 (C) or (D)。如果是 (D) 的話，會把 relation 刪掉並回傳 null。&lt;/p&gt;
&lt;p&gt;我還蠻疑惑檢查機制的，於是把 &lt;code&gt;values[]&lt;/code&gt; 印出來（雖然這個是多對多）：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;values&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;▼&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;articles&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;array&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; [&lt;span style=&#34;color:#a6e22e&#34;&gt;▼&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  ]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;把檢查機制印出來就一目了然，上面的檢查是在看 &lt;code&gt;model&lt;/code&gt; 裡面的 relationship method 是不是 array 的其中一個 key。&lt;/p&gt;
&lt;p&gt;最後，會把這次更新做保存。&lt;code&gt;$directInputs&lt;/code&gt; 會 call &lt;code&gt;updateOrCreate()&lt;/code&gt; 存進資料庫。然後會把 relation input 傳進 &lt;code&gt;createRelationsForItem()&lt;/code&gt; 檢查看還有沒有 relation 需要處理。&lt;/p&gt;
&lt;h3 id=&#34;hasmany-或-morphmany&#34;&gt;HasMany 或 MorphMany&lt;/h3&gt;
&lt;p&gt;根據 &lt;code&gt;$relationValues&lt;/code&gt; 的結構，使用 &lt;code&gt;attachManyRelation()&lt;/code&gt; 建立已存在的 model instance 之間的 relation，或者使用 &lt;code&gt;createManyEntries()&lt;/code&gt; 方法創建新的 model instance 並建立 relation。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$relationValues &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][$relationMethod];  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($relationValues &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_multidimensional_array&lt;/span&gt;($relationValues)) {  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;attachManyRelation&lt;/span&gt;($item, $relation, $relationDetails, $relationValues);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;} &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createManyEntries&lt;/span&gt;($item, $relation, $relationMethod, $relationDetails);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;attachmanyrelation&#34;&gt;attachManyRelation()&lt;/h4&gt;
&lt;p&gt;首先先來看 &lt;code&gt;attachManyRelation()&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;attachManyRelation&lt;/span&gt;($item, $relation, $relationDetails, $relationValues)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $modelInstance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getRelated&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $relationForeignKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getForeignKeyName&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $relationLocalKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getLocalKeyName&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;empty&lt;/span&gt;($relationValues)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;handleManyRelationItemRemoval&lt;/span&gt;($modelInstance, $relation, $relationDetails, $relationForeignKey);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $toUpdate[$relationForeignKey] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{$relationLocalKey};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relation_type&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MorphMany&amp;#39;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $toUpdate[$relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getQualifiedMorphType&lt;/span&gt;()] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getMorphClass&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $modelInstance&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;whereIn&lt;/span&gt;($modelInstance&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getKeyName&lt;/span&gt;(), $relationValues)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;($toUpdate);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $removedEntries &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $modelInstance&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;whereNotIn&lt;/span&gt;($modelInstance&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getKeyName&lt;/span&gt;(), $relationValues)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;where&lt;/span&gt;($relationForeignKey, $item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{$relationLocalKey});
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relation_type&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MorphMany&amp;#39;&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $removedEntries&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;where&lt;/span&gt;($relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getQualifiedMorphType&lt;/span&gt;(), $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getMorphClass&lt;/span&gt;());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;handleManyRelationItemRemoval&lt;/span&gt;($modelInstance, $removedEntries, $relationDetails, $relationForeignKey);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 hasmany/morphmany 中，並沒有 「同步(sync)」這個 method 可以用。但當我們在使用 selectable elments 我們需要同步的功能，所以需要寫一些程式去模擬同步，讓使用者可以去新增/刪除那些沒有在 list 裡面的 entries。&lt;/p&gt;
&lt;p&gt;這個 method 會先檢查 &lt;code&gt;relationValues&lt;/code&gt; 是否為空，如果為空代表 selection 被清除掉了，所以程式要清除 all related values。會利用 &lt;code&gt;handleManyRelationItemRemoval()&lt;/code&gt; 這個 method 來做這件事情，至於這個 method 的實作在下方討論。&lt;/p&gt;
&lt;p&gt;在下面需要把新的 value 加進 relation 裡面，如果是 HasMany 的話，那只需要 update foreign key；如果是 MorphMany 的話，就需要 update foreign key &amp;amp; morphs key。&lt;/p&gt;
&lt;p&gt;下面會從 model instance 找所有不在 &lt;code&gt;$relationValues&lt;/code&gt; 的紀錄，也就是在當前 relation 中已經被刪除的紀錄。&lt;/p&gt;
&lt;p&gt;如果 relation type 是 morphmany，還要確保有 match 到 morph type。&lt;/p&gt;
&lt;p&gt;最後，會把已刪除的 entry(&lt;code&gt;$removedEntries&lt;/code&gt;) 透過 &lt;code&gt;handleManyRelationItemRemoval()&lt;/code&gt; 刪除。&lt;/p&gt;
&lt;h4 id=&#34;handlemanyrelationitemremoval&#34;&gt;handleManyRelationItemRemoval()&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;handleManyRelationItemRemoval&lt;/span&gt;($modelInstance, $removedEntries, $relationDetails, $relationForeignKey)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $relationColumnIsNullable &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $modelInstance&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;isColumnNullable&lt;/span&gt;($relationForeignKey);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $forceDelete &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;force_delete&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $fallbackId &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fallback_id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($fallbackId) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $removedEntries&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;([$relationForeignKey &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $fallbackId]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($forceDelete) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $removedEntries&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lazy&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;delete&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $dbColumnDefault &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $modelInstance&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getDbColumnDefault&lt;/span&gt;($relationForeignKey);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; $relationColumnIsNullable &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; $dbColumnDefault &lt;span style=&#34;color:#f92672&#34;&gt;===&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $removedEntries&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lazy&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;delete&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $removedEntries&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;([$relationForeignKey &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $dbColumnDefault]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這個 method 主要處理 remove 和特定 relation 相關的 entry。&lt;/p&gt;
&lt;p&gt;一開始會先看有沒有指定 &lt;code&gt;$fallbackId&lt;/code&gt;，如果有的話只需要改一下 foreignkey 即可。&lt;/p&gt;
&lt;p&gt;或是如果有設定 &lt;code&gt;force_delete&lt;/code&gt; 是 true 的話，就不考慮 foreign key 是否是 nullable，直接刪除所有被移除的 entries。&lt;/p&gt;
&lt;p&gt;如果沒有設定設定 &lt;code&gt;force_delete&lt;/code&gt; 的話，則會檢查 foreign key 是否可為空，以及 database 的設定：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;if column 可為空：就設為 default value 就好（沒有的話就設 null）&lt;/li&gt;
&lt;li&gt;if column 不可為空：會把 entry 從資料庫刪掉，避免資料庫報錯。&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;createmanyentries&#34;&gt;createManyEntries()&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;private&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;createManyEntries&lt;/span&gt;($entry, $relation, $relationMethod, $relationDetails)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $items &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][$relationMethod];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $relatedModelLocalKey &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relation&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getRelated&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getKeyName&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $relatedItemsSent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($items &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; $item) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            [$directInputs, $relationInputs] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;splitInputIntoDirectAndRelations&lt;/span&gt;($item, $relationDetails, $relationMethod);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $relatedModelLocalKeyValue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $item[$relatedModelLocalKey] &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $entry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{$relationMethod}()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;updateOrCreate&lt;/span&gt;([$relatedModelLocalKey &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $relatedModelLocalKeyValue], $directInputs);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $relatedItemsSent[] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{$relatedModelLocalKey};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;createRelationsForItem&lt;/span&gt;($item, $relationInputs);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;empty&lt;/span&gt;($relatedItemsSent)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $entry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{$relationMethod}()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;whereNotIn&lt;/span&gt;($relatedModelLocalKey, $relatedItemsSent)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;lazy&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;each&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;delete&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先，會先從 &lt;code&gt;$relationDetails&lt;/code&gt; 中獲取和 &lt;code&gt;$relationMethod&lt;/code&gt;相關的所有 entries。&lt;/p&gt;
&lt;p&gt;這裡會拿到 model 的 key 之後，宣告一個空陣列 &lt;code&gt;$relatedItemsSent[]&lt;/code&gt;，但這邊還看不出來這個是要幹嘛。&lt;/p&gt;
&lt;p&gt;接著，會對所有拿出來的 &lt;code&gt;$items&lt;/code&gt;作遍歷，在遍歷的過程中，一樣會先把 direct input 和 relation input 分開，並或去 related model 的 local key value。&lt;/p&gt;
&lt;p&gt;接著，使用model 的 instance，找到匹配的 entry，根據 local key 更新輸入值或創建新的 entry。
已經存進去的會放到 &lt;code&gt;relatedItemSent[]　&lt;/code&gt;， 避免重複發送。最後會幫 entry 創建 relation。&lt;/p&gt;
&lt;p&gt;在這個 method 的最後，會去檢查 &lt;code&gt;$relatedItemsSent&lt;/code&gt;是否為空。如果是不是空的話，會使用已經發送的 items 和  database 的 local key 作匹配，並刪除沒有在兩者交集裡面的值。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;belongstomany-或-morphtomany&#34;&gt;BelongsToMany 或 MorphToMany&lt;/h3&gt;
&lt;p&gt;獲取關聯值並確保它們不為空，然後根據值的結構創建或同步多對多關聯。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;BelongsToMany&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#66d9ef&#34;&gt;case&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;MorphToMany&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    $values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $relationDetails[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;values&amp;#39;&lt;/span&gt;][$relationMethod] &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; [];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    $values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_string&lt;/span&gt;($values) &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;json_decode&lt;/span&gt;($values, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; $values;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    $values &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $values &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; [];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    $relationValues &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;is_array&lt;/span&gt;($values) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;is_multidimensional_array&lt;/span&gt;($values)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($values &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; $value) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($value[$relationMethod])) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                                $relationValues[$value[$relationMethod]] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Arr&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;except&lt;/span&gt;($value, $relationMethod);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#66d9ef&#34;&gt;empty&lt;/span&gt;($relationValues)) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        $relationValues &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;array_values&lt;/span&gt;($values);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    $item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{$relationMethod}()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sync&lt;/span&gt;($relationValues);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;首先，會從 &lt;code&gt;$relationDetails&lt;/code&gt; 中獲取該 relation 的 value，並確保其為 array。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;json_decode()&lt;/code&gt; 可能會回傳 null，因此要確保 &lt;code&gt;$values&lt;/code&gt; 不為 null。&lt;/p&gt;
&lt;p&gt;在下面 initialize 一個新的 empty array &lt;code&gt;$relationValues&lt;/code&gt;。接著，如果 &lt;code&gt;$values&lt;/code&gt; 是 multidimensional_array 的話，就會遍歷 &lt;code&gt;$values&lt;/code&gt;，並獲取每個值中的 &lt;code&gt;$relationMethod&lt;/code&gt; 作為 key，其餘的值作為 &lt;code&gt;$relationValues&lt;/code&gt; 。在這裡是使用 &lt;code&gt;Arr::except($value, $relationMethod)&lt;/code&gt; ，代表是要從 &lt;code&gt;$value[]&lt;/code&gt; 中移除 &lt;code&gt;$relationMethod&lt;/code&gt; 這個 key 及其對應的值。&lt;/p&gt;
&lt;p&gt;如果沒有 relation data，且 &lt;code&gt;values&lt;/code&gt; 是一個單維陣列，則為把 &lt;code&gt;$values&lt;/code&gt; 的值作為 &lt;code&gt;$relationValues&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;最後，使用&lt;code&gt;$item-&amp;gt;{$relationMethod}()-&amp;gt;sync($relationValues);&lt;/code&gt; 同步 relation value。&lt;code&gt;sync()&lt;/code&gt; 會把多對多關聯表的現有 relation，更新為這裡所提供的 &lt;code&gt;$relationValues&lt;/code&gt;，並在需要時創建新的 relation or 刪除不再存在的 relation。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Laravel Backpack 初學者之路-04</title>
        <link>https://jyu1999.com/post/backpack04/</link>
        <pubDate>Fri, 19 May 2023 19:35:41 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/backpack04/</guid>
        <description>&lt;img src="https://jyu1999.com/post/backpack04/0.png" alt="Featured image of post Laravel Backpack 初學者之路-04" /&gt;&lt;p&gt;來研究 &lt;code&gt;UpdateOperation&lt;/code&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;how-it-works&#34;&gt;How it works&lt;/h2&gt;
&lt;p&gt;基本的用法在前幾篇已經看過了，這邊先來看官方的解說。&lt;/p&gt;
&lt;p&gt;CrudController 是一個 RESTful 的 controller，&lt;code&gt;Update&lt;/code&gt; Operation 用了兩個 routes:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GET to &lt;code&gt;/entity-name/{id}/edit&lt;/code&gt;: 指到 &lt;code&gt;edit()&lt;/code&gt; ，用來 render Edit Form(&lt;code&gt;edit.blade.php&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;POST to &lt;code&gt;/entity-name/{id}/edit&lt;/code&gt;: 指到 &lt;code&gt;update()&lt;/code&gt;，使用 Eloquent 去 update database 的 entry&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;code&gt;edit()&lt;/code&gt; 會 render 所有被定義的 fields(using fields API), 接著在保存時，&lt;code&gt;update()&lt;/code&gt; 會對資料作 validation，在 Eloquent Model 創建 entry。只有 field type 被加入，且為 &lt;code&gt;$fiilable&lt;/code&gt; 的會被真正存入資料庫。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;advanced-features-and-techniques&#34;&gt;Advanced Features and Techniques&lt;/h2&gt;
&lt;h3 id=&#34;validation&#34;&gt;Validation&lt;/h3&gt;
&lt;p&gt;backpack 提供三種方式，作為表單驗證的機制。&lt;/p&gt;
&lt;h4 id=&#34;validating-fields-using-formrequests&#34;&gt;Validating fields using FormRequests&lt;/h4&gt;
&lt;p&gt;在產生 CrudController 的時候，會順帶產生一個 Laravel FormRequest，這個 FormRequest 會在 &lt;code&gt;setupUpdateOperation()&lt;/code&gt; 裡面被使用。如果是 Article 的話，就是 &lt;code&gt;ArticleRequest::class&lt;/code&gt; 。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ArticleRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;對於比較大的 model 來說，這個方式很好用，因為可以在 &lt;code&gt;FormRequest&lt;/code&gt; 裡面寫很多 rules, messages and attributes，而且不會影響到 &lt;code&gt;CrudController&lt;/code&gt; 的大小。&lt;/p&gt;
&lt;p&gt;如果今天 Create 和 Update 用來 validate 的方式不一樣，就要創建不同的 request file：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App\Http\Requests\CreateTagRequest&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;StoreRequest&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App\Http\Requests\UpdateTagRequest&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;UpdateRequest&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupCreateOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;CreateRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;UpdateRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;validating-fields-using-a-rules-array&#34;&gt;Validating fields using a rules array&lt;/h4&gt;
&lt;p&gt;如果是小型的 model，要用另一個檔案來管理也蠻麻煩的，此時可以把 rules 直接寫成 array 就好。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;([
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;required|min:2&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// or maybe
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $rules &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;required|min:2&amp;#39;&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $messages &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name.required&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;You gotta give it a name, man.&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name.min&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;You came up short. Try more than 2 characters.&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;($rules, $messages);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;validating-fields-using-field-attributes&#34;&gt;Validating fields using field attributes&lt;/h4&gt;
&lt;p&gt;另一個對於中小型 model 也不錯用的，是直接寫在 &lt;code&gt;addField()&lt;/code&gt; 裡面：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;([
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Content&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ckeditor&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;placeholder&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Your textarea text here&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;validationRules&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;required|min:10&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;validationMessages&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;required&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;You gotta write smth man.&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;More than 10 characters, bro. Wtf... You can do this!&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// CAREFUL! This MUST be called AFTER the fields are defined, NEVER BEFORE
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如果使用這個方法的話，&lt;strong&gt;一定要在最後 call &lt;code&gt;setValidation()&lt;/code&gt;&lt;/strong&gt;，不用輸入任何 parameter。 Backpack 會自己去這些 field 裡面找對應的 rules。&lt;/p&gt;
&lt;h3 id=&#34;callbacks&#34;&gt;Callbacks&lt;/h3&gt;
&lt;p&gt;根據 Backpack 文件的說法，在 entry 被更新之前/之後，我們可能想要最一些事情。&lt;/p&gt;
&lt;p&gt;但在 Laravel Backpack 是沒有 callback 可以用的，所以如果要達到這種效果，可以用以下幾種方式。&lt;/p&gt;
&lt;h4 id=&#34;use-events-in-your-setup-method&#34;&gt;Use Events in your &lt;code&gt;setup()&lt;/code&gt; method&lt;/h4&gt;
&lt;p&gt;Laravel 已經有提供幾個 events：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;updating&lt;/code&gt; and &lt;code&gt;updated&lt;/code&gt;: triggered by the Update operation&lt;/li&gt;
&lt;li&gt;&lt;code&gt;saving&lt;/code&gt; and &lt;code&gt;saved&lt;/code&gt;： triggered by both the Create and the Update Operations。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;舉例來說，如果想要在 &lt;code&gt;Product&lt;/code&gt; entry 更新之前做一些事情，可以：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Product&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;updating&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt;($entry) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $entry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;last_edited_by&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;backpack_user&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要注意的是，這些events 只有在 function 被 call 的時候才會 register，所以，如果把它定義在 &lt;code&gt;CrudController&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;they will NOT run when an entry is changed outside that CrudController;&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;if you want to expand the scope to cover both the &lt;code&gt;Create&lt;/code&gt; and &lt;code&gt;Update&lt;/code&gt; operations, you can easily do that, for example by using the &lt;code&gt;saving&lt;/code&gt; and &lt;code&gt;saved&lt;/code&gt; events, and moving the event-calling to your main &lt;code&gt;setup()&lt;/code&gt; method;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;use-events-in-your-field-definition&#34;&gt;Use Events in your field definition&lt;/h4&gt;
&lt;p&gt;可以在創建 field 的時候，就告訴 field 在 entry 要存進 db 的時候應該要做些什麼：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// FLUENT syntax - use the convenience method &amp;#34;on&amp;#34; to define just ONE event
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updating&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ($entry) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $entry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;last_edited_by&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;backpack_user&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;});
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// FLUENT SYNTAX - you can define multiple events in one go
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;events&lt;/span&gt;([
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updating&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ($entry) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $entry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;last_edited_by&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;backpack_user&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;saved&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ($entry) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// TODO: upload some file
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// using the ARRAY SYNTAX, define an array of events and closures
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;([
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;events&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updating&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ($entry) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $entry&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;author_id&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;backpack_user&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;override-the-update-method&#34;&gt;Override the &lt;code&gt;update()&lt;/code&gt; method&lt;/h4&gt;
&lt;p&gt;把 &lt;code&gt;update()&lt;/code&gt;  複寫掉：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App\Http\Controllers\Admin&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Backpack\CRUD\app\Http\Controllers\CrudController&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ProductCrudController&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CrudController&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;\Backpack\CRUD\app\Http\Controllers\Operations\UpdateOperation&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;traitUpdate&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// do something before validation, before save, before everything; for example:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;addField([&amp;#39;type&amp;#39; =&amp;gt; &amp;#39;hidden&amp;#39;, &amp;#39;name&amp;#39; =&amp;gt; &amp;#39;author_id&amp;#39;]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;removeField(&amp;#39;password_confirmation&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Note: By default Backpack ONLY saves the inputs that were added on page using Backpack fields.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// This is done by stripping the request of all inputs that do NOT match Backpack fields for this
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// particular operation. This is an added security layer, to protect your database from malicious
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// users who could theoretically add inputs using DeveloperTools or JavaScript. If you&amp;#39;re not properly
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// using $guarded or $fillable on your model, malicious inputs could get you into trouble.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// However, if you know you have proper $guarded or $fillable on your model, and you want to manipulate 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// the request directly to add or remove request parameters, you can also do that.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// We have a config value you can set, either inside your operation in `config/backpack/crud.php` if
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// you want it to apply to all CRUDs, or inside a particular CrudController:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;setOperationSetting(&amp;#39;saveAllInputsExcept&amp;#39;, [&amp;#39;_token&amp;#39;, &amp;#39;_method&amp;#39;, &amp;#39;http_referrer&amp;#39;, &amp;#39;current_tab&amp;#39;, &amp;#39;save_action&amp;#39;]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// The above will make Backpack store all inputs EXCEPT for the ones it uses for various features.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// So you can manipulate the request and add any request variable you&amp;#39;d like.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;getRequest()-&amp;gt;request-&amp;gt;add([&amp;#39;author_id&amp;#39;=&amp;gt; backpack_user()-&amp;gt;id]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;getRequest()-&amp;gt;request-&amp;gt;remove(&amp;#39;password_confirmation&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;getRequest()-&amp;gt;request-&amp;gt;add([&amp;#39;author_id&amp;#39;=&amp;gt; backpack_user()-&amp;gt;id]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;getRequest()-&amp;gt;request-&amp;gt;remove(&amp;#39;password_confirmation&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $response &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;traitUpdate&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// do something after save
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $response;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;delete-button-on-update-operation&#34;&gt;Delete button on Update Operation&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/backpack04/1.png&#34;
	width=&#34;1209&#34;
	height=&#34;815&#34;
	srcset=&#34;https://jyu1999.com/post/backpack04/1_hu44b998f24292d69eaa76c6eaf4bf0a35_137032_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack04/1_hu44b998f24292d69eaa76c6eaf4bf0a35_137032_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Delete Button&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;148&#34;
		data-flex-basis=&#34;356px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果想要在 Update operation 裡面顯示 Delete button，需要在 &lt;code&gt;setupUpdateOperation()&lt;/code&gt;裡面加上：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// your code...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setOperationSetting&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;showDeleteButton&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;); &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;lt;--- add this!
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// alternatively you can pass an URL to where user should be redirected after entry is deleted:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud-&amp;gt;setOperationSetting(&amp;#39;showDeleteButton&amp;#39;, &amp;#39;https://someurl.com&amp;#39;);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這可以讓我們可以直接在 update 的畫面刪掉 entries。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;trace-code---updateoperation&#34;&gt;Trace Code - UpdateOperation&lt;/h2&gt;
&lt;p&gt;接著來看 &lt;code&gt;UpdateOperation&lt;/code&gt; 這個 trait 裡面的一些 method：&lt;/p&gt;
&lt;h3 id=&#34;setupupdateroutes&#34;&gt;setupUpdateRoutes&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateRoutes&lt;/span&gt;($segment, $routeName, $controller)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Route&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;($segment&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/{id}/edit&amp;#39;&lt;/span&gt;, [  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;as&amp;#39;&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $routeName&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.edit&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uses&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $controller&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@edit&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Route&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;put&lt;/span&gt;($segment&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/{id}&amp;#39;&lt;/span&gt;, [  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;as&amp;#39;&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $routeName&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.update&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uses&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $controller&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@update&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;還蠻明顯這個 method 就是在創建兩個 route，一個是 &lt;code&gt;GET:admin/article/{id}/edit&lt;/code&gt;，會導到編輯的那一頁。另一個是 &lt;code&gt;PUT: admin/article/{id}&lt;/code&gt; ，就是編輯完按下 save 會導到的 route。&lt;/p&gt;
&lt;p&gt;不過我還蠻好奇這個 method 是在哪裡被 call 的，因為只要一創建 crudController，就會馬上有 route 可以用。&lt;/p&gt;
&lt;p&gt;後來發現一開始是在 &lt;code&gt;EntityCrudController&lt;/code&gt; 所繼承的 &lt;code&gt;CrudController&lt;/code&gt; 裡面的&lt;code&gt;__construct()&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; __construct()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// ---------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Create the CrudPanel object
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// ---------------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// Used by developers inside their ProductCrudControllers as
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// $this-&amp;gt;crud or using the CRUD facade.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// It&amp;#39;s done inside a middleware closure in order to have
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// the complete request inside the CrudPanel object.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;middleware&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ($request, $next) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setRequest&lt;/span&gt;($request);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setupDefaults&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setupConfigurationForCurrentOperation&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $next($request);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這個裡面會 call &lt;code&gt;setup()&lt;/code&gt;，但目前這個 parent class 的 &lt;code&gt;setup()&lt;/code&gt;沒有實作，所以要去看各 crudController 的 &lt;code&gt;setup()&lt;/code&gt;，這裡用 article 為例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setup&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setModel&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;\App\Models\Article&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setRoute&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;config&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;backpack.base.route_prefix&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/article&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setEntityNameStrings&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;article&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這裡會 call &lt;code&gt;setRoute()&lt;/code&gt;，而 &lt;code&gt;setRoute()&lt;/code&gt; 是在 parent class(CrudController) 所 implement 的：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupRoutes&lt;/span&gt;($segment, $routeName, $controller)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;preg_match_all&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/(?&amp;lt;=^|;)setup([^;]+?)Routes(;|$)/&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;implode&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;;&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;get_class_methods&lt;/span&gt;($this)), $matches);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;($matches[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;foreach&lt;/span&gt; ($matches[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; $methodName) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;setup&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;$methodName&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Routes&amp;#39;&lt;/span&gt;}($segment, $routeName, $controller);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;可以看到這裡就會 call &lt;code&gt;&#39;setup&#39;.$methodName.&#39;Routes&#39;&lt;/code&gt; 並傳入需要的 parameters。&lt;/p&gt;
&lt;h3 id=&#34;setupupdatedefaults&#34;&gt;setupUpdateDefaults&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateDefaults&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;allowAccess&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;operation&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;loadDefaultOperationSettingsFromConfig&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getModel&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;translationEnabled&lt;/span&gt;()) {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;([
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_locale&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hidden&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;value&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;request&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_locale&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;app&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getLocale&lt;/span&gt;(),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setupDefaultSaveActions&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;operation&lt;/span&gt;([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;list&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;show&amp;#39;&lt;/span&gt;], &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; () {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addButton&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;line&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;view&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud::buttons.update&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;end&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        });
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;從名字來看大致可以知道，&lt;code&gt;setupUpdateDefaults&lt;/code&gt; 負責設定更新操作所需的預設設定。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;allowAccess()&lt;/code&gt; 允許 CRUDController 有權限可以使用 update。會把操作名稱（update）添加到允許訪問的列表中。在這邊是把 &lt;code&gt;update&lt;/code&gt; 設置為允許訪問。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;operation()&lt;/code&gt;是在定義名為 &lt;code&gt;update&lt;/code&gt; 的操作，並用一個 closure 來設定 update 要作什麼事情。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;loadDefaultOperationSettingsFromConfig()&lt;/code&gt; 就是在 load 配置文件，通常位於 &lt;code&gt;config/backpack/operations&lt;/code&gt;，&lt;/p&gt;
&lt;p&gt;下面會看 model 有沒有啟用翻譯，如果有的話，會新增一個 hidden 的欄位。這個是用來儲存目前的語言設置（當前選擇的語言），以便在多語言網頁上正確更新相應的翻譯。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setupDefaultSaveActions()&lt;/code&gt;主要用於設置 default 的保存操作。包含 &lt;code&gt;save_and_back&lt;/code&gt; 、&lt;code&gt;save_and_edit&lt;/code&gt;、&lt;code&gt;save_and_new&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;這個 &lt;code&gt;setupDefaultSaveActions()&lt;/code&gt; 會在 Save and back 按鈕旁邊的小箭頭出現，如下圖：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/backpack04/2.png&#34;
	width=&#34;954&#34;
	height=&#34;584&#34;
	srcset=&#34;https://jyu1999.com/post/backpack04/2_hu3aebca68c323a69ec591b963a45377df_59650_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack04/2_hu3aebca68c323a69ec591b963a45377df_59650_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;小箭頭&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;163&#34;
		data-flex-basis=&#34;392px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;最後，在 operation 是 list, show 的情況下，執行 addbutton，也就是 &lt;em&gt;Add a button to the CRUD table view.&lt;/em&gt;。&lt;/p&gt;
&lt;h3 id=&#34;edit&#34;&gt;edit&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Show the form for editing the specified resource.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;edit&lt;/span&gt;($id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hasAccessOrFail&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// get entry ID from Request (makes sure its the last ID for nested resources)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        $id &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getCurrentEntryId&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; $id;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// get the info for that entry
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entry&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getEntryWithLocale&lt;/span&gt;($id);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setOperationSetting&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fields&amp;#39;&lt;/span&gt;, $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getUpdateFields&lt;/span&gt;());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;saveAction&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getSaveAction&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;title&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getTitle&lt;/span&gt;() &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;trans&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;backpack::crud.edit&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; &amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;entity_name&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $id;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// load the view from /resources/views/vendor/backpack/crud/ if it exists, otherwise load the one in the package
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;view&lt;/span&gt;($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getEditView&lt;/span&gt;(), $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;edit()&lt;/code&gt; 會寫在對應的 route 裡面：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;Route&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;($segment&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/{id}/edit&amp;#39;&lt;/span&gt;, [  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;as&amp;#39;&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $routeName&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.edit&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;uses&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; $controller&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;@edit&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;operation&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這邊其實就寫了當 user 輸入這個 url，會 call edit 這個 method。&lt;/p&gt;
&lt;p&gt;首先進入 edit，會檢查是否可以 access update（在 &lt;code&gt;setupUpdateDefaults()&lt;/code&gt; 裡面會新增）。如果沒有就不能編輯。&lt;/p&gt;
&lt;p&gt;接著會取得 id，知道要編輯哪個 entry。&lt;/p&gt;
&lt;p&gt;接著，使用 &lt;code&gt;getEntryWithLocale()&lt;/code&gt; 得到特定語言區域的資源。這個 method 會先看是否已經有 entry，還沒有的話會 call &lt;code&gt;getEntry()&lt;/code&gt; 來拿到 entry。接著，會去看這個 entry 是否支援翻譯，然後從request 去找可用語言區域列表。如果有的話，會用 &lt;code&gt;setLocale($locale)&lt;/code&gt;將語言區域設置為 request 指定的語言區域。&lt;/p&gt;
&lt;p&gt;下面的 &lt;code&gt;setOperationSetting()&lt;/code&gt; 會把 operation 存成 key-value store，這樣之後可以方便查找。&lt;/p&gt;
&lt;p&gt;然後再下面的程式碼，主要就是把一些資訊存進 &lt;code&gt;data&lt;/code&gt;，並在最後一起傳到 view 裡面。&lt;/p&gt;
&lt;p&gt;而 &lt;code&gt;getEditView()&lt;/code&gt; 的實現如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;getEditView&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update.view&amp;#39;&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;??&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud::edit&amp;#39;&lt;/span&gt;;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看起來就是先檢查使用者有沒有自定義 update view，如果沒有的話，就用 backpack 預設的。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://backpackforlaravel.com/docs/5.x/crud-how-to#how-to-customize-views-for-each-crud-panel-1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官方文件&lt;/a&gt; 上有寫一些方法，關於創建如何客製化自己的 view。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setShowView&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-view&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setEditView&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-view&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setCreateView&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-view&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setListView&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-view&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setReorderView&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-view&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setDetailsRowView&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;your-view&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;update&#34;&gt;update&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;Update the specified resource in the database.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hasAccessOrFail&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;update&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// execute the FormRequest authorization and validation, if one is required  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $request &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;validateRequest&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// register any Model Events defined on fields  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;registerFieldEvents&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// update the row in the db  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $item &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;update&lt;/span&gt;(  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $request&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;get&lt;/span&gt;($this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getKeyName&lt;/span&gt;()),  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getStrippedSaveRequest&lt;/span&gt;($request)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    );  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;data&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entry&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;entry&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $item;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// show a success message  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;\Alert&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;success&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;trans&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;backpack::crud.update_success&amp;#39;&lt;/span&gt;))&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;flash&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// save the redirect choice for next time  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setSaveAction&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;performSaveAction&lt;/span&gt;($item&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;getKey&lt;/span&gt;());  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;跟上面的 &lt;code&gt;edit()&lt;/code&gt; 一樣，&lt;code&gt;update&lt;/code&gt; 會先檢查有沒有 access。&lt;/p&gt;
&lt;p&gt;如果有的話，那就 call &lt;code&gt;validateRequest()&lt;/code&gt; 來驗證輸入，這邊的驗證會同時看 FormRequst 和寫在裡面的 &lt;code&gt;rules&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;驗證通過後，會 call &lt;code&gt;regusterFieldEvents()&lt;/code&gt; ，看起來是會把在 field 裡面有定義的所有 Eloquent Model Events 註冊。在上面的 [[#^eb7633|Callback]] 有提到怎麼定義 Eloquent Model Events。&lt;/p&gt;
&lt;p&gt;接著會 call &lt;code&gt;update()&lt;/code&gt; 把資料存進 db 裡面，&lt;code&gt;getStrippedSaveRequest()&lt;/code&gt; 是會把 request 做一些處理。&lt;/p&gt;
&lt;p&gt;存進 db 後，會再把更新後的 entry 存到 &lt;code&gt;data[]&lt;/code&gt;，方便後續的操作。&lt;/p&gt;
&lt;p&gt;最後就是顯示 flash message 並 redirect ㄌ。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;結語&#34;&gt;結語&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;程式碼蠻多的，但愈看愈有感覺，因為前面原本沒有很了解的東西，都會慢慢能了解實作。但也不知道要挖到多深就是ㄌ。&lt;/li&gt;
&lt;li&gt;好像可以去研究一下 &lt;a class=&#34;link&#34; href=&#34;https://laravel.com/docs/10.x/validation#form-request-validation&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laravel Form Request Validation&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://laravel.com/docs/master/eloquent#events&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Eloquent Events&lt;/a&gt;。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Laravel Backpack 初學者之路-03</title>
        <link>https://jyu1999.com/post/backpack03/</link>
        <pubDate>Fri, 19 May 2023 18:11:57 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/backpack03/</guid>
        <description>&lt;img src="https://jyu1999.com/post/backpack03/0.png" alt="Featured image of post Laravel Backpack 初學者之路-03" /&gt;&lt;p&gt;這篇主要是要來研究 Fields。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;intro&#34;&gt;Intro.&lt;/h2&gt;
&lt;p&gt;在前兩篇可以看到，fields types 定義了 admin 可以如何輸入資料，例如 text, datepicker, upload button&amp;hellip;等等。通常是給 Create or Update 使用。&lt;/p&gt;
&lt;p&gt;在 Backpack 裡面，有很多的預設的 field types，也可以創建自己的 field。如果只是要做一點點修改，也可以 overwrite 原本的 field type 就好。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;fields-api&#34;&gt;Fields API&lt;/h2&gt;
&lt;p&gt;在官網上列出了用於操作 fields 的一些方法。&lt;/p&gt;
&lt;p&gt;這些 method 會在 operation 裡面運作，所以一定要放在 &lt;code&gt;setupCreateOperation()&lt;/code&gt; 、 &lt;code&gt;setUpdatePeration()&lt;/code&gt;  or &lt;code&gt;setup()&lt;/code&gt; 裡面。&lt;/p&gt;
&lt;p&gt;（好像在 version 5 之後，也可以使用靜態的方式去 call，如 &lt;code&gt;CRUD::addfield()&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// add a field 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;($field_definition_array);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// shorthand: add a text field 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;db_column_name&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// add multiple fields
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addFields&lt;/span&gt;([$field_definition_array_1, $field_definition_array_2]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// change the attributes of a field
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;modifyField&lt;/span&gt;($name, $modifs_array);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// remove a field from both operations
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;removeField&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// remove multiple fields from both operations
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;removeFields&lt;/span&gt;($array_of_names);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// remove all fields from all operations
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;removeAllFields&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// FIELD ORDER
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// add a field before a given field
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;($field_definition_array)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;beforeField&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// add a field after a given field
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;($field_definition_array)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;afterField&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// New in Backpack 4.1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// -------------------
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// add a field with this name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// change the type attribute on the &amp;#39;price&amp;#39; field
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;$this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;field-attributes&#34;&gt;Field Attributes&lt;/h2&gt;
&lt;h3 id=&#34;mandatory-field-attributes&#34;&gt;Mandatory Field Attributes&lt;/h3&gt;
&lt;p&gt;只有一個 attributes 是強迫要有的： &lt;code&gt;name&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;這個 &lt;code&gt;name&lt;/code&gt; 會被怎麼使用？官網上提供了兩個：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;inside the inputs, as &lt;code&gt;&amp;lt;input name=&#39;your_db_column&#39; /&amp;gt;&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;to store the information in the database, so your &lt;code&gt;name&lt;/code&gt; should correspond to a database column (if the field type doesn&amp;rsquo;t have different instructions);&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;recommended-field-attributes&#34;&gt;Recommended Field Attributes&lt;/h3&gt;
&lt;p&gt;一個 field 也最好有以下的 field:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;the &lt;code&gt;name&lt;/code&gt; of the column in the database (ex: &amp;ldquo;title&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;the human-readable &lt;code&gt;label&lt;/code&gt; for the input (ex: &amp;ldquo;Title&amp;rdquo;)&lt;/li&gt;
&lt;li&gt;the &lt;code&gt;type&lt;/code&gt; of the input (ex: &amp;ldquo;text&amp;rdquo;)
如果 label 被省略的話， backpack 會嘗試從 &lt;code&gt;name&lt;/code&gt; 猜一下 label。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;如果 &lt;code&gt;type&lt;/code&gt; 被省略的話， backpack 會根據 column type 來猜，或是 Model 有一個名為 &lt;code&gt;name&lt;/code&gt; 的 relationship。&lt;/p&gt;
&lt;h4 id=&#34;field-attributes-for-presentation-purposes&#34;&gt;Field Attributes for Presentation Purposes&lt;/h4&gt;
&lt;p&gt;有一些選擇性可用的 attributes 可以用在大部分的 default field types 上，可以讓人很簡單的達到一些效果：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;suffix&amp;#39;&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;default&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;some value&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// set a default value
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hint&amp;#39;&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Some hint text&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// helpful text, shows up after the input
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;attributes&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;placeholder&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Some text when empty&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;form-control some-class&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readonly&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readonly&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;disabled&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ], &lt;span style=&#34;color:#75715e&#34;&gt;// change the HTML attributes of your input
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrapper&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;form-group col-md-12&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ], &lt;span style=&#34;color:#75715e&#34;&gt;// change the HTML attributes for the field wrapper - mostly for resizing fields 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看起來蠻有用的，之前有用過 &lt;code&gt;&#39;prefix&#39;&lt;/code&gt;，可以加入前贅詞。&lt;/p&gt;
&lt;h4 id=&#34;fake-field-attributes-stores-fake-attributes-as-json-in-the-database&#34;&gt;Fake Field Attributes (stores fake attributes as JSON in the database)&lt;/h4&gt;
&lt;p&gt;如果今天要存的資料有多種，但資料庫裡只有一欄，此時就需要先把資料轉成 JSON 格式再存進資料庫。&lt;/p&gt;
&lt;p&gt;預設來說，會存在 &lt;code&gt;extras&lt;/code&gt; 這個 column。&lt;/p&gt;
&lt;p&gt;要使用 fake field attributes，有以下步驟：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 field 裡面加入 fake attribute
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// JSON variable name
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tag Name&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// human-readable label for the input
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fake&amp;#39;&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// show the field, but don&amp;#39;t store it in the database column above
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;store_in&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;extras&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// [optional] the database column name where you want the fake fields to ACTUALLY be stored as a JSON array 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; ],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;在 model 裡面，要確認存 JSONs 的 db columns(default: extras) 有：
&lt;ul&gt;
&lt;li&gt;In the &lt;code&gt;$fillable&lt;/code&gt; property;&lt;/li&gt;
&lt;li&gt;on a new &lt;code&gt;$fakeColumns&lt;/code&gt; property(create it now)&lt;/li&gt;
&lt;li&gt;are cast as array in &lt;code&gt;$casts&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;tab-attribute-splits-forms-into-tabs&#34;&gt;Tab Attribute Splits Forms into Tabs&lt;/h4&gt;
&lt;p&gt;可以把 create/edit input 放在不同的 tabs 裡面。
&lt;img src=&#34;https://jyu1999.com/post/backpack03/1.png&#34;
	width=&#34;668&#34;
	height=&#34;526&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/1_huf8ce6fcc025d7991fba346b9885a7467_45002_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/1_huf8ce6fcc025d7991fba346b9885a7467_45002_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;把 create/edit input 放在不同的 tabs 裡面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;126&#34;
		data-flex-basis=&#34;304px&#34;
	
&gt;
如果要使用這個功能，要在 field attribute 裡面加上 &amp;rsquo;tab&amp;rsquo;。
舉例而言，如果我想要把 &lt;code&gt;price&lt;/code&gt; 放在  &lt;code&gt;test&lt;/code&gt; 這個 tab 裡面，然後把 &lt;code&gt;articles&lt;/code&gt; 這個 select2_multiple 放在 &lt;code&gt;hello&lt;/code&gt; 這個 tab 裡面，可以這樣寫：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;([  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tab&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;test&amp;#39;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;([  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;select2_multiple&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the relationship name in your Model  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entity&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the relationship name in your Model  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;attribute&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// attribute on Article that is shown to admin  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pivot&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// on create&amp;amp;update, do you need to add/delete pivot table entries?  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tab&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hello&amp;#39;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後呈現出來的效果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/backpack03/2.png&#34;
	width=&#34;1554&#34;
	height=&#34;1274&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/2_hu2aa17d5cabe930aec90e93db9cfbb9ae_95905_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/2_hu2aa17d5cabe930aec90e93db9cfbb9ae_95905_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;放一個 test tab&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;121&#34;
		data-flex-basis=&#34;292px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以看到如果沒有指定 tab 的，會獨立是一個 component，放在所有 tabs 的上面。&lt;/p&gt;
&lt;h4 id=&#34;attributes-for-fields-containing-related-entries&#34;&gt;Attributes For Fields Containing Related Entries&lt;/h4&gt;
&lt;p&gt;這邊主要是在說，如果 field works with related entities( relationships like &lt;code&gt;BelongsTo&lt;/code&gt; , &lt;code&gt;HasOne&lt;/code&gt;, &lt;code&gt;HasMany&lt;/code&gt;, &lt;code&gt;BelongsToMany&lt;/code&gt;, etc)，有一些參數需要/可以設定。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;entity&lt;/code&gt; - points to the method on the model that contains the relationship; having this defined, Backpack will try to guess from it all other field attributes; ex: &lt;code&gt;category&lt;/code&gt; or &lt;code&gt;tags&lt;/code&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;model&lt;/code&gt; - the classname (including namespace) of the related model (ex: &lt;code&gt;App\Models\Category&lt;/code&gt;); usually deduced from the relationship function in the model;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;attribute&lt;/code&gt; - the attribute on the related model (aka foreign attribute) that will be show to the user; for example, you wouldn&amp;rsquo;t want a dropdown of categories showing IDs - no, you&amp;rsquo;d want to show the category names; in this case, the &lt;code&gt;attribute&lt;/code&gt; will be &lt;code&gt;name&lt;/code&gt;; usually deduced using the &lt;a class=&#34;link&#34; href=&#34;https://backpackforlaravel.com/docs/5.x/crud-fields#identifiable-attribute&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;identifiable attribute functionality explained below&lt;/a&gt;;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;multiple&lt;/code&gt; - boolean, allows the user to pick one or multiple items; usually deduced depending on whether it&amp;rsquo;s a 1-to-n or n-n relationship;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;pivot&lt;/code&gt; - boolean, instructs Backpack to store the information inside a pivot table; usually deduced depending on whether it&amp;rsquo;s a 1-to-n or n-n relationship;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;relation_type&lt;/code&gt; - text, deduced from &lt;code&gt;entity&lt;/code&gt;; not a good idea to overwrite;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;其實看前幾天做的 &lt;code&gt;select2_multiple&lt;/code&gt; 大概就可以知道怎麼用了。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;很多個-field&#34;&gt;很多個 field&lt;/h2&gt;
&lt;p&gt;文件後面就是各個不同的 field 介紹，這個就挑著記。&lt;/p&gt;
&lt;h3 id=&#34;relationship&#34;&gt;Relationship&lt;/h3&gt;
&lt;p&gt;會給 user 一個 &lt;code&gt;select2&lt;/code&gt; input，讓使用者可以選擇一個或多個關聯的 Eloquent Model 的 entires。
為了要正常運作，在 Model 裡面必須要正確定義 relationships。
在官網上有列出有支持的 relationships。&lt;/p&gt;
&lt;h4 id=&#34;load-entries-from-ajax-calls---using-the-fetch-operation&#34;&gt;Load entries from AJAX calls - using the Fetch Operation&lt;/h4&gt;
&lt;p&gt;如果同時要 load 很多 entries，用 onpage Eloquent query 速度可能會很慢。
在這種情況下，可以叫 &lt;code&gt;relationship&lt;/code&gt; field 透過 AJAX calls 來拿到 entries。
要達成這樣的效果，有以下步驟：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Add &lt;code&gt;&#39;ajax&#39; =&amp;gt; true&lt;/code&gt; to your relationship field definition:
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[   &lt;span style=&#34;color:#75715e&#34;&gt;// relationship
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationship&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the method on your model that defines the relationship
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ajax&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// OPTIONALS:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;label&amp;#39;       =&amp;gt; &amp;#34;Category&amp;#34;,
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;attribute&amp;#39;   =&amp;gt; &amp;#34;name&amp;#34;, // foreign key attribute that is shown to user (identifiable attribute)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;entity&amp;#39;      =&amp;gt; &amp;#39;category&amp;#39;, // the method that defines the relationship in your Model
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;model&amp;#39;       =&amp;gt; &amp;#34;App\Models\Category&amp;#34;, // foreign key Eloquent model
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;placeholder&amp;#39; =&amp;gt; &amp;#34;Select a category&amp;#34;, // placeholder for the select2 input
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// AJAX OPTIONALS:
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;delay&amp;#39;                   =&amp;gt; 500, // the minimum amount of time between ajax requests when searching in the field
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;data_source&amp;#39;             =&amp;gt; url(&amp;#34;fetch/category&amp;#34;), // url to controller search function (with /{id} should return model)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;minimum_input_length&amp;#39;    =&amp;gt; 2, // minimum characters to type before querying results
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;dependencies&amp;#39;            =&amp;gt; [&amp;#39;category&amp;#39;], // when a dependency changes, this select2 is reset to null
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;method&amp;#39;                  =&amp;gt; &amp;#39;POST&amp;#39;, // optional - HTTP method to use for the AJAX call (GET, POST)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;#39;include_all_form_fields&amp;#39; =&amp;gt; false, // optional - only send the current field through AJAX (for a smaller payload if you&amp;#39;re not using multiple chained select2s)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; ],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;主要應該是 &lt;code&gt;&#39;ajax&#39;=&amp;gt;true&lt;/code&gt; 這行。
所以我嘗試在  &lt;code&gt;ArticleCrudController.php&lt;/code&gt; 裡面把原本的 &lt;code&gt;select2&lt;/code&gt; 改掉：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;([  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Tags&amp;#34;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;relationship&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the method that defines the relationship in your Model  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entity&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the method that defines the relationship in your Model  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;attribute&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// foreign key attribute that is shown to user  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pivot&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// on create&amp;amp;update, do you need to add/delete pivot table entries?  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ajax&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此時應該是會報錯，看起來是根本沒有 router：
&lt;img src=&#34;https://jyu1999.com/post/backpack03/3.png&#34;
	width=&#34;1662&#34;
	height=&#34;1055&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/3_hu56943392542909a6f3070483b28ff239_198289_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/3_hu56943392542909a6f3070483b28ff239_198289_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;404&amp;hellip;&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;157&#34;
		data-flex-basis=&#34;378px&#34;
	
&gt;&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;這時候就要到第二步驟，在&lt;code&gt;ArticleCrudController.php&lt;/code&gt;加入以下程式碼：
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;\Backpack\CRUD\app\Http\Controllers\Operations\FetchOperation&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;fetchTags&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;fetch&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;\App\Models\Tag&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;這段程式碼的用途就是要開一個對應到 AJAX Calls 的 route 和 method。
會幫我們設定好 &lt;code&gt;/fetch/tag&lt;/code&gt; route，會導到 &lt;code&gt;fetchTags()&lt;/code&gt;，並 return 搜尋結果。
感覺蠻有趣的，[官方文件](&lt;a class=&#34;link&#34; href=&#34;https://backpackforlaravel.com/docs/5.x/crud-operation-fetch&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;FetchOperation docs&lt;/a&gt;)有說明更多關於怎麼 operation 怎麼運作的，不過先暫時跳過&amp;hellip;&lt;/li&gt;
&lt;/ol&gt;
&lt;h4 id=&#34;create-related-entries-in-a-modal---using-the-inlinecreate-operation&#34;&gt;Create related entries in a modal - using the InlineCreate Operation&lt;/h4&gt;
&lt;p&gt;使用者去使用 AJAX 做搜尋，有可能根本沒有這個資料。&lt;/p&gt;
&lt;p&gt;所以可能會需要讓使用者在不用離開原本的頁面下，新增一個 related entry。(e.g. 在 create article 的頁面新增一個 tag)&lt;/p&gt;
&lt;p&gt;這個功能可以使用在 &lt;code&gt;BelongsTo&lt;/code&gt;, &lt;code&gt;BelongsToMany&lt;/code&gt;, &lt;code&gt;MorphToMany&lt;/code&gt; relationships。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/backpack03/4.png&#34;
	width=&#34;1275&#34;
	height=&#34;652&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/4_hu27784fd40f80395e4fbc23259028f37b_97458_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/4_hu27784fd40f80395e4fbc23259028f37b_97458_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;功能展示&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;195&#34;
		data-flex-basis=&#34;469px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;要使用這個功能，要先使用 Fetch operation 去拿到 entries。&lt;/p&gt;
&lt;p&gt;然後再照以下步驟：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;增加 &lt;code&gt;inline_create&lt;/code&gt; 在 field definition&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// for 1-n relationships (ex: category)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationship&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;category&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ajax&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;inline_create&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;lt;--- THIS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// for n-n relationships (ex: tags)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationship&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the method on your model that defines the relationship
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ajax&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;inline_create&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [ &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entity&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tag&amp;#39;&lt;/span&gt; ]  &lt;span style=&#34;color:#75715e&#34;&gt;// &amp;lt;--- OR THIS
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// in this second example, the relation is called `tags` (plural),
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// but we need to define the entity as &amp;#34;tag&amp;#34; (singural)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這時候應該會看到以下 bug，跟上面的 fetch 一樣，目前還沒有 route 可以處理這個請求。所以要進入第二步驟。
&lt;img src=&#34;https://jyu1999.com/post/backpack03/5.png&#34;
	width=&#34;2338&#34;
	height=&#34;1156&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/5_hua1fc53358b6b06be35d0b31a478061cd_328936_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/5_hua1fc53358b6b06be35d0b31a478061cd_328936_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Route not defined&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;202&#34;
		data-flex-basis=&#34;485px&#34;
	
&gt;
2. 要在 secondary entity （在這個例子中是 TagCrudController）中 use InlineCreate operation&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;TagCrudController&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CrudController&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;\Backpack\CRUD\app\Http\Controllers\Operations\InlineCreateOperation&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// ...
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt; }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;加入之後看 &lt;code&gt;artisan route:list&lt;/code&gt; 就會看到 backpack 幫我們生成一個 route 了：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     GET|HEAD  admin/tag/create ....................... tag.create › Admin&lt;span style=&#34;color:#ae81ff&#34;&gt;\T&lt;/span&gt;agCrudController@create
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   POST      admin/tag/inline/create tag-inline-create-save › Admin&lt;span style=&#34;color:#ae81ff&#34;&gt;\T&lt;/span&gt;agCrudController@storeInlin…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   POST      admin/tag/inline/create/modal tag-inline-create › Admin&lt;span style=&#34;color:#ae81ff&#34;&gt;\T&lt;/span&gt;agCrudController@getInline…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;InlineCreateOperation&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; 會讓 modal 顯示和 Create Operation 一樣的 field。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;#### Save additional data to pivot table&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;對於有 pivot table 的 relationship&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;n2n: &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;BelongsToMany&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;MorphToMany&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;，這個 pivot table 除了 foreign key 之外，還可能包含其他列。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;relationship&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; field 提供了一個快速的方法，讓 admin 可以編輯這些 &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;extra attributes&amp;#34;&lt;/span&gt; 。
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;舉例而言，如果有以下 db tables:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;```&lt;/span&gt;php
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// - companies: id, name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// - company_person: company_id, person_id, job_title, job_description
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// - persons: id, first_name, last_name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;company_person&lt;/code&gt; 這個 pivot table 裡面，我們可能想要讓 admin 去編輯特定使用者的 &lt;code&gt;job_title&lt;/code&gt; 或是 &lt;code&gt;job_description&lt;/code&gt; 。如下圖：
&lt;img src=&#34;https://jyu1999.com/post/backpack03/6.png&#34;
	width=&#34;645&#34;
	height=&#34;471&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/6_hud91329df0e6bc4e5e5d6b8d4b649c043_33329_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/6_hud91329df0e6bc4e5e5d6b8d4b649c043_33329_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;讓 admin 去編輯特定使用者的 job_title &#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;136&#34;
		data-flex-basis=&#34;328px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;步驟如下（在這裡就不實作ㄌ）：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在 model 裡面，確認 pivot 有被 define（使用 &lt;code&gt;withPivot()&lt;/code&gt;）:&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// inside the Company model
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;people&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;belongsToMany&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;\App\Models\Person&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;withPivot&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;job_title&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;job_description&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// inside the Person model
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;companies&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;belongsToMany&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;\App\Models\Company&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;withPivot&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;job_title&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;job_description&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;在 &lt;code&gt;relationship&lt;/code&gt; field defintion, 加入 &lt;code&gt;subfield&lt;/code&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Inside PersonCrudController
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;companies&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationship&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     &lt;span style=&#34;color:#75715e&#34;&gt;// ..
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;subfields&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;job_title&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrapper&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;form-group col-md-3&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;job_description&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrapper&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;form-group col-md-9&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;manage-related-entries-in-the-same-form-create-update-delete&#34;&gt;Manage related entries in the same form (create, update, delete)&lt;/h4&gt;
&lt;p&gt;有時候對於 &lt;code&gt;hasMany&lt;/code&gt; 和 &lt;code&gt;morphMany&lt;/code&gt; relationships，secondary entry 高度依賴 primary entry，所以我們可能不想要在一個額外的懸浮式視窗來編輯這個 secondary entry。&lt;/p&gt;
&lt;h4 id=&#34;delete-related-entries-or-fall-back-to-default&#34;&gt;Delete related entries or fall back to default&lt;/h4&gt;
&lt;p&gt;一般而言，當 admin 在 &amp;ldquo;select&amp;rdquo; 裡面移除了一個 relationship，只有 relationship 被移除，related entry 會保留。&lt;/p&gt;
&lt;p&gt;但對於 &lt;code&gt;hasMany&lt;/code&gt; 和 &lt;code&gt;morphMany&lt;/code&gt; 來說，有時候我們可能也會想要移除一整個 relationship。&lt;/p&gt;
&lt;p&gt;如下例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;// Inside ArticleCrudController
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;relationship&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;comments&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// when removed, use fallback_id
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;fallback_id&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// will relate to the comment with ID &amp;#34;3&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// when removed, delete the entry
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;force_delete&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// will delete that comment
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;repeatable&#34;&gt;Repeatable&lt;/h3&gt;
&lt;p&gt;有時候我們可能想要給 admin 可以同時新增很多欄位。&lt;/p&gt;
&lt;p&gt;比如說，在「台灣國家公園入園入山申請」之中，可以按下「新增隊員」，就可以新增很多欄位 （for 這個隊員）。&lt;/p&gt;
&lt;p&gt;這個時候就可以用到 repeatable。&lt;/p&gt;
&lt;p&gt;從 backpack v5 版本開始，repeatable 會 return array，會需要在 model 裡面設定 cast 成 json，再存成資料庫。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/backpack03/7.png&#34;
	width=&#34;982&#34;
	height=&#34;539&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/7_hu5fb499aa798a832b475b299e182b9081_29590_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/7_hu5fb499aa798a832b475b299e182b9081_29590_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;182&#34;
		data-flex-basis=&#34;437px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可以按下 &amp;ldquo;New item&amp;rdquo; 按鈕，就會增加新的 subfields group（e.g. 一個新隊員）。&lt;/p&gt;
&lt;p&gt;大部分的 field type 都可以用在 field group 裡面，也可以使用 &lt;code&gt;wrapper&lt;/code&gt; 更改每個 field 的寬度。&lt;/p&gt;
&lt;p&gt;但有以下事情是需要注意的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;所有在 group 裡面的 subfields 都需要定義清楚，Backpack 不會幫忙猜 Label 之類的。&lt;/li&gt;
&lt;li&gt;有些 field type 是不可以在 subfield 使用的，例如 relationship field、upload、upload_multiple&lt;/li&gt;
&lt;li&gt;Validation: 可以透過 Laravel nested array validation 的方式來驗證 subfield 的資料。e.g. &lt;code&gt;testimonial.*.name =&amp;gt; &#39;required&#39;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;Filed usage and relationships: 不能在 repeatable field 裡面再塞一個 repeatable field。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[   &lt;span style=&#34;color:#75715e&#34;&gt;// repeatable
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;testimonials&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Testimonials&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;repeatable&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;subfields&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [ &lt;span style=&#34;color:#75715e&#34;&gt;// also works as: &amp;#34;fields&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrapper&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;form-group col-md-4&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;position&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Position&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrapper&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;form-group col-md-4&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;company&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;text&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Company&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrapper&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;form-group col-md-4&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;quote&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;ckeditor&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Quote&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// optional
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;new_item_label&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Add Group&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// customize the text of the button
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;init_rows&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// number of empty rows to be initialized, by default 1
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min_rows&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// minimum rows allowed, when reached the &amp;#34;delete&amp;#34; buttons will be hidden
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max_rows&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// maximum rows allowed, when reached the &amp;#34;new item&amp;#34; button will be hidden
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// allow reordering?
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reorder&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// hide up&amp;amp;down arrows next to each row (no reordering)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reorder&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// show up&amp;amp;down arrows next to each row
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reorder&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// show arrows AND add a hidden subfield with that name (value gets updated when rows move)
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reorder&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;order&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;attributes&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;data-reorder-input&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;]], &lt;span style=&#34;color:#75715e&#34;&gt;// show arrows AND add a visible number subfield
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;select2-系列&#34;&gt;select2 系列&lt;/h3&gt;
&lt;p&gt;如同官方的敘述：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Works just like the SELECT field, but prettier.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;select 系列基本上會把全部選項列出來，如果要多選還要按著 shift。
&lt;img src=&#34;https://jyu1999.com/post/backpack03/8.png&#34;
	width=&#34;943&#34;
	height=&#34;545&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/8_hua64ea88273a1cfe2eed7588c57e54f57_31012_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/8_hua64ea88273a1cfe2eed7588c57e54f57_31012_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;select 列出全部選項&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;173&#34;
		data-flex-basis=&#34;415px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;select2 系列看起來就比較美觀，是類似 dropdown 這樣：
&lt;img src=&#34;https://jyu1999.com/post/backpack03/9.png&#34;
	width=&#34;921&#34;
	height=&#34;507&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/9_hub055a9ffc727442f13f3dea89eee2ed1_32946_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/9_hub055a9ffc727442f13f3dea89eee2ed1_32946_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;select2 展示&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;181&#34;
		data-flex-basis=&#34;435px&#34;
	
&gt;&lt;/p&gt;
&lt;h3 id=&#34;slug&#34;&gt;Slug&lt;/h3&gt;
&lt;p&gt;Slug 看起來也蠻特殊的，可以在網頁直接把文字動態轉為符合網址的格式。
使用方式如下：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addfield&lt;/span&gt;([  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;target&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Slug&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;效果會如下（是動態的，但這裡用圖片示意）：
&lt;img src=&#34;https://jyu1999.com/post/backpack03/10.png&#34;
	width=&#34;902&#34;
	height=&#34;452&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/10_hu49396c2f870dbb871c18d5b4c8351118_29943_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/10_hu49396c2f870dbb871c18d5b4c8351118_29943_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;slug 效果&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;199&#34;
		data-flex-basis=&#34;478px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果不想要是動態的，也可以將他暫停掉：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupUpdateOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setupCreateOperation&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;// disable editing the slug when editing
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;target&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;attributes&lt;/span&gt;([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readonly&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;readonly&amp;#39;&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;table&#34;&gt;Table&lt;/h3&gt;
&lt;p&gt;Table 感覺也是工作上會常常用的。
使用 Table 的話，會允許 multiple input，並把這些 input value 存成 JSON。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[   &lt;span style=&#34;color:#75715e&#34;&gt;// Table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;options&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Options&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;table&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entity_singular&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;option&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// used on the &amp;#34;Add X&amp;#34; button
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;columns&amp;#39;&lt;/span&gt;         &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Name&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;desc&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Description&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Price&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;max&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// maximum rows allowed in the table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;min&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// minimum rows allowed in the table
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;做出來會如下圖：
&lt;img src=&#34;https://jyu1999.com/post/backpack03/11.png&#34;
	width=&#34;666&#34;
	height=&#34;256&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/11_hue4dc53f89d84733ea4c480287325b2d4_17873_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/11_hue4dc53f89d84733ea4c480287325b2d4_17873_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;table 成果&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;260&#34;
		data-flex-basis=&#34;624px&#34;
	
&gt;
）&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[!note]
記得要在 model 設定 casting。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;overwriting-default-field-types&#34;&gt;Overwriting Default Field Types&lt;/h2&gt;
&lt;p&gt;Backpack 的 field types 通常都存在 &lt;code&gt;resources/views/fields&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;如果需要修改已經存在的 field，不用特別去改 package，只需要在 &lt;code&gt;/resources/views/vendor/backpack/crud/fields&lt;/code&gt; 新增一個有同樣名字的 view。Backpack 會優先確認那裡有沒有檔案，如果沒有檔案才去 load package。&lt;/p&gt;
&lt;p&gt;可以使用 &lt;code&gt;php artisan backpack:field --from=field_name&lt;/code&gt; 來新增一個 field blade file，backpack 會幫忙新增。可以對新增完的檔案進行修改：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{{&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;number&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;}}  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;include&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud::fields.inc.wrapper_start&amp;#39;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt; $field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;include&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud::fields.inc.translatable_icon&amp;#39;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;suffix&amp;#39;&lt;/span&gt;])) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input-group&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;endif&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;])) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input-group-prepend&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input-group-text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt; $field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;endif&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;input&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;number&amp;#34;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$field[&amp;#39;name&amp;#39;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; }}&amp;#34;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{{ old_empty_or_null(&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$field[&amp;#39;name&amp;#39;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &amp;#39;&amp;#39;) ??  &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$field[&amp;#39;value&amp;#39;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ?? &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$field[&amp;#39;default&amp;#39;]&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; ?? &amp;#39;&amp;#39; }}&amp;#34;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;include&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud::fields.inc.attributes&amp;#39;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;suffix&amp;#39;&lt;/span&gt;])) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input-group-append&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;span&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;input-group-text&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt; $field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;suffix&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;span&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;endif&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;suffix&amp;#39;&lt;/span&gt;])) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;div&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;endif&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {{&lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;HINT&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;}}  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;isset&lt;/span&gt;($field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hint&amp;#39;&lt;/span&gt;]))  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;help-block&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt; $field[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;hint&amp;#39;&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;!!&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;p&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;endif&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Hello&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;@&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;include&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;crud::fields.inc.wrapper_end&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;像我在 number field type 的最後面加了一個 &lt;code&gt;Hello&lt;/code&gt;，雖然沒什麼意義，但可以看一下效果：
&lt;img src=&#34;https://jyu1999.com/post/backpack03/12.png&#34;
	width=&#34;933&#34;
	height=&#34;324&#34;
	srcset=&#34;https://jyu1999.com/post/backpack03/12_hu494de725ec0ef2337ee384bce42bf793_17058_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack03/12_hu494de725ec0ef2337ee384bce42bf793_17058_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;number field type 的最後面加了一個 Hello&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;287&#34;
		data-flex-basis=&#34;691px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;creating-a-custom-field-type&#34;&gt;Creating a Custom Field Type&lt;/h2&gt;
&lt;p&gt;也可以自己創建一個新的field type，可以用以下指令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// to create one using Backpack&lt;span style=&#34;color:#ae81ff&#34;&gt;\G&lt;/span&gt;enerators, run:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;php artisan backpack:field new_field_name
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;// alternatively, to create a new field similar an existing field, run: 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;php artisan backpack:field new_field_name --from&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;old_field_name
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Field Defintion 可能會像：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[   &lt;span style=&#34;color:#75715e&#34;&gt;// Custom Field
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Home address&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;address&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;/// &amp;#39;view_namespace&amp;#39; =&amp;gt; &amp;#39;yourpackage&amp;#39; // use a custom namespace of your package to load views within a custom view folder.
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;當然，我們也可以自己編輯 blade file。在這個 custom field type，可以用幾個變數：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;$crud&lt;/code&gt; - all the CRUD Panel settings, options and variables;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$entry&lt;/code&gt; - in the Update operation, the current entry being modified (the actual values);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;$field&lt;/code&gt; - all attributes that have been passed for this field;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;結語&#34;&gt;結語&lt;/h2&gt;
&lt;p&gt;這篇文件蠻詳盡的介紹了 fields，從一開始介紹 attributes，到中間列出幾乎所有的 fields，最後介紹客製化。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Laravel Backpack 初學者之路-02</title>
        <link>https://jyu1999.com/post/backpack02/</link>
        <pubDate>Fri, 19 May 2023 18:05:21 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/backpack02/</guid>
        <description>&lt;img src="https://jyu1999.com/post/backpack02/0.png" alt="Featured image of post Laravel Backpack 初學者之路-02" /&gt;&lt;p&gt;第二天依然來看 backpack 的 text course: Advanced Features。
基本上是有蠻多 operations 和 features。
官方教學文檔有提到這些東西先看看就好，所以在這裡先以了解使用方式為主，不會深究具體的實現方式。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;other-operations&#34;&gt;Other Operations&lt;/h2&gt;
&lt;h3 id=&#34;show&#34;&gt;Show&lt;/h3&gt;
&lt;p&gt;這個 operation 是讓 admin 有一個網頁可以看一個 entry 裡面的詳細資料，比如說有些文章的 content 不會顯示在清單頁，但可以利用 show operation 做到檢視。
它會在 ListEntries View 新增一個 preview。&lt;/p&gt;
&lt;p&gt;如果是透過前一篇的指令 &lt;code&gt;sail artisan backpack:crud tag&lt;/code&gt; 生成的 controller，內建就會包含 &lt;code&gt;use \Backpack\CRUD\app\Http\Controllers\Operations\ShowOperation;&lt;/code&gt;。如果沒有的話要加上這行才可以用 show operation。
然後可以用 &lt;code&gt;sail artisan route:list&lt;/code&gt; 看一下怎麼到 preview 網頁，基本上是用 &lt;code&gt;admin/article/{id}/show&lt;/code&gt;。&lt;/p&gt;
&lt;h4 id=&#34;how-to-configure&#34;&gt;How to configure&lt;/h4&gt;
&lt;p&gt;預設是會列出所有在資料庫裡面的資訊，但如果不想要這麼多，可以客製化。
可以在 crudController 裡面放一個 &lt;code&gt;setupShowOperation()&lt;/code&gt; 。
如果想要讓 preview 頁面顯示的東西、設定、順序都跟 ListEntries View 一樣，可以用以下指令：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupShowOperation&lt;/span&gt;() 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{ 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setupListOperation&lt;/span&gt;(); 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;當然，如同 &lt;code&gt;setupListOperation()&lt;/code&gt; 一樣，如果想要更動顯示順序、設定，也是可以自己再另外寫，詳見&lt;a class=&#34;link&#34; href=&#34;https://backpackforlaravel.com/docs/5.x/crud-operation-show&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官網&lt;/a&gt;。&lt;/p&gt;
&lt;h4 id=&#34;how-to-add-custom-sectionsaka-widgets&#34;&gt;How to add custom sections(aka. Widgets)&lt;/h4&gt;
&lt;p&gt;在 show 的頁面上，可以加入一些 widgets，像是卡片、圖表之類的。
可以使用預設的 widget type，也可以創建自己的 widgets。
Backpack 預設提供兩個可以放 widgets 的 section:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;before_content&lt;/li&gt;
&lt;li&gt;after_content
我們可以用以下官方提供的程式碼來試用看看 widget:&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupShowOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// dynamic data to render in the following widget
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $userCount &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;\App\Models\User&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;count&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//add div row using &amp;#39;div&amp;#39; widget and make other widgets inside it to be in a row
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Widget&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;to&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;before_content&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;div&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;row&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;([
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//widget made using fluent syntax
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;Widget&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;make&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;progress&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;card border-0 text-white bg-primary&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;progressClass&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;progress-bar&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;value&lt;/span&gt;($userCount)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;description&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Registered users.&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;progress&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;int&lt;/span&gt;)$userCount &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;hint&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; $userCount &lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39; more until next milestone.&amp;#39;&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;//widget made using the array definition 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;Widget&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;make&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;card&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;card bg-dark text-white&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;wrapper&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;class&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;col-sm-3 col-md-3&amp;#39;&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;header&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Example Widget&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;body&amp;#39;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Widget placed at &amp;#34;before_content&amp;#34; secion in same row&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;//you can also add Script &amp;amp; CSS to your page using &amp;#39;script&amp;#39; &amp;amp; &amp;#39;style&amp;#39; widget
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Widget&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;script&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;stack&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after_scripts&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://code.jquery.com/ui/1.12.0/jquery-ui.min.js&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Widget&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;add&lt;/span&gt;()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;style&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;stack&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;after_styles&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;content&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;https://cdn.jsdelivr.net/npm/@shoelace-style/shoelace@2.0.0-beta.58/dist/themes/light.css&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;Widget::add()-&amp;gt;to(&#39;before_content&#39;)&lt;/code&gt; 可以看到這邊使用了 &lt;code&gt;before_content&lt;/code&gt; ，所以理論上 widget 會顯示在預設要顯示的東西之上。
&lt;img src=&#34;https://jyu1999.com/post/backpack02/1.png&#34;
	width=&#34;1920&#34;
	height=&#34;707&#34;
	srcset=&#34;https://jyu1999.com/post/backpack02/1_hu8b4c8872735b674c1aeb06262e6f4c03_104388_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack02/1_hu8b4c8872735b674c1aeb06262e6f4c03_104388_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Widget 在上面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;271&#34;
		data-flex-basis=&#34;651px&#34;
	
&gt;
同理可知，如果用 &lt;code&gt;after_content&lt;/code&gt;，widget 就會在下面：
&lt;img src=&#34;https://jyu1999.com/post/backpack02/2.png&#34;
	width=&#34;1920&#34;
	height=&#34;706&#34;
	srcset=&#34;https://jyu1999.com/post/backpack02/2_hu139c22cf1592b4fc8e5e53866ca7f0ee_101222_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack02/2_hu139c22cf1592b4fc8e5e53866ca7f0ee_101222_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Widget 在下面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;271&#34;
		data-flex-basis=&#34;652px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;how-to-overwrite&#34;&gt;How to overwrite&lt;/h4&gt;
&lt;p&gt;雖然預設的頁面看起來不錯，但我們可能仍想要更動 show 的邏輯。
目前頁面顯示的邏輯是寫在&lt;code&gt;ShowOperation.php&lt;/code&gt;裡面，&lt;code&gt;show()&lt;/code&gt;這個 method
而 EntityCrudController 是繼承了 &lt;code&gt;ShowOperation&lt;/code&gt; 這個 trait，所以我們可以在 EntityCrudOperation 裡面自己寫一個 &lt;code&gt;show()&lt;/code&gt; 就可以為不同的 entity 客製化顯示邏輯喔。
如官網範例：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;\Backpack\CRUD\app\Http\Controllers\Operations\ShowOperation&lt;/span&gt; { &lt;span style=&#34;color:#a6e22e&#34;&gt;show&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;traitShow&lt;/span&gt;; }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;show&lt;/span&gt;($id)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// custom logic before
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    $content &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;traitShow&lt;/span&gt;($id);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// custom logic after
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $content;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;reorder&#34;&gt;Reorder&lt;/h3&gt;
&lt;p&gt;這個 operation 可以讓 admin 可以重新排列，或巢狀排列 entries。
&lt;img src=&#34;https://jyu1999.com/post/backpack02/3.png&#34;
	width=&#34;1280&#34;
	height=&#34;1106&#34;
	srcset=&#34;https://jyu1999.com/post/backpack02/3_hu615795c3a2ee1d48adc7897d0c6d7505_88533_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack02/3_hu615795c3a2ee1d48adc7897d0c6d7505_88533_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;巢狀排列&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;115&#34;
		data-flex-basis=&#34;277px&#34;
	
&gt;&lt;/p&gt;
&lt;h4 id=&#34;requirements&#34;&gt;Requirements&lt;/h4&gt;
&lt;p&gt;為了要使用 reorder，model 需要有幾個 integer fields，並預設值為零:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;parent_id -&amp;gt; 必須要是 nullable&lt;/li&gt;
&lt;li&gt;lft&lt;/li&gt;
&lt;li&gt;rgt&lt;/li&gt;
&lt;li&gt;depth&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;usage&#34;&gt;Usage&lt;/h4&gt;
&lt;p&gt;首先必須要在資料庫加上上面提到的四個欄位。
在 entryCrudController 加上：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupReorderOperation&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reorder.label&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;set&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;reorder.max_level&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這兩行可以：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;讓使用者可以使用 reorder operation&lt;/li&gt;
&lt;li&gt;在 &amp;ldquo;add entry &amp;quot; 按鈕旁邊會出現一個 &amp;ldquo;Reorder&amp;rdquo; 按鈕&lt;/li&gt;
&lt;li&gt;開啟到 Reorder 的 router&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這時候看 route:list 會看到：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GET|HEAD  admin/tag/reorder .................... tag.reorder › Admin&lt;span style=&#34;color:#ae81ff&#34;&gt;\T&lt;/span&gt;agCrudController@reorder
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;POST      admin/tag/reorder ........... tag.save.reorder › Admin&lt;span style=&#34;color:#ae81ff&#34;&gt;\T&lt;/span&gt;agCrudController@saveReorder
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;所以輸入 url 就會到 reorder 的介面：
&lt;img src=&#34;https://jyu1999.com/post/backpack02/4.png&#34;
	width=&#34;1124&#34;
	height=&#34;1394&#34;
	srcset=&#34;https://jyu1999.com/post/backpack02/4_hu5064729caadc22335ff3b15d8a8313ce_106355_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack02/4_hu5064729caadc22335ff3b15d8a8313ce_106355_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;reorder 介面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;80&#34;
		data-flex-basis=&#34;193px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;目前顯示在 reorder 介面的會是 entry 的 name。如果想要顯示其他東西可以把 &lt;code&gt;&#39;name&#39;&lt;/code&gt; 改成自己想要顯示的 (e.g. &lt;code&gt;&#39;slug&#39;&lt;/code&gt;)
數字 2 代表最大可以接受的深度，如果沒有限制的話，可以設為 0。&lt;/p&gt;
&lt;p&gt;此時可以進到 reorder 的頁面玩玩看，但玩完按 save 回到主頁之後，會發現什麼都沒有變。
原因是因為主頁還是用預設的排序方式，如果想要更改排序方式可以：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupListOperation&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updated_at&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setColumnDetails&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;,[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tag Price&amp;#39;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;orderBy&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lft&amp;#39;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣就會按照 &lt;code&gt;lft&lt;/code&gt; 排序～&lt;/p&gt;
&lt;p&gt;官方文件有提到，在 reorder 介面中同樣可以加入 widget，基本上是用和 &lt;code&gt;show&lt;/code&gt; 一樣的方式。在這邊就不實作了。&lt;/p&gt;
&lt;h4 id=&#34;補充lft-and-rgt&#34;&gt;補充：lft and rgt&lt;/h4&gt;
&lt;p&gt;在實作的時候，我還蠻好奇 &lt;code&gt;lft&lt;/code&gt; 和 &lt;code&gt;rgt&lt;/code&gt; 到底是怎麼被算出來的。
稍微查了一下，nest entries 實際上就是一個 tree，backpack 會對對 tree 進行 preorder traversal（不過是改編版的）。然後算出 &lt;code&gt;lft&lt;/code&gt; and &lt;code&gt;rgt&lt;/code&gt;。
舉例來說，如果現在 nest entries 長這樣：
![[Pasted image 20230411121316.png|500]]
算出 lft and rgt 的步驟為：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;從 root(fourth tag) 開始，lft of fourth tag = 2（初始值為 2）&lt;/li&gt;
&lt;li&gt;到 fourth tag 的第一個 child (fifth tag)，lft of fifth tag = 3 (2+1)&lt;/li&gt;
&lt;li&gt;到 fifth tag 的第一個 child (third tag)，lft of third tag = 4&lt;/li&gt;
&lt;li&gt;third tag 沒有 child，所以 rgt of third tag = 5&lt;/li&gt;
&lt;li&gt;move back to the parent (fifth tag)&lt;/li&gt;
&lt;li&gt;fifth tag 的第二個 child (seventh tag)，lft of seventh tag = 6&lt;/li&gt;
&lt;li&gt;seventh tag 沒有 child，所以 rgt of seventh tag = 7&lt;/li&gt;
&lt;li&gt;move back to the parent (fifth tag)&lt;/li&gt;
&lt;li&gt;fifth tag 沒有其他 child 了，所以 rgt of seventh tag = 8&lt;/li&gt;
&lt;li&gt;move back to the parent (fourth tag)&lt;/li&gt;
&lt;li&gt;到 fourth tag 的第二個 child (first tag)，lft of first tag = 9&lt;/li&gt;
&lt;li&gt;&amp;hellip;以此類推&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;最後求完會如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;id&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;name&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;slug&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;price&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;parent_id&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;lft&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;rgt&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;depth&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;created_at&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;updated_at&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;first tag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;firsttag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;30&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;9&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;14&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 01:20:01&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;second tag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;secondtag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;40&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;10&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;11&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 01:20:13&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;third tag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;thirdtag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;50&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 01:20:41&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fourth tag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fourthtag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;50&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;null&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;15&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 03:51:11&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fifth tag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;fifthtag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;70&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;4&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;8&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 03:51:24&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sixth tag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;sixthtag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;12&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;13&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:31&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;seventh tag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;seventhtag&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;90&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;5&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;6&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;7&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:43&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 04:03:55&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;然後如果要 print 出來的話，就用 lft and rgt 來重建原本的 tree：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;選擇 lft 最小的 node 作為 root（在這個例子中是 fourth tag）。&lt;/li&gt;
&lt;li&gt;尋找 lft 值介於 root 的 lft 和 rgt 之間的 node，並且其 depth 比 root 多1。這些 node 將成為 root 的 child node（在這個例子中是 fifth tag 和 first tag）。&lt;/li&gt;
&lt;li&gt;對於每個 child node，重複步驟 2，直到所有 node 都被訪問。&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;revise&#34;&gt;Revise&lt;/h3&gt;
&lt;p&gt;Revise 可以讓 admin 去儲存、查看、取消對於一個 entries 的修改。
類似版本管理系統，admin 可以在頁面上看到所有的 change 和此次修改是誰做的。&lt;/p&gt;
&lt;h4 id=&#34;usage-1&#34;&gt;Usage&lt;/h4&gt;
&lt;p&gt;其實過程蠻簡單的，裝好、建好表就差不多了。
要先安裝這個 package。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;composer require backpack/revise-operation
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後建一個用來存修改的表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cp vendor/venturecraft/revisionable/src/migrations/2013_04_09_062329_create_revisions_table.php database/migrations/ &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; php artisan migrate
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後在 model 裡面，新增一個 &lt;code&gt;identifiableName()&lt;/code&gt; method，讓 admin 可以分辨不同的 entries(e.g. name, title&amp;hellip;)。
如果又用到別的 bootable trait，要去 override 掉：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App\Models&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Article&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Eloquent&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;\Backpack\CRUD\app\Models\Traits\CrudTrait&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;\Venturecraft\Revisionable\RevisionableTrait&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;identifiableName&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; $this&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;name&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// If you are using another bootable trait
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;// be sure to override the boot method in your model
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;static&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;boot&lt;/span&gt;()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;parent&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;boot&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後，在 CrudController，使用 operation trait:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;?&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;php&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;namespace&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;App\Http\Controllers\Admin&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;Backpack\CRUD\app\Http\Controllers\CrudController&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;class&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;ArticleCrudController&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;extends&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;CrudController&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;\Backpack\ReviseOperation\ReviseOperation&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;這樣就可以正常使用了！
下表為 revision 表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:left&#34;&gt;id&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;revisionable_type&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;revisionable_id&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;user_id&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;key&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;old_value&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;new_value&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;created_at&lt;/th&gt;
&lt;th style=&#34;text-align:left&#34;&gt;updated_at&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;App\Models\Article&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;topic&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;My first article&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;My first article. haha&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 05:03:18&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 05:03:18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;App\Models\Article&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;slug&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1starticle&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1starticle-haha&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 05:03:18&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 05:03:18&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:left&#34;&gt;3&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;App\Models\Article&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;1&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;content&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;This is my first article.&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;This is my first article. and I want to do revision&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 05:03:18&lt;/td&gt;
&lt;td style=&#34;text-align:left&#34;&gt;2023-04-11 05:03:18&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;官方文件上還列出另外三個 operations:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Clone&lt;/li&gt;
&lt;li&gt;BulkDelete&lt;/li&gt;
&lt;li&gt;BuldClone&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;但稍微看了一下，好像都是介紹用法而已，就不特別研究ㄌ。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Laravel Backpack 初學者之路-01</title>
        <link>https://jyu1999.com/post/backpack01/</link>
        <pubDate>Fri, 19 May 2023 13:34:41 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/backpack01/</guid>
        <description>&lt;img src="https://jyu1999.com/post/backpack01/0.png" alt="Featured image of post Laravel Backpack 初學者之路-01" /&gt;&lt;h2 id=&#34;what-is-backpack&#34;&gt;What is Backpack?&lt;/h2&gt;
&lt;p&gt;Backpack 是一個很多個 Laravel Packages 的集合，用來做客製化的 admin panels，可以讓 admin 登入並進行 CRUD 操作。
在前端的部分， Backpack 有著類似於 bootstrap 的設計（CoreUI theme），官方命名為 &lt;strong&gt;Backstrap&lt;/strong&gt;。簡單來說，當我們在寫前端的時候，Backpack 裡面就有一些 HTML Blocks 可以直接套用。
在後端的部分，Backpack 也可以幫助使用者創建 CRUD Panels。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;installation&#34;&gt;Installation&lt;/h2&gt;
&lt;p&gt;開始來試用一下 Laravel Backpack
雖然 Backpack 的版本跟的算緊，但在&lt;del&gt;撰寫當下(2023/4/10) 只支援 Laravel 9&lt;/del&gt;（後來發現有支援 Laravel 10），因為不想變動本機的環境，所以我使用 &lt;a class=&#34;link&#34; href=&#34;https://laravel.com/docs/10.x/sail#executing-artisan-commands&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laravel sail&lt;/a&gt; 來建一個 container:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;composer create-project laravel/laravel backpackTest1 &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cd backpackTest1/
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;composer require laravel/sail --dev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;php artisan sail:install
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail artisan migrate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail up
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;（如果對 Laravel sail 不熟悉，可以使用本地端的）&lt;/p&gt;
&lt;p&gt;建完專案之後，開始安裝 backpack:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail composer require backpack/crud
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail artisan backpack:install
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;裝的時候會問要不要建一個 admin 帳號，就先建一個起來吧～
裝好之後，進到 &lt;code&gt;http://localhost/admin/&lt;/code&gt; 就會看到以下畫面。
&lt;img src=&#34;https://jyu1999.com/post/backpack01/1.png&#34;
	width=&#34;1418&#34;
	height=&#34;1396&#34;
	srcset=&#34;https://jyu1999.com/post/backpack01/1_hu2df8c08fa9945eea14c4481d1cf13cee_89895_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack01/1_hu2df8c08fa9945eea14c4481d1cf13cee_89895_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;登入頁面&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;101&#34;
		data-flex-basis=&#34;243px&#34;
	
&gt;
輸入剛剛創建好的 admin 帳號之後，就可以進到 dashboard 了～&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;crud&#34;&gt;CRUD&lt;/h2&gt;
&lt;p&gt;接著來看官方的 Text Course。
要用 CRUD 首先就要在資料庫建表，官方是推薦使用 &lt;a class=&#34;link&#34; href=&#34;https://github.com/laracasts/Laravel-5-Generators-Extended&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;laracasts/generators&lt;/a&gt;，看了一下 github 頁面，似乎是一個可以在 CLI 介面生成 migration file 的一些資訊。
但其實不裝應該也不會怎樣（吧）。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# STEP 0. install a 3d party tool to generate migrations&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail composer require --dev laracasts/generators 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail composer require --dev backpack/generators
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# STEP 1. create a migration&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail artisan make:migration:schema create_tags_table --model&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; --schema&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name:string:unique,slug:string:unique&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail artisan migrate
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# STEP 2. create a CRUD for it &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail artisan backpack:crud tag &lt;span style=&#34;color:#75715e&#34;&gt;#use singular, not plural&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;用上面的指令之後，會產生：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;a &lt;strong&gt;migration&lt;/strong&gt; file&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;model&lt;/strong&gt; (&lt;code&gt;app\Models\Tag.php&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;request&lt;/strong&gt; file, for form validation (&lt;code&gt;app\Http\Requests\TagCrudRequest.php&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;controller&lt;/strong&gt; file, where you can customize how the CrudPanel looks and feels (&lt;code&gt;app\Http\Controllers\Admin\TagCrudController.php&lt;/code&gt;)&lt;/li&gt;
&lt;li&gt;a &lt;strong&gt;route&lt;/strong&gt;, as a line inside &lt;code&gt;routes/backpack/custom.php&lt;/code&gt;
此外，也會加入：&lt;/li&gt;
&lt;li&gt;a route inside &lt;code&gt;routes/backpack/custom.php&lt;/code&gt;, pointing to that controller;&lt;/li&gt;
&lt;li&gt;a sidebar item inside &lt;code&gt;resources/views/vendor/backpack/base/inc/sidebar_content.blade.php&lt;/code&gt;;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;在這裡不會有 view 產生，因為在大部分使用 Backpack 的情況下，是不需要 custom views 的。所有的 custom code 都在 controller, model 或 request 裡面。&lt;/p&gt;
&lt;p&gt;建完之後，這時候把 url 改成 &lt;code&gt;http://localhost/admin/tag&lt;/code&gt; 就會神奇的出現頁面了！
&lt;img src=&#34;https://jyu1999.com/post/backpack01/2.png&#34;
	width=&#34;1896&#34;
	height=&#34;1092&#34;
	srcset=&#34;https://jyu1999.com/post/backpack01/2_hu18d6e16d06605da0a468eb4c1577016a_227846_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack01/2_hu18d6e16d06605da0a468eb4c1577016a_227846_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;amazing!&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;173&#34;
		data-flex-basis=&#34;416px&#34;
	
&gt;
稍微玩了一下，似乎是已經把 CRUD 都做好了。&lt;/p&gt;
&lt;p&gt;根據官方文件所說，我們暫時不用去管 &lt;strong&gt;migration&lt;/strong&gt;, &lt;strong&gt;model&lt;/strong&gt;, &lt;strong&gt;request&lt;/strong&gt;，因為他們沒辦法客製化。唯一需要注意的是要看 model 有沒有正確的配置（e.g. db table, relationships, &lt;code&gt;$fillable&lt;/code&gt; or &lt;code&gt;$guarded&lt;/code&gt; ）。
目前我們只需要專注在 &lt;code&gt;TagCrudController&lt;/code&gt; 這個檔案即可，大部分的邏輯操作都會在裡面&lt;/p&gt;
&lt;p&gt;在 controller 裡面有兩個 method：&lt;code&gt;setupCreateOperation()&lt;/code&gt; and &lt;code&gt;setupUpdateOperation()&lt;/code&gt;，是用來定義我們要讓 admin 看到什麼 field。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupCreateOperation&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;TagRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;像現在裡面只有 name 和 slug，如果沒有指定 type 的話預設是 text。
在官方教學有提到，一點典型的 field 需要至少有三個要素：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;name&lt;/code&gt; - the attribute (column in the database), which will also become the name of the input;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;type&lt;/code&gt; - the kind of field we&amp;rsquo;d like to use (text, number, select2, etc);&lt;/li&gt;
&lt;li&gt;&lt;code&gt;label&lt;/code&gt; - the human-readable label for the input (will be generated from &lt;code&gt;name&lt;/code&gt; if not given);&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;eg-add-a-field-price&#34;&gt;e.g. Add a field &amp;ldquo;price&amp;rdquo;&lt;/h3&gt;
&lt;p&gt;如果我們想要為每一個 tag 新增一個 price 要怎麼做呢？
首先要在資料庫 tag table 裡面新增一個 column: price。
然後修改&lt;code&gt;setupCreateOperation()&lt;/code&gt; and &lt;code&gt;setupUpdateOperation()&lt;/code&gt;：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupListOperation&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;);  &lt;span style=&#34;color:#75715e&#34;&gt;// CRUD::addColumn([&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;price&amp;#39;, &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;number&amp;#39;]);
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updated_at&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupCreateOperation&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;TagRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;);  &lt;span style=&#34;color:#75715e&#34;&gt;// CRUD::addField([&amp;#39;name&amp;#39; =&amp;gt; &amp;#39;price&amp;#39;, &amp;#39;type&amp;#39; =&amp;gt; &amp;#39;number&amp;#39;]));
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 table 上和新增頁，就會出現 price 了～&lt;/p&gt;
&lt;h3 id=&#34;article-model&#34;&gt;Article Model&lt;/h3&gt;
&lt;p&gt;官網上有簡單提到建另一個 model &lt;code&gt;Article&lt;/code&gt;，並和 tag 建立多對多關係。
來試著實作看看。
首先一樣來產生 article 相關的檔案：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# STEP 1. create a migration
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sail&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;artisan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;make&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;migration&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;schema&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;create_articles_table&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;model&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;--&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;schema&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;topic:string:unique,slug:string:unique,content:text&amp;#34;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sail&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;artisan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;migrate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# STEP 2. create a CRUD for it 
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;sail&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;artisan&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;backpack&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;crud&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;article&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;#use singular, not plural
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後建一個 pivot 表：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sail artisan make:migration create_articles_tags_table
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;public&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;up&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;Schema&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;create&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;articles_tags&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;Blueprint&lt;/span&gt; $table) {  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $table&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;id&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $table&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unsignedBiginteger&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;article_id&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unsigned&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $table&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unsignedBiginteger&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tag_id&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;unsigned&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $table&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;foreign&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;article_id&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;references&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;onDelete&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cascade&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $table&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;foreign&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tag_id&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;references&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;id&amp;#39;&lt;/span&gt;)  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;on&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tags&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;onDelete&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;cascade&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        $table&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;timestamps&lt;/span&gt;();  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    });  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然後依照剛剛對 tag 的步驟，對 article 做一樣的事情&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupListOperation&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updated_at&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupCreateOperation&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;ArticleRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;content&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;在 &lt;code&gt;tagCrudController&lt;/code&gt; 新增下拉式選單：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupCreateOperation&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setValidation&lt;/span&gt;(&lt;span style=&#34;color:#a6e22e&#34;&gt;TagRequest&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;class&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;field&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;addField&lt;/span&gt;([  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;type&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;select2_multiple&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the relationship name in your Model  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;entity&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;articles&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// the relationship name in your Model  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;attribute&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;topic&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// attribute on Article that is shown to admin  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;pivot&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;, &lt;span style=&#34;color:#75715e&#34;&gt;// on create&amp;amp;update, do you need to add/delete pivot table entries?  
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;&lt;/span&gt;    ]);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;接著在 &lt;code&gt;http://localhost/admin/article&lt;/code&gt; 隨便新增幾個文章，最後會做出像這樣的效果：
&lt;img src=&#34;https://jyu1999.com/post/backpack01/3.png&#34;
	width=&#34;1822&#34;
	height=&#34;1514&#34;
	srcset=&#34;https://jyu1999.com/post/backpack01/3_huf30d9b124784c7c4bad3e3bdb4121be4_197021_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack01/3_huf30d9b124784c7c4bad3e3bdb4121be4_197021_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;relationship&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;120&#34;
		data-flex-basis=&#34;288px&#34;
	
&gt;
有需要的話，也可以在 articleCrudController 裡面也加入 tags，我自己有做，但在這裡就不演示。&lt;/p&gt;
&lt;h3 id=&#34;columns&#34;&gt;Columns&lt;/h3&gt;
&lt;p&gt;在 backpack 裡面提供了很多 column，可以在&lt;a class=&#34;link&#34; href=&#34;https://backpackforlaravel.com/docs/5.x/crud-columns#default-column-types&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;官網&lt;/a&gt;查詢
我們也可以在 &lt;code&gt;setupListOperation()&lt;/code&gt; 裡面，為某個 column 設定細節：&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-php&#34; data-lang=&#34;php&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;protected&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;setupListOperation&lt;/span&gt;()  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;created_at&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;name&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;slug&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;type&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;number&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;column&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;updated_at&amp;#39;&lt;/span&gt;);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;CRUD&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;setColumnDetails&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;price&amp;#39;&lt;/span&gt;,[  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;label&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Tag Price&amp;#39;&lt;/span&gt;,  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;prefix&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;$&amp;#39;&lt;/span&gt;  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]);  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;如此，我的 price 欄位會有微妙的變化XD
&lt;img src=&#34;https://jyu1999.com/post/backpack01/4.png&#34;
	width=&#34;1792&#34;
	height=&#34;670&#34;
	srcset=&#34;https://jyu1999.com/post/backpack01/4_hud5140b1dc936665be851cf6ef1960ed6_114514_480x0_resize_box_3.png 480w, https://jyu1999.com/post/backpack01/4_hud5140b1dc936665be851cf6ef1960ed6_114514_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;出現了 prefix!&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;267&#34;
		data-flex-basis=&#34;641px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;結語&#34;&gt;結語&lt;/h2&gt;
&lt;p&gt;今天稍微介紹了 Backpack 的基本，和最簡單的用法。
之後會再介紹如何新增 filter 和 button 之類的東西。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>Rubymine 透過 SFTP 自動同步 Server 檔案</title>
        <link>https://jyu1999.com/post/rubymine_sftp/</link>
        <pubDate>Fri, 19 May 2023 12:32:22 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/rubymine_sftp/</guid>
        <description>&lt;img src="https://jyu1999.com/post/rubymine_sftp/0.png" alt="Featured image of post Rubymine 透過 SFTP 自動同步 Server 檔案" /&gt;&lt;p&gt;到 Setting 的 Deployment 新增（+）一個 Server，Server 名字隨便取。&lt;/p&gt;
&lt;p&gt;Type 選擇 SFTP，Root path 選擇要上傳檔案的位置。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/rubymine_sftp/1.png&#34;
	width=&#34;1680&#34;
	height=&#34;1284&#34;
	srcset=&#34;https://jyu1999.com/post/rubymine_sftp/1_hua50c4a5579cbc728565bd14d7432b6f4_228624_480x0_resize_box_3.png 480w, https://jyu1999.com/post/rubymine_sftp/1_hua50c4a5579cbc728565bd14d7432b6f4_228624_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;130&#34;
		data-flex-basis=&#34;314px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;接著設定路徑，如果 Root Path 有設定好的話 Deployment path 就直接 / 即可。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/rubymine_sftp/2.png&#34;
	width=&#34;1680&#34;
	height=&#34;1277&#34;
	srcset=&#34;https://jyu1999.com/post/rubymine_sftp/2_huc922a4dfb4b64d47f1b9ef6f75c5451b_213260_480x0_resize_box_3.png 480w, https://jyu1999.com/post/rubymine_sftp/2_huc922a4dfb4b64d47f1b9ef6f75c5451b_213260_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;131&#34;
		data-flex-basis=&#34;315px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;在專案上點右鍵，選擇 Deployment &amp;gt; Upload to newB 即可上傳&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/rubymine_sftp/3.png&#34;
	width=&#34;1680&#34;
	height=&#34;1054&#34;
	srcset=&#34;https://jyu1999.com/post/rubymine_sftp/3_hu9ada012a5c28135e2efba9783f066cdb_299018_480x0_resize_box_3.png 480w, https://jyu1999.com/post/rubymine_sftp/3_hu9ada012a5c28135e2efba9783f066cdb_299018_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;159&#34;
		data-flex-basis=&#34;382px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;若是初次上傳記得要下 bundle install、db:create、db:migrate。&lt;/p&gt;
&lt;p&gt;如果要設定只上傳有修改過的檔案：&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/rubymine_sftp/4.png&#34;
	width=&#34;1680&#34;
	height=&#34;1285&#34;
	srcset=&#34;https://jyu1999.com/post/rubymine_sftp/4_hu092a21fbb60e3d4d77ffbc6b0d733288_362611_480x0_resize_box_3.png 480w, https://jyu1999.com/post/rubymine_sftp/4_hu092a21fbb60e3d4d77ffbc6b0d733288_362611_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;Untitled&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;130&#34;
		data-flex-basis=&#34;313px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;這樣就會在存檔的時候自動上傳。&lt;/p&gt;
&lt;p&gt;要啟 server 的話可以：（如果是已經部署好的專案就不用啟 Server ㄌ～）&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;bin/rails server -b=0.0.0.0 -p=3000
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;就可以在指定 ip 的 3000 port 讀取到網站了～㈷&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;如果要搜尋更多設定，建議以 phpstorm 為關鍵字去搜，Rubymine 比較搜不到東西🫠
&lt;/code&gt;&lt;/pre&gt;</description>
        </item>
        <item>
        <title>Archives</title>
        <link>https://jyu1999.com/page/archives/</link>
        <pubDate>Fri, 19 May 2023 11:54:03 +0800</pubDate>
        
        <guid>https://jyu1999.com/page/archives/</guid>
        <description></description>
        </item>
        <item>
        <title>Docker Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/docker_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:52:05 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/docker_learning_path/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/3c-iBn73dDE&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Tutorial for Beginners [FULL COURSE in 3 Hours]&lt;/a&gt;: 目前在 youtube 上觀看數量最多的 docker 影片，真滴不錯。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/the-docker-tutorial&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laracast: The Docker Tutorial&lt;/a&gt;: 這系列影片會教你怎麼從無到有，建一個 Laravel 的 container 環境。完成之後，電腦裡面甚至不用裝 MNMP!&lt;/li&gt;
&lt;li&gt;(optional) &lt;a class=&#34;link&#34; href=&#34;https://www.tenlong.com.tw/products/9789863126799?list_name=srh&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Book: 跟著 Docker 隊長，修練 22天就精通 - 搭配 20小時作者線上教學，無縫接軌 Microservices、Cloud-native、Serverless、DevOps 開發架構&lt;/a&gt;：我自己是有再額外看書，但這個看個人。如果有想要再深入了解可以考慮。&lt;/li&gt;
&lt;li&gt;(optional) 研究 &lt;a class=&#34;link&#34; href=&#34;https://laravel.com/docs/10.x/sail&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laravel Sail&lt;/a&gt;: 正如其官網上所說，Laravel Sail 是一個 &amp;ldquo;light-weight command-line interface for interacting with Laravel&amp;rsquo;s default Docker development environment&amp;rdquo;，可以讓開發者在很短的時間內建立起一個 laravel 的開發環境。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>API Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/api_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:51:56 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/api_learning_path/</guid>
        <description>&lt;h2 id=&#34;basic&#34;&gt;Basic&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;可以先完成 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/deploy_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deploy Learning Path&lt;/a&gt;再來看較佳，這樣可以直接用 server 的 API 來測&lt;/li&gt;
&lt;li&gt;剛開始學 API，可以先以 RESTful API 為主&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/WXsD0ZgxjRw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;APIs for Beginners 2023 - How to use an API (Full Course / Tutorial)&lt;/a&gt;
看這部影片，了解一些 API 的基礎&lt;/li&gt;
&lt;li&gt;嘗試用 PHP 手刻一個具有 CRUD 的 API，以及初步嘗試 Postman：&lt;a class=&#34;link&#34; href=&#34;https://youtube.com/playlist?list=PLillGF-RfqbZ3_Xr8do7Q2R752xYrDRAo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PHP REST API From Scratch&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;用 Laravel 寫一個 API 看看：&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/bvvVX9Pny84&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to Build REST API in Laravel 8&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;
</description>
        </item>
        <item>
        <title>Deploy Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/deploy_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:51:48 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/deploy_learning_path/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;建議在第六點之前，完成&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/laravel_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laravel Learning Path&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;先了解 hosting 是什麼，有哪些種類
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://progressbar.tw/posts/102&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;不是工程師 架站用VPS還是Web Hosting，中文翻譯都有「虛擬」到底差在哪？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://progressbar.tw/posts/131&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;學習VPS的重要性與各大Linux VPS 比較與推薦 (Linode, DigitalOcean, Vultr, AWS Lightsail)
&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;想辦法開一個 VPS 或 Cloud Host，然後 ssh 進去
在下面的步驟中，我使用的作業系統主要是 ubuntu，如果你心有餘力的話，最好是也把紅帽系列(CentOS, Rocky)的也部署看看。&lt;/li&gt;
&lt;li&gt;安裝 LEMP
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-linux-nginx-mysql-php-lemp-stack-on-ubuntu-22-04&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How To Install Linux, Nginx, MySQL, PHP (LEMP stack) on Ubuntu 22.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://cloudcone.com/docs/article/how-to-install-lemp-stack-on-ubuntu-22-04/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How To Install LEMP Stack On Ubuntu 22.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;安裝過程中，務必注意啟用 ufw 之後，要把 ssh 開起來，否則會出現 server 還活著，但就是 ssh 不進去的狀況。 =&amp;gt; 後來發現其實很多雲端服務都有自帶防火牆，所以其實可以不用裝 ufw。
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://linuxhint.com/ufw-firewall-allow-ssh/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Ufw Firewall Allow SSH&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-mariadb-on-ubuntu-22-04&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How To Install MariaDB on Ubuntu 22.04&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional) 在這邊最好把使用的 web server 摸透，反正遲早的事情。有了前面 Linux 的經驗，這個應該不算太難（吧）XD
&lt;a class=&#34;link&#34; href=&#34;https://youtube.com/playlist?list=PLmOn9nNkQxJFKkgL4kqBtbX3J2FHmq8Ib&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【尚硅谷】2022版Nginx教程（进阶高程架构师必备）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;serve複數個網站: 如果你想在一個 server 啟多個網站的話。也是可以跳過啦～
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.cloudpanel.io/tutorial/how-to-host-multiple-websites-on-one-server/#steps-to-host-multiple-websites-on-one-server--nginx&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to Host Multiple Websites on One Server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://webdock.io/en/docs/how-guides/shared-hosting-multiple-websites/how-configure-nginx-to-serve-multiple-websites-single-vps&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to Configure Nginx to serve Multiple Websites on a Single VPS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;Install and deploy Multiple Laravel Projects
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.digitalocean.com/community/tutorials/how-to-install-and-configure-laravel-with-lemp-on-ubuntu-18-04&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to Install and Configure Laravel 8 with Nginx (LEMP) on Ubuntu 18.04&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.iankumu.com/blog/how-to-deploy-a-laravel-app-on-lemp-stack/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;How to Deploy A Laravel App With Nginx on Ubuntu(LEMP)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional) 研究關於 Deploy 的其他內容，例如 cloud host 的服務（e.g. Laravel 怎麼上傳檔案到 AWS s3）、實務上架站的方式（https, DNS&amp;hellip;）、前後端分離&amp;hellip;之類的。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Linux Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/linux_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:51:40 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/linux_learning_path/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.youtube.com/playlist?list=PLmOn9nNkQxJEEfgfPo0IMwu8ac5DIWYd3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【尚硅谷】Linux+Shell教程 3天搞定Linux，1天搞定Shell&lt;/a&gt;: 網路上其實很多 Linux 的教學，但很多都是英文的。中文的我覺得這位老師講的還行～&lt;/li&gt;
&lt;li&gt;(optional) &lt;a class=&#34;link&#34; href=&#34;https://www.books.com.tw/products/0010703090&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;鳥哥的Linux私房菜：基礎學習篇(附DVD一片)(第四版)&lt;/a&gt;：鳥哥的書寫的十分詳細，他的網站上也會有一些內容。建議可以當作工具書來看，或是邊看教學影片，邊對照著鳥哥的書學習。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Laravel Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/laravel_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:48:29 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/laravel_learning_path/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;確認自己完成 Sec. 1 的所有內容，再進入這裡較好&lt;/li&gt;
&lt;li&gt;(optional) 先自己用 PHP 寫一個簡單框架，再進入 Laravel：&lt;a class=&#34;link&#34; href=&#34;https://youtube.com/playlist?list=PLLQuc_7jk__Uk_QnJMPndbdKECcTEwTA1&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Build PHP MVC Framework&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;中文社群學 Laravel ，龍哥絕對是首選：&lt;a class=&#34;link&#34; href=&#34;https://youtube.com/playlist?list=PLBd8JGCAcUAFtnWuuqd0tzMwYsVAN4es_&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;為你自己學 Laravel&lt;/a&gt;。但是龍哥有些東西沒有講清楚，自己看文件有霧煞煞&amp;hellip; 而且龍哥使用的版本較舊。&lt;/li&gt;
&lt;li&gt;看 Laracast的&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/laravel-8-from-scratch&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laravel 8 From Scratch&lt;/a&gt;。這個大概至少要看兩週，最好要有點心理準備&lt;/li&gt;
&lt;li&gt;了解一下 Laravel 的改版，不用到特別熟悉，知道大概改了什麼就好
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/whats-new-in-laravel-9&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What&amp;rsquo;s New in Laravel 9&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/whats-new-in-laravel-10&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;What&amp;rsquo;s New in Laravel 10&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(optional) 針對自己想要的套件、功能去作學習。這部份不急，Laravel的套件很多。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Database Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/database_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:46:40 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/database_learning_path/</guid>
        <description>&lt;h2 id=&#34;basic&#34;&gt;Basic&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;初學者會一些基本語法即可～&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtu.be/gvRXjsrpCHw&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【Database】SQL 3 hours teaching for beginners&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;練習：嘗試去 Leetcode 或其他刷題網站，寫一些 SQL 的題目吧！練習的題數 30 - 50 即可～&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;h2 id=&#34;advanced&#34;&gt;Advanced&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtube.com/playlist?list=PLmOn9nNkQxJFi4x7rZ5wpUKts3u7cDx21&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【宋红康】MySQL数据库（入门到高级，菜鸟到大牛）&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Eloquent (Laravel ORM)
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/eloquent-techniques&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laracast: Eloquent Techniques&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/eloquent-relationships&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laracast: Eloquent Relationships&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/eloquent-performance-patterns&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laracast: Eloquent Performance Patterns&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>Git Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/git_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:45:23 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/git_learning_path/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://gitbook.tw/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;為你自己學 Git&lt;/a&gt;： Git 基本上就是把龍哥的這本看熟，就可以應付大部分情況了。但要記得，看完之後也要常用，不然會很快就忘記了。&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>PHP Learning Path</title>
        <link>https://jyu1999.com/backendlearningpath/php_learning_path/</link>
        <pubDate>Thu, 18 May 2023 23:43:11 +0800</pubDate>
        
        <guid>https://jyu1999.com/backendlearningpath/php_learning_path/</guid>
        <description>&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.w3schools.com/php/default.asp&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;W3school: PHP Tutorial&lt;/a&gt; 全部看完&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://youtube.com/playlist?list=PL3VM-unCzF8ipG50KDjnzhugceoSG3RTC&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laracast: PHP for Beginners (2023 Edition)&lt;/a&gt;：熟悉基礎語法之後，我們來看看實作起來的感覺&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://laracasts.com/series/object-oriented-principles-in-php&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laracast: Object-Oriented Principles in PHP&lt;/a&gt;：現代很多程式語言都有物件導向的概念。&lt;/li&gt;
&lt;li&gt;建議在看 PDO  之前，先把 (Basic) &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/database_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Database Learning Path&lt;/a&gt; 看完&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://phpdelusions.net/pdo&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;(The only proper) PDO tutorial&lt;/a&gt;: 參考就行，不需要全部翻完&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        <item>
        <title>JYu&#39;s Backend Learning Path</title>
        <link>https://jyu1999.com/post/backend_learning_path_jyu/</link>
        <pubDate>Thu, 18 May 2023 23:37:13 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/backend_learning_path_jyu/</guid>
        <description>&lt;img src="https://jyu1999.com/post/backend_learning_path_jyu/1.jpg" alt="Featured image of post JYu&#39;s Backend Learning Path" /&gt;&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;這是我自己學習後端的路程，和使用到的一些資源，以工具為主。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;語言/框架以 PHP/Laravel 為主，如果你是學其他語言的，自己代換即可。差異不大。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在某些檔案中，我會註明最好先學什麼，再繼續進行下去。但也&lt;strong&gt;沒有絕對的先後順序&lt;/strong&gt;，端看個人學習狀態。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;每個 Section 後面我會標完全零經驗者大概要花多久完成該 Section。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;我提供的資源（網站/課程/影片/書籍），不一定適用於所有人。建議大家從我提供的資源中，找出一些關鍵字，去搜尋對自己最有幫助的資源。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;完成到 Sec. 4 可以嘗試求職，完成 Sec. 5 去找工作「可能」會比較穩，但還是依公司型態和個人背景而定，沒有絕對。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sec-0-在開始之前-est-1-week&#34;&gt;Sec. 0 在開始之前 (Est. 1 Week)&lt;/h2&gt;
&lt;h3 id=&#34;-環境設置&#34;&gt;😄 環境設置：&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;OS: Linux or MacOS，不建議 Windows。你也可以開一台 Host，直接從純 CLI 介面開始。&lt;/li&gt;
&lt;li&gt;Database: MySQL or Mariadb or PostgreSQL&lt;/li&gt;
&lt;li&gt;Webserver: Nginx(推) or Apache&lt;/li&gt;
&lt;li&gt;Language: PHP or others&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;-工具安裝自己選擇要裝什麼&#34;&gt;😀 工具安裝（自己選擇要裝什麼）&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;texteditor: vscode or Neovim or phpstorm&lt;/p&gt;
&lt;p&gt;進框架前，用什麼都可以。進框架後建議用 phpStorm。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Git GUI: sourcetree&lt;/p&gt;
&lt;p&gt;這個不一定要裝，看個人。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Database GUI: tableplus, datagrip&lt;/p&gt;
&lt;p&gt;這個也不一定要裝，但裝了之後，看 table 會比較好看一點。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sec-1-est-2535-month&#34;&gt;Sec. 1 (Est. 2.5~3.5 Month)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;初學者安裝完以上的東西應該已經心力交瘁，甚至重灌好幾次，但接下來才是挑戰的開始&amp;hellip;
以下四個基本上是後端工程師的必備技能。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;-php-learning-pathhttpsjyu1999combackendlearningpathphp_learning_path&#34;&gt;🤨 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/php_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;PHP Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用來寫後端的語言，沒什麼好說的&lt;/p&gt;
&lt;h3 id=&#34;-git-learning-pathhttpsjyu1999combackendlearningpathgit_learning_path&#34;&gt;😗 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/git_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Git Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;用來版本控制，每個工程師都該會&lt;/p&gt;
&lt;h3 id=&#34;-html--css-learning-path&#34;&gt;😶 HTML &amp;amp; CSS Learning Path&lt;/h3&gt;
&lt;p&gt;後端基本上還是要會「看得懂」前端。
網路上相關資源非常多，這裡就不列出資源。
要特別注意的是，後端不用特別在意切版，只要對 HTML tag, attribute, flexbox, grid 等稍微有概念即可。
如果有意想要找全端工作的話，這部份可能就要略為多花一些時間了。&lt;/p&gt;
&lt;h3 id=&#34;-basic-database-learning-pathhttpsjyu1999combackendlearningpathdatabase_learning_path&#34;&gt;😯 (Basic) &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/database_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Database Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;跟資料庫互動也是一定要會的，不過這裡只單純指 sql 語法，還不用去優化效率和容量。&lt;/p&gt;
&lt;h3 id=&#34;-stop-to-practice&#34;&gt;😲 Stop to Practice!&lt;/h3&gt;
&lt;p&gt;看完以上幾個，可以先作一個小作品出來。像是留言板、TodoList 之類的
並嘗試在此作品中用到以下概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Session/Cookie&lt;/li&gt;
&lt;li&gt;MVC&lt;/li&gt;
&lt;li&gt;CRUD&lt;/li&gt;
&lt;li&gt;OOP&lt;/li&gt;
&lt;li&gt;SQL/HTML Injection&lt;/li&gt;
&lt;li&gt;Validation&lt;/li&gt;
&lt;li&gt;約定式提交&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sec-2-est-225-month&#34;&gt;Sec. 2 (Est. 2~2.5 Month)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;完成以上的路程，對後端也有一定的認識了。
接著我們進到稍微複雜一點的地帶&amp;hellip;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;-javascript-learning-path&#34;&gt;🫤 Javascript Learning Path&lt;/h3&gt;
&lt;p&gt;主要集中在 DOM 的部分，這裡大概知道 DOM 會怎麼跟 HTML  做互動即可。沒空的話，詳細的 JS 概念（e.g. hoisting, callstack)可以不用了解。
有空的話當然就去把 JS 概念補一補～&lt;/p&gt;
&lt;h3 id=&#34;-laravel-learning-pathhttpsjyu1999combackendlearningpathlaravel_learning_path&#34;&gt;😵‍💫 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/laravel_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Laravel Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;PHP 的框架，藉由 Convention 讓工程師的溝通協作更順暢，也不用擔心架構。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;sec-3-est-23-month&#34;&gt;Sec. 3 (Est. 2~3 Month)&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;學完 Sec. 2，對於本地端開發應該已經熟悉了。
不過後端要會怎麼把網站 Deploy 到 Server 上。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;-linux-learning-pathhttpsjyu1999combackendlearningpathlinux_learning_path&#34;&gt;😨 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/linux_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Linux Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;學完 Laravel  應該就具備基礎網頁製作的能力，接下來就是要把網頁上 Server。不過在上 Server 之前最好徹底熟悉一下 Linux，否則會不斷搞砸、不斷重啟、然後還不知道問題在哪&amp;hellip;
而且 Linux 也跟系統安全性息息相關，千萬不要隨意略過。
在學 Linux 的同時，也一併把 vim 學起來吧～&lt;/p&gt;
&lt;h3 id=&#34;-deploy-learning-pathhttpsjyu1999combackendlearningpathdeploy_learning_path&#34;&gt;🥺 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/deploy_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Deploy Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;再來要先知道如何把辛苦做的網站部署到 Host 上，並熟悉其原理。當然可以只看著教學一步步做，不管背後發生了什麼。但缺點就是發生了問題，也很難 debug&amp;hellip;&lt;/p&gt;
&lt;h3 id=&#34;-basic-api-learning-pathhttpsjyu1999combackendlearningpathapi_learning_path&#34;&gt;😥 (Basic) &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/api_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;API Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;基礎的 API 以 RESTful 為主，且先不用管安全性、認證之類的東西。&lt;/p&gt;
&lt;h3 id=&#34;stop-to-practice&#34;&gt;Stop to Practice!&lt;/h3&gt;
&lt;p&gt;到這邊可以嘗試去買一個網域，連接到自己的 cloud host，並在 cloud host 上部署專案，讓別人可以 call api 取得資料。
你可能需要了解 Postman 使用、SSL、DNS、前後端分離等等概念。也需要了解一些常用的功能，包含但不限於上傳檔案、Validation、Cache 機制等等。&lt;/p&gt;
&lt;h3 id=&#34;嘗試求職--想想未來方向&#34;&gt;嘗試求職 &amp;amp; 想想未來方向&lt;/h3&gt;
&lt;p&gt;如果你的目標是放在 junior 後端工程師的話，可能要考慮一下是否要繼續往下學，還是要先找工作了。就我的求職經驗來說，下面的內容對於 junior 後端工程師來說，是較少遇到的。&lt;/p&gt;
&lt;p&gt;如果要繼續學習的話，可能要思考一下自己想去的公司種類或職業別是什麼。如果公司以接案為主的話，你可能需要多熟悉網頁框架（Laravel, Django, RoR&amp;hellip;）。如果是產品公司的話，DevOps、架構師、後端工程師&amp;hellip;都是潛在的發展方向。&lt;/p&gt;
&lt;p&gt;建議是花多一些時間在思考這個，不然之後學習會愈學愈迷惘。&lt;/p&gt;
&lt;h2 id=&#34;sec-4&#34;&gt;Sec. 4&lt;/h2&gt;
&lt;h3 id=&#34;docker-learning-pathhttpsjyu1999combackendlearningpathdocker_learning_path&#34;&gt;🥶&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/docker_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Docker Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;Docker 是一個可以幫助個人和團隊省下不少時間的工具，簡單來說就是將 application 和其所有的相依元件打包。
不僅很多公司會要求應徵者有使用 docker 的經驗，在 &lt;a class=&#34;link&#34; href=&#34;https://survey.stackoverflow.co/2022/#technology-worked-with-vs-want-to-work-with&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Stack Overflow 2022 的問卷調查&lt;/a&gt;中，docker 和 npm 可以說是在 other tool 類別裡面稱霸了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;以下僅為草稿，期待後續我繼續往下走的時候更新。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;testing-learning-path&#34;&gt;Testing Learning Path&lt;/h3&gt;
&lt;h3 id=&#34;cicd-learning-path&#34;&gt;CI/CD Learning Path&lt;/h3&gt;
&lt;h2 id=&#34;sec-5-進階&#34;&gt;Sec. 5 進階&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;上面的路程基本上都是以「會使用」工具為主，到這邊開始會需要深入去探討安全性、效能相關的問題&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;algorithm-learning-path&#34;&gt;Algorithm Learning Path&lt;/h3&gt;
&lt;h3 id=&#34;advanced-database-learning-pathhttpsjyu1999combackendlearningpathdatabase_learning_path&#34;&gt;(Advanced) &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/database_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Database Learning Path&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;advanced-api-learning-pathhttpsjyu1999combackendlearningpathapi_learning_path&#34;&gt;(Advanced) &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/backendlearningpath/api_learning_path/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;API Learning Path&lt;/a&gt;&lt;/h3&gt;
</description>
        </item>
        <item>
        <title>好想工作室 — 後端 (Backend Camp) 培訓心得（五）：這麼多東西，要怎麼學最有效率？</title>
        <link>https://jyu1999.com/post/goodidea-mind-5/</link>
        <pubDate>Thu, 18 May 2023 19:18:20 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/goodidea-mind-5/</guid>
        <description>&lt;img src="https://jyu1999.com/post/goodidea-mind-5/4.png" alt="Featured image of post 好想工作室 — 後端 (Backend Camp) 培訓心得（五）：這麼多東西，要怎麼學最有效率？" /&gt;&lt;p&gt;（本文同步更新在 &lt;a class=&#34;link&#34; href=&#34;https://vocus.cc/article/64285300fd8978000113457b&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vocus&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.medium.com/%e5%a5%bd%e6%83%b3%e5%b7%a5%e4%bd%9c%e5%ae%a4-%e5%be%8c%e7%ab%af-backend-camp-%e5%9f%b9%e8%a8%93%e5%bf%83%e5%be%97-%e4%ba%94-%e9%80%99%e9%ba%bc%e5%a4%9a%e6%9d%b1%e8%a5%bf-%e8%a6%81%e6%80%8e%e9%ba%bc%e5%ad%b8%e6%9c%80%e6%9c%89%e6%95%88%e7%8e%87-c1aafaa7939&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;medium&lt;/a&gt; 上）&lt;/p&gt;
&lt;p&gt;嗨大家好，我是結語 JYu。&lt;/p&gt;
&lt;p&gt;開始撰寫這個系列的時間是 2023 四月，也是我在好想工作室 backend camp 培訓的倒數一個月，想說可以分享一些心得，給對轉職為後端工程師的人參考。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（一）：好想工作室簡介】&lt;/a&gt;：簡單介紹好想工作室。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（二）：backend camp 在幹嘛】&lt;/a&gt;：會講後端培訓的點點滴滴。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（三）：我好想進來好想】&lt;/a&gt;：會給想進 backend camp 的一些建議。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（四）：我快崩潰了，怎麼辦？】&lt;/a&gt;：會講學員的心態管理。&lt;/p&gt;
&lt;p&gt;➡️&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（五）：這麼多東西，要怎麼學最有效率？】&lt;/a&gt;：會講學員的學習技巧。&lt;/p&gt;
&lt;p&gt;【好想工作室 — 後端 (backend Camp)培訓心得（六）：我好想要錢（找工作）】：會講我自己的求職心得。等我找到工作後（應該會）再寫&lt;/p&gt;
&lt;p&gt;本系列文章純以我的觀察和想法為出發點，不一定就是實際狀況，也不帶任何批判。&lt;/p&gt;
&lt;p&gt;如果覺得資訊對你有用的話，不妨按下方拍手鼓勵一下我喔！&lt;/p&gt;
&lt;p&gt;然後我都是想到什麼就寫什麼，難免會有沒有提及到的，如果你有任何疑問，歡迎寄信至 &lt;a class=&#34;link&#34; href=&#34;mailto:jk29666338@gmail.com&#34; &gt;jk29666338@gmail.com&lt;/a&gt; 來詢問我。&lt;/p&gt;
&lt;p&gt;好，廢話都講完了，那就讓我們開始吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;每個人可能都有自己學習的模式，但如果你初來乍到，你可能對如何學習後端技術或語言會感到很困惑。&lt;/p&gt;
&lt;p&gt;在這裡我提出我自己學習的方式，供初學者參考。&lt;/p&gt;
&lt;p&gt;當然還是建議大家要多多探索，找尋自己學後端最舒服的姿勢。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;基礎知識和用法的-tradeoff&#34;&gt;基礎知識和用法的 tradeoff&lt;/h2&gt;
&lt;p&gt;如果你有看過我前面四篇文章的話，應該不難發現我非常強調「基礎知識」。&lt;/p&gt;
&lt;p&gt;什麼是基礎知識？我個人認為所謂基礎知識就是那些&lt;strong&gt;無論工具、語言怎麼換，都放諸四海皆準的東西&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;例如，在網站框架有一個重要的概念叫做 MVC 架構，這個 MVC 架構在各個後端語言框架都通用，只是有時候名字和實作方式會略有不同而已。 因此，MVC 架構就是屬於基礎知識，而特定語言如何實作 MVC 架構就不是基礎知識。&lt;/p&gt;
&lt;p&gt;同理，對於後端來說，網路知識（HTTP, IP, TCP/UDP…）、基礎資結演算法（時間複雜度、BFS、DFS…）、sql 原理（B+ Tree, 正規化…）、Linux OS、git 等等都算是基礎知識。&lt;/p&gt;
&lt;p&gt;但聰明的你應該不難想到，如果要把基礎知識都學完，才開始學習實際應用，顯然是不切實際的。可能從你兒子剛會叫爸爸，到你孫子已經成為後端工程師，你都還沒成功轉職。&lt;/p&gt;
&lt;p&gt;沒有公司會要一個只有概念，但沒辦法透過實作來顯示自己有概念的工程師的。&lt;/p&gt;
&lt;p&gt;所以要怎麼辦？完全不管基礎知識嗎？&lt;/p&gt;
&lt;h3 id=&#34;如果你正在學習不要專注在解決問題本身&#34;&gt;如果你正在學習，不要專注在解決問題本身&lt;/h3&gt;
&lt;p&gt;是的，你沒看錯。&lt;/p&gt;
&lt;p&gt;我其實&lt;strong&gt;不鼓勵大家隨機挑選基礎知識來學習&lt;/strong&gt;，因為這樣顯然違背了我&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;第一篇文章&lt;/a&gt;所提到，自學的精髓之一：挑真正對你有用的東西來學。&lt;/p&gt;
&lt;p&gt;什麼意思？上面不是說基礎知識放諸四海皆準嗎？怎麼這裡又說基礎知識對我沒用了？&lt;/p&gt;
&lt;p&gt;沒錯，基礎知識是具有「通用性」，但卻不代表它「會用到」。&lt;/p&gt;
&lt;p&gt;假設你研究演算法研究的非常深入，把各種奇形怪狀、偏門的演算法研究透徹，但現實是，一般企業根本就不會用到這麼多演算法。&lt;/p&gt;
&lt;p&gt;所以最好學習基礎知識的情境有兩個：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;你正在研究用法&lt;/strong&gt;&lt;/em&gt;：你可能學到框架裡面有一個好用的 function 可以 call，這時候最好了解一下其底層是怎麼實作的。另一種可能是你用到語言中幫你啟好的 development server (e.g. laravel 裡面的 &lt;code&gt;php artisan serve&lt;/code&gt;)，那你最好也去了解一下怎麼自己架 server。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;你遇到 bug&lt;/strong&gt;&lt;/em&gt;：基本上你看到 bug 就要特別小心了，除非你是純粹失誤，不然有可能就是你基礎知識不熟。像 Laravel 裡面的 model，預設不允許 mass assignment，為什麼？或是 Laravel 的表單需要放入一個 CSRF Token，為什麼？如果是為了安全性，那有沒有其他方式能增加安全性？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;簡單來說，&lt;strong&gt;在實作或除錯的過程中，稍微解析一下問題，多去思考其原理&lt;/strong&gt;，然後保持好奇，看有沒有其他作法能達到相同的效果。不要急著把問題解掉就直接下一步了。&lt;/p&gt;
&lt;h3 id=&#34;知道去哪裡查用法就好&#34;&gt;知道去哪裡查用法就好&lt;/h3&gt;
&lt;p&gt;初學者常常會把所有的用法都寫在自己的筆記裡面，但我自己覺得沒有必要。&lt;/p&gt;
&lt;p&gt;一來很花時間，不僅需要紀錄，也需要整理。有時候要找的時候也未必找的到。&lt;/p&gt;
&lt;p&gt;二來有些用法可能會隨著版本迭代而有所不同。&lt;/p&gt;
&lt;p&gt;所以我推薦大家真的要記筆記的話，記「關鍵字」就好。假如你在學習 PHP 物件導向，那你筆記裡面只需要記下 Access Modifiers, Inheritance, Traits 等等關鍵字，然後記下可能會有答案的網站。這樣其實就夠了。&lt;/p&gt;
&lt;h3 id=&#34;如何判斷要不要繼續往下挖&#34;&gt;如何判斷要不要繼續往下挖？&lt;/h3&gt;
&lt;p&gt;假設你按照我上面的方法，可能你有一天會遇到一個 bug，&lt;strong&gt;這個 bug 牽扯到的基本知識超級多&lt;/strong&gt;，涵蓋作業系統、語言特定、web server 架設等等。等於你解這個 bug 並學習背後的基礎原理，可能一個月就不見了。&lt;/p&gt;
&lt;p&gt;在這裡我的建議和上一篇文章判斷前輩的建議的方式一樣，就是要「深入了解建議/題目的內容以及用意」。&lt;/p&gt;
&lt;p&gt;也就是說，你可以看看類似的 bug 你是不是碰到好幾次了？如果已經碰到好幾次那可能真的是你有所欠缺，就趕快補上吧！&lt;/p&gt;
&lt;p&gt;但如果你跟這個 bug 才初次見面，剛玩完破冰遊戲，彼此還不熟悉的狀況，那你可以稍微評估一下背後原理是否會需要花很多時間了解，如果需要很多時間的話就先略過吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;爭議題該不該跟著教學影片實作&#34;&gt;爭議題：該不該跟著教學影片實作？&lt;/h2&gt;
&lt;p&gt;曾經我有跟某位後端學員討論過這個問題，在這裡直接說我的答案吧：&lt;strong&gt;要，也不要&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;通常會遇到這個問題是長時間的影片實作，畢竟影片如果不到五分鐘，你做不做根本沒差。&lt;/p&gt;
&lt;p&gt;遇到這種影片，我通常就會看兩次。不過我&lt;strong&gt;第一次一定是不會跟著實作&lt;/strong&gt;的。&lt;/p&gt;
&lt;p&gt;原因有二：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;影片內容未必對我有用&lt;/strong&gt;&lt;/em&gt;：影片就是這樣，如果不是全部看完很難確認到底會不會學到自己想學的東西。如果我花費大量時間跟著實作，到一半才發現影片內容根本不符合我預期，不是很虧ㄇ&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;專心在理解&lt;/strong&gt;&lt;/em&gt;：邊看影片邊做，有時候會讓人沒辦法去理解作者為什麼要這樣做，或聽清楚作者到底講了什麼，因為光是要跟上作者的打字速度就要卯足全力了。相反，如果完全不實作，就能把 100% 心力放在作者到底講了什麼，為什麼要這樣做。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第二次看影片的時候，我就會跟著作者實作，看實作起來會不會有什麼問題。甚至第一次看的夠清楚的話，搞不好也可以試著自己從頭開始做做看，如果遇到 bug 再回去看作者怎麼做，學習效果更佳！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;你就跟我們講一下嘛&#34;&gt;你就跟我們講一下嘛&lt;/h2&gt;
&lt;p&gt;最後，還是要提一下&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;第二篇&lt;/a&gt;有提到的「主動分享」。&lt;/p&gt;
&lt;p&gt;比如說，我有時候會在 slack 跟同儕們分享剛剛的新發現。在撰寫的時候，我就會發現有些地方我講的並不是這麼順，我就會再額外去找資料，增強我自己的理解。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/goodidea-mind-5/1.webp&#34;
	width=&#34;720&#34;
	height=&#34;507&#34;
	srcset=&#34;https://jyu1999.com/post/goodidea-mind-5/1_huaf0f4f754c45eda6280b73d3d9d37eea_34796_480x0_resize_q75_h2_box_2.webp 480w, https://jyu1999.com/post/goodidea-mind-5/1_huaf0f4f754c45eda6280b73d3d9d37eea_34796_1024x0_resize_q75_h2_box_2.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我分享我的研究發現&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;142&#34;
		data-flex-basis=&#34;340px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;不只是這樣，在 slack 丟出來，看到你分享的人，可能會額外提出一些疑問，這時候你不就又有新的東西可以研究嗎！&lt;/p&gt;
&lt;p&gt;也不用特別害怕講錯，反正你只是分享自己的理解，也沒有強迫灌輸別人你是正確的。況且，mentor 通常也會看到你的分享，如果真的有錯他（可能）也會幫你矯正一下，所以就大膽分享吧～&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;謎之音：常常分享 mentor 就會覺得你比較認真？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;也不只是所學可以丟出來，我也鼓勵&lt;strong&gt;把一些 bug 丟出來討論&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但當然不是每次遇到 bug，就直接把 error message 丟到群組啦。這樣真的太北爛了，小心被霸凌（X&lt;/p&gt;
&lt;p&gt;如果你要丟 bug 到群組討論，最好是附上以下敘述：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你現在想做什麼功能？&lt;/li&gt;
&lt;li&gt;error message 是什麼？&lt;/li&gt;
&lt;li&gt;你個人的推論是什麼？&lt;/li&gt;
&lt;li&gt;你試過哪些解決方法？試了之後 error message 有沒有變？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;為什麼要附上以上敘述，除了更&lt;strong&gt;方便別人 debug&lt;/strong&gt; 之外，也才有「討論」的空間。&lt;/p&gt;
&lt;p&gt;比如說，mentor 發現你的推論很不合理，正常遇到這個狀況會是 C 出問題，而你卻說可能是 A or B 出問題，mentor 就能給你反饋。&lt;/p&gt;
&lt;p&gt;又比如說，你查詢到的解答很奇怪，根本不是解決這個問題所需要的。那很可能就是你欠缺的是「關鍵字」或「google 能力」，其他人就可以針對這個問題提出他們認為合理的關鍵字。&lt;/p&gt;
&lt;p&gt;總而言之，如果可以的話就多多分享吧！也要記得，你分享的目的只是&lt;strong&gt;為了讓自己變得更好&lt;/strong&gt;，而不是真的要教給別人什麼，所以&lt;strong&gt;不用害怕說錯什麼&lt;/strong&gt;～&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;本篇分享了我認為身為後端學員，有效率的一些學習方式。如果有想到其他的我再補（有時間的話）。&lt;/p&gt;
&lt;p&gt;其實都蠻樸實無華的，畢竟學習本來就不會有捷徑，只有 chatgpt（X&lt;/p&gt;
&lt;p&gt;當然，如果你是現役或已畢業後端學員，歡迎跟我分享你親測有效的學習方式！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-6/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（六）：找工作之前】&lt;/a&gt;：會講投履歷之前，我做了哪些事情。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>好想工作室 — 後端 (Backend Camp) 培訓心得（四）：我快崩潰了，怎麼辦？</title>
        <link>https://jyu1999.com/post/goodidea-mind-4/</link>
        <pubDate>Thu, 18 May 2023 19:18:13 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/goodidea-mind-4/</guid>
        <description>&lt;img src="https://jyu1999.com/post/goodidea-mind-4/4.png" alt="Featured image of post 好想工作室 — 後端 (Backend Camp) 培訓心得（四）：我快崩潰了，怎麼辦？" /&gt;&lt;p&gt;（本文同步更新在 &lt;a class=&#34;link&#34; href=&#34;https://vocus.cc/article/642851c3fd89780001133a74&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vocus&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.medium.com/%e5%a5%bd%e6%83%b3%e5%b7%a5%e4%bd%9c%e5%ae%a4-%e5%be%8c%e7%ab%af-backend-camp-%e5%9f%b9%e8%a8%93%e5%bf%83%e5%be%97-%e5%9b%9b-%e6%88%91%e5%bf%ab%e5%b4%a9%e6%bd%b0%e4%ba%86-%e6%80%8e%e9%ba%bc%e8%be%a6-2d874d660eb3&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;medium&lt;/a&gt; 上）&lt;/p&gt;
&lt;p&gt;嗨大家好，我是結語 JYu。&lt;/p&gt;
&lt;p&gt;開始撰寫這個系列的時間是 2023 四月，也是我在好想工作室 backend camp 培訓的倒數一個月，想說可以分享一些心得，給對轉職為後端工程師的人參考。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（一）：好想工作室簡介】&lt;/a&gt;：簡單介紹好想工作室。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（二）：backend camp 在幹嘛】&lt;/a&gt;：會講後端培訓的點點滴滴。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（三）：我好想進來好想】&lt;/a&gt;：會給想進 backend camp 的一些建議。&lt;/p&gt;
&lt;p&gt;➡️&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（四）：我快崩潰了，怎麼辦？】&lt;/a&gt;：會講學員的心態管理。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（五）：這麼多東西，要怎麼學最有效率？】&lt;/a&gt;：會講學員的學習技巧。&lt;/p&gt;
&lt;p&gt;【好想工作室 — 後端 (backend Camp)培訓心得（六）：我好想要錢（找工作）】：會講我自己的求職心得。等我找到工作後（應該會）再寫&lt;/p&gt;
&lt;p&gt;本系列文章純以我的觀察和想法為出發點，不一定就是實際狀況，也不帶任何批判。&lt;/p&gt;
&lt;p&gt;如果覺得資訊對你有用的話，不妨按下方拍手鼓勵一下我喔！&lt;/p&gt;
&lt;p&gt;然後我都是想到什麼就寫什麼，難免會有沒有提及到的，如果你有任何疑問，歡迎寄信至 &lt;a class=&#34;link&#34; href=&#34;mailto:jk29666338@gmail.com&#34; &gt;jk29666338@gmail.com&lt;/a&gt; 來詢問我。&lt;/p&gt;
&lt;p&gt;好，廢話都講完了，那就讓我們開始吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;寫這篇文章的用意，是因為在工作室培訓的時候，難免會遇到很多挫折。&lt;/p&gt;
&lt;p&gt;在 bug 解不出來，難免會對自己產生懷疑。尤其看到別人都解出來，彷彿只有自己停在原地的時候。&lt;/p&gt;
&lt;p&gt;在&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;第二篇&lt;/a&gt;提到夥伴的時候，我有說到有些人真的是背水一戰，尤其是上有老母，下有妻小的人，壓力會特別大。&lt;/p&gt;
&lt;p&gt;而在這麼緊繃的狀況下，特別容易情緒低落，心理影響生理，產生一些負面的想法。&lt;/p&gt;
&lt;p&gt;這篇文章就是寫給有類似情況的學員看的，但如果你沒有這種狀況，也可以考慮閱讀這篇文章。畢竟預防勝於治療。&lt;/p&gt;
&lt;p&gt;但也不要對這篇文章有錯誤的期待，絕對不可能看完這篇文章就豁然開朗。這篇文章頂多是提供給你一些過來人的經驗，和思考模式。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;警語&#34;&gt;警語&lt;/h2&gt;
&lt;p&gt;很明顯的，我不是心理師或醫生。&lt;/p&gt;
&lt;p&gt;每個人的心思都很細膩，情緒低落的原因也是百百種。&lt;/p&gt;
&lt;p&gt;如果你真的已經出現一些明顯的症狀，建議你直接去求助專業的心理師或醫生。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;預防勝於治療&#34;&gt;預防勝於治療&lt;/h2&gt;
&lt;p&gt;在培訓的過程中，很常會產生無力感，具體來說是一種「我知道現在應該要幹嘛，我也有時間做，但我不知道要幹嘛」的弔詭感覺。&lt;/p&gt;
&lt;p&gt;很像是去問大考前的學生，他們的準備狀況。真的會有很多學生覺得自己都已經讀完了，沒什麼好讀的了。&lt;/p&gt;
&lt;p&gt;遇到這種狀況就要特別小心了，這種狀況常常就是惡性循環的開始。&lt;/p&gt;
&lt;p&gt;因為你不知道要幹嘛，你可能動力就比較低，然後進度就很慢。但隨著時間推移又出現了更多東西要學，壓力又更大。&lt;/p&gt;
&lt;p&gt;99% 的學員心理應該都曾冒出過這句話：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;明明我已經很認真了，為什麼還是感覺要學的東西完全沒有減少？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;會有這個想法其實是很正常的，因為一開始你的心裡面可能只有程式語言，或操作資料庫。&lt;/p&gt;
&lt;p&gt;隨著你逐漸成長，你會發現只會這兩個是遠遠不夠的。後端領域包山包海，從 web server 到 cloud host，甚至資料庫還有設計規劃的部分。&lt;/p&gt;
&lt;p&gt;但是，&lt;strong&gt;你會發現到這些不足，正是因為你有所成長。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;因此，建議大家多關注在自己已經學會的部分，而非還有多少需要學習。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;不要讓前輩的建議害到你&#34;&gt;不要讓前輩的建議害到你&lt;/h2&gt;
&lt;p&gt;進到工作室會有很多的前輩，如果你問他們問題的話，很有可能他們會說：「我覺得你可以研究這個看看。」&lt;/p&gt;
&lt;p&gt;然後這時候身為學員你的，心中可能就會 OS：「阿我現在這個都還沒學會，上次另一個前輩叫我學那個，你又叫我學另外一個，所以我現在到底要怎樣？」&lt;/p&gt;
&lt;p&gt;不要誤會，我不是在臭這些前輩，這些前輩一定都是想著讓你更好，而提出建議的。&lt;/p&gt;
&lt;p&gt;但身為學員的你，卻難免會受到這些建議影響。那該怎麼做呢？&lt;/p&gt;
&lt;p&gt;另外一個例子，是工作室可能會舉辦一些挑戰賽，然後「建議」特定 camp 的人參加。&lt;/p&gt;
&lt;p&gt;這些挑戰賽的用意都是好的，如果認真參與的話也一定可以學到很多東西。&lt;/p&gt;
&lt;p&gt;但正常參加挑戰賽的話，學習順序應該是：&lt;/p&gt;
&lt;p&gt;解題 → 遇到問題 -&amp;gt; google -&amp;gt; 發現自己不足 → &lt;strong&gt;補足基礎知識&lt;/strong&gt; -&amp;gt; 解決問題 -&amp;gt; 解下一題&lt;/p&gt;
&lt;p&gt;然而，因為挑戰賽題目一題接一題，可能上一題還沒完成下一題就出來了，在這種狀況下，有些人會略過了「補足基礎知識」這個最重要最重要的步驟。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;最後，因為都沒有補足基礎知識，變成挑戰賽淪為 google 訓練賽，看誰比較會搜尋 bug。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;最好的比喻方式就是，叫一群高一新生，直接開始做可以 open book 的模擬學測。完全沒有任何一丁點基礎知識的他們，只能拼命的看書裡面有沒有一模一樣的題目，想辦法把答案填上去。但填完還是對題目一知半解，下次遇到類似的問題還是不會。&lt;/p&gt;
&lt;p&gt;但我要再次強調，這絕對不是挑戰賽的問題。而是學員沒有自己想清楚「參與形式」的問題。&lt;/p&gt;
&lt;p&gt;所以，講了這麼多，到底要怎麼辦？&lt;/p&gt;
&lt;h3 id=&#34;講到爛大街的獨立思考&#34;&gt;講到爛大街的獨立思考&lt;/h3&gt;
&lt;p&gt;沒錯，答案很爛，就是獨立思考。&lt;/p&gt;
&lt;p&gt;工作室任何前輩給你的建議，都不是聖旨，也不是叫你現在就要做。僅僅是提供給你一個新的想法。&lt;/p&gt;
&lt;p&gt;因此，不管聽到任何建議、參加任何挑戰賽之前或是正在參與挑戰賽，可以用以下方向進行思考：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;深入了解建議/題目的內容以及用意&lt;/strong&gt;&lt;/em&gt;：首先你要知道這個建議可以帶來哪些效益，CP 值是否真的高？有沒有其他人給過你同樣的建議了？如果有超過三個人都給你一模一樣的建議，那你真的得好好考慮一下。此外，你也可以評估一下執行這個建議所需要花費的時間。有些建議聽起來很恐怖，但實際上一兩天就可以完成。我個人認為如果這個建議三天內可以達成，那做做看也無傷大雅。
對題目也是一樣，你要知道解完這個題目，你大概可以獲得什麼。是否在很多地方都有看過類似的題目了？這個題目能否在三天內完成？&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;這個跟我的目標有一致嗎&lt;/strong&gt;&lt;/em&gt;：雖然是後端工程師的培訓，但每個人想做的也可能不一樣。有些人可能對全端比較有興趣，那可能要專注在框架；有些人支持前後端分離，那可能要專注在 API 開發；有些人喜歡雲端服務，那可能要好好學習 AWS。同時，每家公司後端工程師職位，所需要的技能也都略有不同。所以，聽到建議之後，好好想想這是否真的是你想學的 / 你求職會用到的，再決定要不要行動。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;審視自己現在的狀態&lt;/strong&gt;&lt;/em&gt;：有時候可能家裡剛好有事，或是最近已經覺得負荷很大了，最好是不要貿然加入新的東西。反之，如果最近狀態很好，心情愉悅，就可以考慮採行建議。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;覆盤&lt;/strong&gt;&lt;/em&gt;：你做完一個題目，真的有感覺到自己變強嗎？真的有感覺自己學到什麼新知識嗎？要檢驗這點最好的方法，就是跟你的同儕們的分享你在這次做題過程中的所學。要注意是「所學」而不是「你怎麼解的」。對我來說，&lt;strong&gt;所學是可以複製、應用在多種情況的；而「解法」只能針對特定狀況，所以只要題目變一下你就不會了&lt;/strong&gt;。也就是我上面說的，你是否有透過題目找到自己的不足，並補足基礎知識呢？若答案都是否，你可能要好好調整一下。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;總而言之，千萬不要被簡單一句「我們現在是在模擬工作的情況」就貿然把自己的時間投入在任何事情上。&lt;/p&gt;
&lt;p&gt;就如同上面的舉例，實力夠的人，做模擬考才有意義。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;如果我已經陷入低潮了呢&#34;&gt;如果我已經陷入低潮了呢…&lt;/h2&gt;
&lt;p&gt;低潮真的是難免，我從開始學程式到現在將近三年的時間，有兩次真的是差點撐不下去，甚至考慮要重考了。&lt;/p&gt;
&lt;p&gt;而我也必須說，解鈴尚需繫鈴人，只有你自己想通了，才能讓自己走出來。&lt;/p&gt;
&lt;p&gt;不過我們還是可以嘗試一些簡單的作法：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;轉移注意力&lt;/strong&gt;&lt;/em&gt;：如果你一個問題真的卡了很久，就暫時 let it go 吧，先研究其他領域。或是真的受不了的話，也可以跟 mentor 請一兩天的假，出去散散心。學程式是長期的事情。關於這個我就有親身經驗，曾經有一個 coding 題目我解了整整一天都解不出來，看時間很晚了，就決定放棄然後上床睡覺。在床上跟室友喇賽的時候，突然靈光一個乍現，跳下床，不到五分鐘就把問題解掉了。所以千萬不要覺得短暫的迴避一下會怎樣，這個短暫的迴避不僅能讓你充電，面對更久遠的挑戰，搞不好還會給你帶了意外的靈感喔 ：）&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;累積微小成就感&lt;/strong&gt;&lt;/em&gt;：我認為自信心對一個人是非常重要的，當你相信你一天就可以把事情做完，你就很有可能一天就做完。跟《原子習慣》裡面提到的「自我認同」的概念很像。反之，當你開始覺得「我一定是廢物」，你就很有可能如你所想的逐漸墮落。所以，當你低潮的時候，不妨就先挑一些簡單的事情做，像是練打字、學習 linux 指令等等，這些事情難度不高，但會逐步建立你個成就感，讓你覺得你是個每天都有固定產值的人。&lt;/li&gt;
&lt;li&gt;&lt;em&gt;&lt;strong&gt;專注在現在&lt;/strong&gt;&lt;/em&gt;：低潮或是在胡思亂想的時候，可以多問問自己，所以「現在」、「此時此刻」、「這一分這一秒」，我能做的事情是什麼？80% 以上的狀況，你唯一能做的就是專注在眼前這個問題，想盡一切辦法把他解決。那既然只有這件事情能做，就什麼都不用擔心了不是嗎？當然有可能你得出的答案是暫時「鬆一下」，那也無傷大雅啦 XD&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;這篇文章大概到這裡了，如果我有想到什麼再補充。&lt;/p&gt;
&lt;p&gt;如果你覺得有什麼更好的建議，給陷入低潮的朋友們，歡迎來跟我分享XD&lt;/p&gt;
&lt;p&gt;如果你是現在正在低潮的學員，那就好好加油吧！拍拍🙌&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（五）：這麼多東西，要怎麼學最有效率？】&lt;/a&gt;：會講學員的學習技巧。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>好想工作室 — 後端 (Backend Camp) 培訓心得（三）：我好想進來好想</title>
        <link>https://jyu1999.com/post/goodidea-mind-3/</link>
        <pubDate>Thu, 18 May 2023 19:18:09 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/goodidea-mind-3/</guid>
        <description>&lt;img src="https://jyu1999.com/post/goodidea-mind-3/4.png" alt="Featured image of post 好想工作室 — 後端 (Backend Camp) 培訓心得（三）：我好想進來好想" /&gt;&lt;p&gt;（本文同步更新在 &lt;a class=&#34;link&#34; href=&#34;https://vocus.cc/article/64284ee1fd89780001131dc0&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vocus&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.medium.com/%e5%a5%bd%e6%83%b3%e5%b7%a5%e4%bd%9c%e5%ae%a4-%e5%be%8c%e7%ab%af-backend-camp-%e5%9f%b9%e8%a8%93%e5%bf%83%e5%be%97-%e4%b8%89-%e6%88%91%e5%a5%bd%e6%83%b3%e9%80%b2%e4%be%86%e5%a5%bd%e6%83%b3-a5cb1ee83922&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;medium&lt;/a&gt; 上）&lt;/p&gt;
&lt;p&gt;嗨大家好，我是結語 JYu。&lt;/p&gt;
&lt;p&gt;開始撰寫這個系列的時間是 2023 四月，也是我在好想工作室 backend camp 培訓的倒數一個月，想說可以分享一些心得，給對轉職為後端工程師的人參考。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（一）：好想工作室簡介】&lt;/a&gt;：簡單介紹好想工作室。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（二）：backend camp 在幹嘛】&lt;/a&gt;：會講後端培訓的點點滴滴。&lt;/p&gt;
&lt;p&gt;➡️&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（三）：我好想進來好想】&lt;/a&gt;：會給想進 backend camp 的一些建議。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（四）：我快崩潰了，怎麼辦？】&lt;/a&gt;：會講學員的心態管理。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（五）：這麼多東西，要怎麼學最有效率？】&lt;/a&gt;：會講學員的學習技巧。&lt;/p&gt;
&lt;p&gt;【好想工作室 — 後端 (backend Camp)培訓心得（六）：我好想要錢（找工作）】：會講我自己的求職心得。等我找到工作後（應該會）再寫&lt;/p&gt;
&lt;p&gt;本系列文章純以我的觀察和想法為出發點，不一定就是實際狀況，也不帶任何批判。&lt;/p&gt;
&lt;p&gt;如果覺得資訊對你有用的話，不妨按下方拍手鼓勵一下我喔！&lt;/p&gt;
&lt;p&gt;然後我都是想到什麼就寫什麼，難免會有沒有提及到的，如果你有任何疑問，歡迎寄信至 &lt;a class=&#34;link&#34; href=&#34;mailto:jk29666338@gmail.com&#34; &gt;jk29666338@gmail.com&lt;/a&gt; 來詢問我。&lt;/p&gt;
&lt;p&gt;好，廢話都講完了，那就讓我們開始吧！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;你能繼續看到這篇文章，應該是對後端培訓真的產生一點興趣，甚至想要&lt;strong&gt;加入 backend camp&lt;/strong&gt;了吧。&lt;/p&gt;
&lt;p&gt;這篇文章就是寫給你的，最底下會有 backend camp 的招生文，歡迎自行服用。&lt;/p&gt;
&lt;p&gt;在開始正文之前，大家可以先想一件事：&lt;strong&gt;工作室最怕什麼&lt;/strong&gt;？&lt;/p&gt;
&lt;p&gt;換個說法，在做&lt;strong&gt;人才培訓的單位，最害怕什麼&lt;/strong&gt;？&lt;/p&gt;
&lt;p&gt;通常在做人才培訓的單位，都會有所謂的篩選機制。因為&lt;strong&gt;空間和人力真的有限&lt;/strong&gt;，所以需要挑選最合適的人選。&lt;/p&gt;
&lt;p&gt;而最合適是如何定義的？我認為就是「&lt;strong&gt;不會輕易放棄&lt;/strong&gt;」，試想一個人才培訓單位，只提供了三個名額，結果其中兩個第一個月就閃人，對於工作室來說，是空間浪費了；對於沒上的候選人來說，你讓他失去了一個轉職的機會。&lt;/p&gt;
&lt;p&gt;所以，&lt;strong&gt;與其說如何「通過」面談，倒不如問你自己會不會輕易放棄&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;有了這個基礎概念之後，我們再來看看可以如何準備吧。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;蒐集資訊&#34;&gt;蒐集資訊&lt;/h2&gt;
&lt;p&gt;這個其實非常籠統，如果你能找到這篇文章也算你有蒐集資訊了吧：）&lt;/p&gt;
&lt;p&gt;這裡的蒐集資訊，包含但不限於：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;了解前端、後端的不同&lt;/li&gt;
&lt;li&gt;了解工程師的起薪&lt;/li&gt;
&lt;li&gt;了解南北部工程師求職環境&lt;/li&gt;
&lt;li&gt;了解工程師的職涯規劃&lt;/li&gt;
&lt;li&gt;了解工程師常用的工具&lt;/li&gt;
&lt;li&gt;了解工作室的氛圍、培訓方式&lt;/li&gt;
&lt;li&gt;直接來好想工作室，跟 camp 裡面的人聊聊&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;因為對於程式初學者來說，其實&lt;strong&gt;後端是相對 hardcore，如果你沒先好好了解，就貿然踏入後端的世界，很有可能會放棄&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;也有些人對於工程師有過於美好的幻想，以為在這邊培訓這六個月，出去之後就是炙手可熱的人才，年薪第一年就破百。&lt;/p&gt;
&lt;p&gt;反正你必須要對軟體工程師的世界有個大概的了解，無論是看影片、看文章、問人都可以。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;動手吧&#34;&gt;動手吧！&lt;/h2&gt;
&lt;p&gt;要知道自己容不容易放棄，最快的方式就是動手做。&lt;/p&gt;
&lt;p&gt;同時，動手做也能展現你是一個有「行動力」的人。&lt;/p&gt;
&lt;p&gt;至於要做什麼、做的好不好，其實沒這麼重要。&lt;/p&gt;
&lt;p&gt;如果真的要建議的話，可以做一個簡單、可以連接資料庫的網站試試看。&lt;/p&gt;
&lt;p&gt;你可以挑一個教學影片、文章，然後自己嘗試實作。&lt;/p&gt;
&lt;p&gt;雖然你面試的時候應該會被說「阿你只會看著影片做這樣不行喔」，但至少能展現你對於軟體工程師實際上在幹嘛不是只有想像而已。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;第二層思考&#34;&gt;第二層思考&lt;/h2&gt;
&lt;p&gt;在面談或寫申請問題的過程中，&lt;strong&gt;千萬不要急著回答問題&lt;/strong&gt;，嘗試去思考問題背後有沒有其他的涵義。&lt;/p&gt;
&lt;p&gt;像我在面試的時候就不只一次跟 SoJ 說：「我思考一下。」&lt;/p&gt;
&lt;p&gt;當你說出這句的時候，不只是告訴對方給你一點點時間，同時也是展現你對這個問題的重視，你不願意隨便說出一個回答。&lt;/p&gt;
&lt;p&gt;在面談的過程中，如果真的有不知道的問題，也不要直接回答不知道。先&lt;strong&gt;設法做一些推論和假設&lt;/strong&gt;，然後再詢問 SoJ 的意見。這個跟寫程式的時候一樣，當你放棄思考的時候，你一輩子都不可能解出 bug 了，但只要你還保持思考，你總有一天會解出 bug ，而且會愈解愈快。&lt;/p&gt;
&lt;p&gt;基本上我個人的建議就是只有這三個，加入 backend camp 就是如此輕鬆又寫意。&lt;/p&gt;
&lt;p&gt;不過對於一般人來說，要執行好這三項可能就要花一個月以上了 XD&lt;/p&gt;
&lt;p&gt;順帶一提，SoJ 真的是我遇過的所有面試官裡面，說話最實在的。他問完問題會說他為什麼要問？工作室在考量什麼？而且也會語重心長的說後端不好混喔XD&lt;/p&gt;
&lt;p&gt;下面附上招生文，有興趣加入 backend camp 的歡迎去聯絡 SoJ～&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://soj0825.github.io/2023/03/27/goodideas-backend-camp-11th/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ttps://soj0825.github.io/2023/03/27/goodideas-backend-camp-11th/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（四）：我快崩潰了，怎麼辦？】&lt;/a&gt;：會講學員的心態管理。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>好想工作室 — 後端 (Backend Camp) 培訓心得（二）：backend camp 在幹嘛</title>
        <link>https://jyu1999.com/post/goodidea-mind-2/</link>
        <pubDate>Thu, 18 May 2023 19:07:31 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/goodidea-mind-2/</guid>
        <description>&lt;img src="https://jyu1999.com/post/goodidea-mind-2/4.png" alt="Featured image of post 好想工作室 — 後端 (Backend Camp) 培訓心得（二）：backend camp 在幹嘛" /&gt;&lt;p&gt;（本文同步更新在 &lt;a class=&#34;link&#34; href=&#34;https://vocus.cc/article/64284d7ffd89780001130f8b&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vocus&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.medium.com/%e5%a5%bd%e6%83%b3%e5%b7%a5%e4%bd%9c%e5%ae%a4-%e5%be%8c%e7%ab%af-backend-camp-%e5%9f%b9%e8%a8%93%e5%bf%83%e5%be%97-%e4%ba%8c-backend-camp-%e5%9c%a8%e5%b9%b9%e5%98%9b-65e930feac71&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;medium&lt;/a&gt; 上）&lt;/p&gt;
&lt;p&gt;嗨大家好，我是結語 JYu。&lt;/p&gt;
&lt;p&gt;開始撰寫這個系列的時間是 2023 四月，也是我在好想工作室 backend camp 培訓的倒數一個月，想說可以分享一些心得，給對轉職為後端工程師的人參考。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（一）：好想工作室簡介】&lt;/a&gt;：簡單介紹好想工作室。&lt;/p&gt;
&lt;p&gt;➡️&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（二）：backend camp 在幹嘛】&lt;/a&gt;：會講後端培訓的點點滴滴。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（三）：我好想進來好想】&lt;/a&gt;：會給想進 backend camp 的一些建議。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（四）：我快崩潰了，怎麼辦？】&lt;/a&gt;：會講學員的心態管理。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（五）：這麼多東西，要怎麼學最有效率？】&lt;/a&gt;：會講學員的學習技巧。&lt;/p&gt;
&lt;p&gt;【好想工作室 — 後端 (backend Camp)培訓心得（六）：我好想要錢（找工作）】：會講我自己的求職心得。等我找到工作後（應該會）再寫&lt;/p&gt;
&lt;p&gt;本系列文章純以我的觀察和想法為出發點，不一定就是實際狀況，也不帶任何批判。&lt;/p&gt;
&lt;p&gt;如果覺得資訊對你有用的話，不妨按下方拍手鼓勵一下我喔！&lt;/p&gt;
&lt;p&gt;然後我都是想到什麼就寫什麼，難免會有沒有提及到的，如果你有任何疑問，歡迎寄信至 &lt;a class=&#34;link&#34; href=&#34;mailto:jk29666338@gmail.com&#34; &gt;jk29666338@gmail.com&lt;/a&gt; 來詢問我。&lt;/p&gt;
&lt;p&gt;好，廢話都講完了，那就讓我們開始吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;我的夥伴們&#34;&gt;我的夥伴們&lt;/h2&gt;
&lt;p&gt;進到工作室後，首抽就是跟你同 camp 的戰友。&lt;/p&gt;
&lt;p&gt;可別小看這群夥伴，在你解一個 bug 解一天還解不出來、做一個作業做一個月還做不完的時候，有人陪你一起耍蠢(X) 試錯(O) 其實是很重要的事情。&lt;/p&gt;
&lt;p&gt;在我們這屆，成員橫跨 20 出頭歲的菜鳥大學生，到 40 幾歲小孩已經上國中的父親。這些人不約而同的聚集在這裡，目的都只有一個：成為後端工程師。這就是所謂的共時性（X&lt;/p&gt;
&lt;p&gt;這群戰友們或多或少都有受過社會的洗禮，知道自己要的是什麼。而且可以很明顯的感覺到，有些人是抱持著「這是我人生中最後一次任性的決定」而出現在這裡的。&lt;/p&gt;
&lt;p&gt;不像高中大學的學生，眼前還有很多道路去給他們慢慢探索。這些人的目標非常純粹，因此，做起事來就是&lt;strong&gt;不遺餘力&lt;/strong&gt;。常常看到有人半夜、假日還在線上，在解決程式問題。&lt;/p&gt;
&lt;p&gt;我一直都很佩服我這些同儕們，也從他們身上學到很多東西。雖然這樣講有點肉麻，但能跟他們一起培訓，真的是我這六個月覺得最幸運也最幸福的事情。（寫到這邊突然開始眼框泛淚…&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;我的-mentor&#34;&gt;我的 mentor&lt;/h2&gt;
&lt;p&gt;SoJ 大大是目前後端的 mentor，SoJ 其實不常出現在工作室，但也是 Backend Camp 的靈魂人物之一。&lt;/p&gt;
&lt;p&gt;首先說說他的管理風格好了，基本上是什麼都不管。這六個月我有印象的只有三個作業吧。他本人出現的次數也是很少。&lt;/p&gt;
&lt;p&gt;說他什麼都不管其實不是在臭他，他也不是真的對我們漠不關心。相反，無論我們問他什麼，他總是用最快的速度回答，而且有問必答，不厭其煩。&lt;/p&gt;
&lt;p&gt;我非常非常喜歡他的管理風格，我認為這樣才是&lt;strong&gt;真正符合自學的精神&lt;/strong&gt;。據我所知其他 camp 的規定就稍微比較嚴格，作業也相對多，非常的不適合我。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;培訓的日子怎麼過的從微觀到巨觀&#34;&gt;培訓的日子怎麼過的？從微觀到巨觀&lt;/h2&gt;
&lt;p&gt;我想要用 天 → 週 → 月 的順序，來說說我的後端培訓之旅。&lt;/p&gt;
&lt;h3 id=&#34;天&#34;&gt;天&lt;/h3&gt;
&lt;p&gt;基本上每天早上八點到十點半之間要進到工作室，下午五點到八點之間離開。能待多久，全看個人狀況決定，mentor 主要會看你的&lt;strong&gt;學習成果&lt;/strong&gt;來判斷你是否認真學習，而不是時數。&lt;/p&gt;
&lt;p&gt;當然也是不建議特立獨行，什麼半夜來中午走之類的。我個人在前期通常都會在 10 點多到，後期因為睡覺時間開始不受控制，有時候會看日出…所以可能 11 點多才會到。我通常是在晚上六七點走。&lt;/p&gt;
&lt;p&gt;每天到這邊之後就是打開電腦，自己想一下現在要學什麼，就開始進行。如果真的很悶，也可以起來&lt;strong&gt;看看其他同儕在幹嘛&lt;/strong&gt;，請他們跟你分享，彼此交流意見。這個方法除了可以讓你很快跟別人混熟之外，因為每個人研究的面向都不一樣，你或許能從其他人的學習之中，得到一些新的靈感或想法。&lt;/p&gt;
&lt;p&gt;真的遇到問題，可以去找進駐者、mentor 或和同儕討論都可以。我自己蠻&lt;strong&gt;推薦大家先跟同儕討論&lt;/strong&gt;的，就算同儕不會，至少你們能一起找尋資料，這個過程其實也可以讓你觀察其他人是怎麼解決問題的，然後設法把好的學習起來。直接找進駐者或 mentor 的話當然也可以，但是你就少了「找尋答案」的過程，我認為會比較可惜。&lt;/p&gt;
&lt;p&gt;因此，我自己的判斷基準是，如果一個 bug 卡了超過半小時，然後同儕討論都無解，我才會去問 mentor。&lt;/p&gt;
&lt;p&gt;同樣，如果你的同儕來問你問題，我個人建議&lt;strong&gt;完全不要藏私&lt;/strong&gt;，也不要因為忙就推辭掉，因為這是一個很好的學習機會。&lt;/p&gt;
&lt;p&gt;著名的諾貝爾物理學獎得主 Richard Feynman 曾說過：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你不能向其他人簡單地解釋一件事，那麼你就是還沒有真正弄懂它。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;當其他人來問你問題的時候，你可以試著解釋你的理解。然後你就會驚奇的發現，在解釋的過程中，你其實有些地方講的並不清楚，就&lt;strong&gt;更知道自己哪裡需要加強&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;為什麼我會這麼清楚這件事情呢？因為我畢竟算有資訊背景，比其他人提早開始寫程式，對於程式的理解也比較深。所以在前四個月大家研究的東西還差不多的時候，大家有問題都會來問我。&lt;/p&gt;
&lt;p&gt;其實如果可以的話，最好要能「主動分享」，你可以在聊天室裡面說你今天學了什麼，試著跟大家解釋你的所學。如果主題較多的話，你也可以直接召開會議。像我就有做簡報跟後端的學員講解物件導向、演算法、時間複雜度等等。&lt;/p&gt;
&lt;h3 id=&#34;週&#34;&gt;週&lt;/h3&gt;
&lt;p&gt;每週一到五都是要出現的，當然臨時有事可以跟 mentor 請假。&lt;/p&gt;
&lt;p&gt;六日的話，想來也可以來。&lt;/p&gt;
&lt;p&gt;每週四會有一個活動「想知道嗎？」，開放工作室所有人，可以上台做一些分享，內容不拘。也沒有強迫觀眾一定要聽，反正不想聽的耳機掛著做自己的事情就好。&lt;/p&gt;
&lt;p&gt;說到每週固定活動，我自己有參與一個「Javascript 讀書會」。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/goodidea-mind-2/1.JPG&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://jyu1999.com/post/goodidea-mind-2/1_hucc5e165d0d237c9aed99c8400e408cdf_990839_480x0_resize_q75_box.JPG 480w, https://jyu1999.com/post/goodidea-mind-2/1_hucc5e165d0d237c9aed99c8400e408cdf_990839_1024x0_resize_q75_box.JPG 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我講「想知道嗎？」&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;這個讀書會的起源也蠻奇妙的，就是一個某一位前端培訓（Frontend Camp）的成員一起被安排去倒垃圾，無意間她跟我提到的。我一聽就覺得蠻有興趣的，畢竟 JS 算是這幾天最火熱的語言沒有之一。&lt;/p&gt;
&lt;p&gt;讀書會的形式也類似於想知道嗎，反正就是挑自己有興趣的 JS 主題進行分享，如果有什麼專案也可以拿出來講。在這個過程中，也可以聽到前端是怎麼思考的，我自己是受益良多。&lt;/p&gt;
&lt;p&gt;所以我也蠻鼓勵大家不只是認識自己 camp 的成員們，也多去跟其他 camp 的人聊聊天，認識一下，甚至一起做事。畢竟後端以後大概率就是會需要跟前端合作嘛XD&lt;/p&gt;
&lt;h3 id=&#34;月&#34;&gt;月&lt;/h3&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;上一篇文章&lt;/a&gt;有提到，我比其他 camp 成員慢一個月進來。&lt;/p&gt;
&lt;p&gt;據他們所說，他們那個月基本上都在練英文打字、學習安裝環境和版本管理。&lt;/p&gt;
&lt;p&gt;打字速度對於工程師來說頗重要的，不只是在寫程式，有時候下一些指令、去網路上找資料也是要用英文找。我們主要是使用 &lt;a class=&#34;link&#34; href=&#34;https://www.ratatype.com/typing-test/test/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;ratatype&lt;/a&gt; 來練習，有興趣的可以去測一下自己的英打速度XD&lt;/p&gt;
&lt;p&gt;不過我的狀況算比較特殊，我英打本來就比較快，正常打文章就有 5X/wpm，如果是寫程式的話更快。安裝環境我是在進去之前，mentor 就告訴我可以先裝，所以我在週末就先裝好了。而版本管理也是之前在學校有稍微用過。&lt;/p&gt;
&lt;p&gt;再來第二個月會開始學習後端程式語言的語法，我們是使用 PHP。除此之外也會接觸到用來操作資料庫的語法 SQL。&lt;/p&gt;
&lt;p&gt;在這邊就是痛苦的開始了，你會遇到數不清的 bug，和想破頭都想不出來的問題。&lt;/p&gt;
&lt;p&gt;其實後面在學什麼已經沒這麼重要了，因為隨著大家摸索的愈來愈多，想學的東西也會逐漸出現分歧。&lt;/p&gt;
&lt;p&gt;所以在這裡我想來著重提一個概念：解決問題。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;解決問題&#34;&gt;解決問題&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;培訓六個月，不會讓你變成強者，但至少會讓你能「解決問題」。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;這是我在面試 backend camp 的時候，SoJ 跟我說的話。&lt;/p&gt;
&lt;p&gt;而我也非常認同。&lt;/p&gt;
&lt;p&gt;六個月的期間，從一開始，你的 bug 會多到根本不知道從何問起，不懂的地方就算別人講完你可能也聽不懂。&lt;/p&gt;
&lt;p&gt;到後來，你開始會慢慢可以組織問題，至少知道要怎麼樣去問別人。這時候別人有可能會給你一個非常重要的東西：「關鍵字」。&lt;/p&gt;
&lt;p&gt;接著，隨著你的「關鍵字」愈來愈多，你開始能自己上網 google 找到解答。但你卻不一定看得懂。&lt;/p&gt;
&lt;p&gt;之後，你開始能看懂解答到底在說什麼，你也有能力把問題描述清楚了。&lt;/p&gt;
&lt;p&gt;最後，也是最理想的狀態：當你遇到一個問題時，你能做出多種不同的推論。並把這些推論拆解成一個一個關鍵字，然後利用這些關鍵字上網搜尋，很快的找到答案並解決問題。&lt;/p&gt;
&lt;p&gt;當你到達最後一個階段的時候，我個人認為你已經可以說自己是一個 junior 的後端工程師了。&lt;/p&gt;
&lt;p&gt;「解決問題」事實上非常難以量化，卻是一個工程師最基礎的能力。&lt;/p&gt;
&lt;p&gt;「解決問題」聽起來也非常簡單，背後卻需要很多很多的努力。&lt;/p&gt;
&lt;p&gt;為了要解決問題，你必須要有足夠的基礎知識，否則根本不知道如何下關鍵字，也不知道錯在哪。&lt;/p&gt;
&lt;p&gt;為了要解決問題，你必須要有一定的英文閱讀能力，才不會 error message 看不懂，網路文章也看不懂。&lt;/p&gt;
&lt;p&gt;為了要解決問題，你必須要善用工具，無論是 chatgpt，或是其他的偵錯工具，幫助你知道問題在哪裡。&lt;/p&gt;
&lt;p&gt;為了要解決問題，你必須要會拆解問題，有些問題範圍太大、環環相扣，是難以找到解答的。&lt;/p&gt;
&lt;p&gt;為了要解決問題，你必須要放下面子，有時候趕快承認自己不會，不齒下問，會幫助你省下很多時間。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;學習是快樂的&#34;&gt;學習是快樂的&lt;/h2&gt;
&lt;p&gt;最後，我想在這裡特別提這件事情。&lt;/p&gt;
&lt;p&gt;或許是台灣的教育環境所導致吧，我們說「學習」常常就會想到挑燈夜戰或懸樑刺股之類的成語，好像學習是一件非常刻苦的事情。&lt;/p&gt;
&lt;p&gt;工作室有些人也是抱持著這樣的想法，為了學寫程式，拋棄了生活中很多東西，想辦法把全部時間都投資在寫程式上面。&lt;/p&gt;
&lt;p&gt;我自己是對這些人感到佩服，但除非走投無路，不然我絕對不會採取這樣的作法。&lt;/p&gt;
&lt;p&gt;學習，尤其是對於軟體工程師來說，是一輩子的事情。而一件事要做一輩子，你要熱愛這件事情，也要能 Strike the balance between work and play。&lt;/p&gt;
&lt;p&gt;不僅如果你總是把自己逼的很緊，學習的效率會不好，而且當你遇到困難時，你有很大的機率會堅持不住。&lt;/p&gt;
&lt;p&gt;在寫程式這條路上，我有好幾次就是在電腦前從早坐到晚，從禮拜一坐到禮拜天，解不出來就是解不出來。然後就會開始想要放棄、開始擺爛。&lt;/p&gt;
&lt;p&gt;當然，我也不是鼓勵大家隨便學學。你還是要保有基本的學習態度，但在學程式之餘也別忘了多享受一下生活喔 : )&lt;/p&gt;
&lt;p&gt;如果對心態管理有興趣的，我會在&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;第四篇&lt;/a&gt;的時候提及。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（三）：我好想進來好想】&lt;/a&gt;：會給想進 backend camp 的一些建議。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>好想工作室 — 後端 (Backend Camp) 培訓心得（一）：好想工作室簡介</title>
        <link>https://jyu1999.com/post/goodidea-mind-1/</link>
        <pubDate>Thu, 18 May 2023 16:34:03 +0800</pubDate>
        
        <guid>https://jyu1999.com/post/goodidea-mind-1/</guid>
        <description>&lt;img src="https://jyu1999.com/post/goodidea-mind-1/4.png" alt="Featured image of post 好想工作室 — 後端 (Backend Camp) 培訓心得（一）：好想工作室簡介" /&gt;&lt;p&gt;（本文同步更新在 &lt;a class=&#34;link&#34; href=&#34;https://vocus.cc/article/64282945fd89780001119de4&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;vocus&lt;/a&gt; 和 &lt;a class=&#34;link&#34; href=&#34;https://jyu1999.medium.com/%E5%A5%BD%E6%83%B3%E5%B7%A5%E4%BD%9C%E5%AE%A4-%E5%BE%8C%E7%AB%AF-backend-camp-%E5%9F%B9%E8%A8%93%E5%BF%83%E5%BE%97-%E4%B8%80-%E5%A5%BD%E6%83%B3%E5%B7%A5%E4%BD%9C%E5%AE%A4%E7%B0%A1%E4%BB%8B-e484bb7993f2&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;medium&lt;/a&gt; 上）&lt;/p&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;嗨大家好，我是結語 JYu。&lt;/p&gt;
&lt;p&gt;開始撰寫這個系列的時間是 2023 四月，也是我在好想工作室 backend camp 培訓的倒數一個月，想說可以分享一些心得，給對轉職為後端工程師的人參考。&lt;/p&gt;
&lt;p&gt;➡️&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-1/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（一）：好想工作室簡介】&lt;/a&gt;：簡單介紹好想工作室。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（二）：backend camp 在幹嘛】&lt;/a&gt;：會講後端培訓的點點滴滴。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-3/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（三）：我好想進來好想】&lt;/a&gt;：會給想進 backend camp 的一些建議。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-4/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（四）：我快崩潰了，怎麼辦？】&lt;/a&gt;：會講學員的心態管理。&lt;/p&gt;
&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-5/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（五）：這麼多東西，要怎麼學最有效率？】&lt;/a&gt;：會講學員的學習技巧。&lt;/p&gt;
&lt;p&gt;【好想工作室 — 後端 (backend Camp)培訓心得（六）：我好想要錢（找工作）】：會講我自己的求職心得。等我找到工作後（應該會）再寫&lt;/p&gt;
&lt;p&gt;本系列文章純以我的觀察和想法為出發點，不一定就是實際狀況，也不帶任何批判。&lt;/p&gt;
&lt;p&gt;如果覺得資訊對你有用的話，不妨按下方拍手鼓勵一下我喔！&lt;/p&gt;
&lt;p&gt;然後我都是想到什麼就寫什麼，難免會有沒有提及到的，如果你有任何疑問，歡迎寄信至 &lt;a class=&#34;link&#34; href=&#34;mailto:jk29666338@gmail.com&#34; &gt;jk29666338@gmail.com&lt;/a&gt; 來詢問我。&lt;/p&gt;
&lt;p&gt;好，廢話都講完了，那就讓我們開始吧！&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;好想工作室&#34;&gt;好想工作室？&lt;/h2&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/goodidea-mind-1/1.webp&#34;
	width=&#34;225&#34;
	height=&#34;225&#34;
	srcset=&#34;https://jyu1999.com/post/goodidea-mind-1/1_huaa350ea6dd52b4e70d1da18adc3880c4_3978_480x0_resize_q75_h2_box_2.webp 480w, https://jyu1999.com/post/goodidea-mind-1/1_huaa350ea6dd52b4e70d1da18adc3880c4_3978_1024x0_resize_q75_h2_box_2.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;好想工作室的 logo&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;100&#34;
		data-flex-basis=&#34;240px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;如果你是透過搜尋而找到這篇文章，想必你早已知道好想工作室在幹嘛了，但這裡我還是快速說明一下。&lt;/p&gt;
&lt;p&gt;好想工作室是一個「資訊聚落」，目前位於台南火車站旁。&lt;/p&gt;
&lt;p&gt;裡面主要存在三種人，一種是「進駐者」，意指那些有著&lt;strong&gt;全職資訊相關工作&lt;/strong&gt;的人。他們&lt;strong&gt;付費&lt;/strong&gt;租借了一個工作室的位置，在工作室裡面工作。&lt;/p&gt;
&lt;p&gt;第二種人是「學員」，學員是指那些&lt;strong&gt;想要成為軟體工程師&lt;/strong&gt;，正在&lt;strong&gt;全職進行培訓&lt;/strong&gt;的人。&lt;/p&gt;
&lt;p&gt;第三種是「mentor」，就是&lt;strong&gt;引導學員學習&lt;/strong&gt;的天使們XD&lt;/p&gt;
&lt;p&gt;這樣說的話，好想工作室有點類似一個，co-working space 和 教育機構的綜合體，不過只限定資訊領域，因此，我才會說他是一個「資訊聚落」。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;軟體工程師培訓&#34;&gt;軟體工程師培訓？&lt;/h2&gt;
&lt;p&gt;好想工作室非常佛心的提供了&lt;strong&gt;免費&lt;/strong&gt;的軟體工程師培訓，根據專業不同，分為四個 camp：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;前端：主要負責一個網頁中你看得到的部分。&lt;/li&gt;
&lt;li&gt;後端：主要負責一個網頁的後台。&lt;/li&gt;
&lt;li&gt;Android：寫 android 手機的 app&lt;/li&gt;
&lt;li&gt;IOS：寫 IOS 系統的 app&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;每次培訓會是&lt;strong&gt;六個月&lt;/strong&gt;，在這六個月的期間完全免費。在這六個月當中你必須在好想工作室裡面&lt;strong&gt;全職自學&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;但資訊領域博大精深，如果六個月學不完也不用擔心，如果學習態度良好，可以跟 mentor 討論成為「付費學員」，繼續在好想工作室學習。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;自學&#34;&gt;自學？&lt;/h2&gt;
&lt;p&gt;初來乍到的人也許會想：「我看其他的培訓營都有課綱、都有老師上課，自學真的學的會嗎？」&lt;/p&gt;
&lt;p&gt;其實我從小到大的學習歷程就很討厭一句話：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;你就先學，總有一天你會用到的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;在現代社會中，我們光是學「會用到的東西」，就算拼進全力也未必學的完了，更何況是去學「總有一天」會用到的東西。&lt;/p&gt;
&lt;p&gt;而自學的好處就在此，沒人告訴你要學什麼，也意味著你能挑真正對你有用的東西來學。&lt;/p&gt;
&lt;p&gt;沒有老師上課，在網路世界早已不是一個理由。除非領域真的特別偏門或新穎，不然以軟體工程師來說，youtube 隨便一個程式語言，可能就有幾百個課程，等於你實質上有幾百個老師可以教你。&lt;/p&gt;
&lt;p&gt;如果你需要作業，也有人針對語言設計了互動式的網頁和題目可以給你練習，甚至你可以直接請 chatgpt 幫忙出作業。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/post/goodidea-mind-1/2.webp&#34;
	width=&#34;720&#34;
	height=&#34;630&#34;
	srcset=&#34;https://jyu1999.com/post/goodidea-mind-1/2_hu42a0d9d79f4ef82988d1faf20393aa0f_34296_480x0_resize_q75_h2_box_2.webp 480w, https://jyu1999.com/post/goodidea-mind-1/2_hu42a0d9d79f4ef82988d1faf20393aa0f_34296_1024x0_resize_q75_h2_box_2.webp 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;chatgpt 幫忙出測驗題&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;114&#34;
		data-flex-basis=&#34;274px&#34;
	
&gt;&lt;/p&gt;
&lt;p&gt;可能又有人會問：「那我怎麼知道哪些東西重要？」&lt;/p&gt;
&lt;p&gt;但我認為「找重點」的能力本來就是一個軟體工程師必備的技能。就像我們寫程式 debug 的時候會需要分析錯誤，再設法解決。對自己也是一樣，身為軟體工程師，我們也要時時刻刻分析自己，看見自己的不足，而這些「不足」就是我們需要學習的重點。&lt;/p&gt;
&lt;p&gt;至於要怎麼分析？要怎麼針對自己的不足逐一改善？我在後面的文章也許會提。&lt;/p&gt;
&lt;p&gt;總而言之，自學是一個軟體工程師的必備技能，而如果能在工作前就能鍛鍊這個技能，不香嗎？&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;我怎麼會在好想工作室&#34;&gt;我怎麼會在好想工作室？&lt;/h2&gt;
&lt;p&gt;因為我的背景也和之後培訓的過程息息相關，因此在這裡我想先提我是怎麼入教的。&lt;/p&gt;
&lt;p&gt;2022 年我大學畢業之後，想找後端工程師的工作。但由於我不是純資訊科系出生的，在學校只有修過少少、不到三十學分資工系的課。於是我便告訴自己，要利用畢業後這一年，好好學習後端相關技能。&lt;/p&gt;
&lt;p&gt;一開始我是在 udemy 找課程，學習全端。但學沒多久我就發現效果不佳，不是因為內容太難我不會，而是缺乏別人可以討論和交流。當時的我對前後端都一無所知，也還不知道網路上大概有哪些資源可以善用。&lt;/p&gt;
&lt;p&gt;於是我開始尋找資訊培訓的機會，一開始是找到台北的 Appworks School，但沒有錄取。後來在入伍前一個禮拜，我赫然發現台南也有人在做資訊培訓，身為台南人的我狂喜。但猛一看早已超過報名期限。&lt;/p&gt;
&lt;p&gt;軍中的五天，我思索之後決定嘗試直接到好想工作室成為「進駐者」，等於是把好想工作室當 K 書中心的概念XD&lt;/p&gt;
&lt;p&gt;實際跟工作室的人見面之後，她告訴我要成為進駐者必須要有資訊相關工作，建議我可以先從學員開始，並鼓勵我寄信去問問看 mentor。&lt;/p&gt;
&lt;p&gt;後來我跟 mentor 聊過之後，他認為我三觀還算端正，也算願意學習，就讓我加入了 backend camp。&lt;/p&gt;
&lt;p&gt;於是，我比後端 camp 的其他成員晚一個月開始培訓，也要比大家晚一個月走QQ&lt;/p&gt;
&lt;p&gt;培訓的辛酸血淚史也從這邊開始了…&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;下一篇：&lt;a class=&#34;link&#34; href=&#34;https://jyu1999.com/post/goodidea-mind-2/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;【好想工作室 — 後端 (backend Camp)培訓心得（二）：backend camp 在幹嘛】&lt;/a&gt;：會講後端培訓的點點滴滴。&lt;/p&gt;
</description>
        </item>
        <item>
        <title>About</title>
        <link>https://jyu1999.com/about/</link>
        <pubDate>Thu, 18 May 2023 16:31:17 +0800</pubDate>
        
        <guid>https://jyu1999.com/about/</guid>
        <description>&lt;img src="https://jyu1999.com/about/1.png" alt="Featured image of post About" /&gt;&lt;h2 id=&#34;about-me&#34;&gt;About me&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你是 recruiter 或 headhunter，建議直接去看我的履歷，以下內容跟專業相關不高。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Hi, 我是 結語JYu。目前在森淨科技擔任後端工程師，主要開發語言/框架為 Ruby/Rails。 同時，我也在好想工作室 Backend Camp 擔任小 mentor。&lt;/p&gt;
&lt;p&gt;現在主要在學習與鑽研的方向為網頁開發，包含但不限於前後端技術、資料庫設計與優化、系統設計、分散式系統設計等等。&lt;/p&gt;
&lt;p&gt;很喜歡運動，特別喜歡可以一個人進行的，像是重訓、慢跑、跳繩、騎腳踏車之類的。偶爾也會去打格鬥，以踢拳擊和柔道為主。&lt;/p&gt;
&lt;p&gt;很喜歡看書，尤其是在心情低落的時候。比較常看的是人文社科類的書，最喜歡的作家是張曼娟老師和簡媜老師。&lt;/p&gt;
&lt;p&gt;很喜歡音樂，大多的時候都只有聽，但千萬不要問我歌名或演奏者，我一定不知道XD。有時候也會唱歌或拉小提琴，然後用 GarageBand 做一些簡單的作品，有興趣可以看看 demo XD～
&lt;div class=&#34;video-wrapper&#34;&gt;
    &lt;iframe loading=&#34;lazy&#34; 
            src=&#34;https://www.youtube.com/embed/92jj1wFo6NA&#34; 
            allowfullscreen 
            title=&#34;YouTube Video&#34;
    &gt;
    &lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;大多數的時候喜歡安靜做自己的事情，但也很喜歡分享和交流。這也是為什麼我會在好想工作室擔任小 mentor。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://jyu1999.com/about/2.png&#34;
	width=&#34;4032&#34;
	height=&#34;3024&#34;
	srcset=&#34;https://jyu1999.com/about/2_hu0a29bb759d812d45405f271e0701fd28_7772993_480x0_resize_box_3.png 480w, https://jyu1999.com/about/2_hu0a29bb759d812d45405f271e0701fd28_7772993_1024x0_resize_box_3.png 1024w&#34;
	loading=&#34;lazy&#34;
	
		alt=&#34;我在好想工作室分享自己的知識管理系統&#34;
	
	
		class=&#34;gallery-image&#34; 
		data-flex-grow=&#34;133&#34;
		data-flex-basis=&#34;320px&#34;
	
&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;about-this-blog&#34;&gt;About This Blog&lt;/h2&gt;
&lt;p&gt;我從以前就有寫文章的習慣，最開始是在 medium 寫，但後來 medium 的 SEO 政策改變，讓搜尋引擎幾乎無法搜到文章，後來轉到 vocus 平台試用一陣子。&lt;/p&gt;
&lt;p&gt;但某天突然覺得，「那如果 vocus 的政策又改了呢」，於是就興起了自己架部落格的念頭。&lt;/p&gt;
&lt;p&gt;搜尋了許多架站的方法，包括使用框架、買現成的服務、架靜態網站等等，最後評估後，覺得我不需要資料庫，也熟悉 markdown 語法，不如就選用號稱速度很快的 hugo 吧。&lt;/p&gt;
&lt;p&gt;於是這個網站就這樣誕生了。&lt;/p&gt;
&lt;p&gt;不知道正在看這篇文章的你，覺得這個網站如何呢？有任何覺得可以更好的地方，或是有任何疑問，歡迎來信 &lt;a class=&#34;link&#34; href=&#34;mailto:jk29666338@gmail.com&#34; &gt;jk29666338@gmail.com&lt;/a&gt; 來討論交流～&lt;/p&gt;
&lt;h3 id=&#34;about-this-theme&#34;&gt;About This Theme&lt;/h3&gt;
&lt;p&gt;這個 Theme 是 hugo stack，當初瀏覽 hugo 的 theme，發現這個有 Categories 和 Tags 的功能，所以選擇這個當作我的基底。&lt;/p&gt;
&lt;p&gt;不過現在正在想辦法美化當中，不然每個人的網站都長得一樣 XD&lt;/p&gt;
&lt;h3 id=&#34;todo&#34;&gt;Todo&lt;/h3&gt;
&lt;p&gt;這個網站仍有許多可以實現的功能 or 優化的地方，以下將其列出，期待有一天我慢慢實現XD&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 整合後端
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章按讚功能&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章留言功能&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;blockquote&gt;
&lt;p&gt;後端的部分目前是考慮用 Strapi 等 Headless 的 CMS 工具來做，不太想自己手刻後端。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 外觀
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 首頁動畫&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 字體、背景修改&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Article View 優化
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 中文字數計算&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 可以預估 Reading Time&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 支援中英文切換
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 若無英文版則自動翻譯&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; List View 優化
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 置頂文章&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章排序功能且支援 Pagination&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 整合 Obsidian
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; Content Graph View&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 文章的 Last Modified Date 自動生成&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 整合 GA 數據
&lt;ul&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 首頁顯示觀看人數&lt;/li&gt;
&lt;li&gt;&lt;input disabled=&#34;&#34; type=&#34;checkbox&#34;&gt; 每篇文章顯示觀看人數&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;感謝&#34;&gt;感謝&lt;/h2&gt;
&lt;p&gt;這個網站的誕生，是受到很多人的鼓勵和啟發。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://www.linkedin.com/in/tzushenghung/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Gary&lt;/a&gt;：以前清大商研社的社長，我一開始寫 medium 文章就是因為他。&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://soj0825.github.io/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;SoJ&lt;/a&gt;：好想工作室 Backend Camp 的 mentor，教我怎麼用 GA 😂&lt;/li&gt;
&lt;li&gt;Ray：好想工作室 Web Camp 的學員，幫我解惑很多前端的問題。&lt;/li&gt;
&lt;/ul&gt;
</description>
        </item>
        <item>
        <title>Search</title>
        <link>https://jyu1999.com/page/search/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://jyu1999.com/page/search/</guid>
        <description></description>
        </item>
        
    </channel>
</rss>
